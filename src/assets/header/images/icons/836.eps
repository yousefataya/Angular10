%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: banner_on_blue_bg_05.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/17/2019
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 24465 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9A9
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A995B7B7B7A2AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85C4FD06B7A2AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AFA8A984A2B7B78FB7B2B785AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9AFA9AFA9AF85A9FD04B7
%B2A985AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85857EA9A9AFA9AFA9AFA9AF85
%A984A984A28FB78FB79CAF85A985AF85A985AF85A985AF85A985AF85AF85
%AFA9AF85AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85855A2F2F5A
%84AFA9AFA9AFA9AFA9A984A985B78FB78FA285AF85AF85AF85AF85AF85AF
%85AF85AF85AFFD06FFA9AF85AF85AF85AF85AF85AF85AF85AF8585AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF8585
%5A2F0606062F5AAFA8AF85A984A984857E8595B78E9585A985AF85A985AF
%85A985AF85A985AF85AFFD08FF85AF85A985AF85A985AF85A985AF85A9AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF5A84062F062F062F7EFFA9AFA9AF85A984A9849C8FBEA9AF85AF85AF
%A9FFFFAF85AF85AF85AF85AFFD08FFA9AF85AF85AF85AF85AF85AF85AF85
%AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF857E2F2906280629538484AF85A984A984857E8595A385AF85A9
%85AF85FF85AF85A985AF85A985AF85FD07FFA9A985AF85A985AF85A985AF
%85A985AF85A9AF85AF85AF85AF85AF85AF85845A852F5A2F5A5A302F3685
%5A2F5A84302FAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF5A5A062F06297EFFAF7EA9AFA9A984A9858578AF85
%AF85AF85AF85FD05AF85AF85AF85AF85AFFD06FF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF8585A985AF85A985AF85A985AFFD045A7E2F5A5A2F85
%2F852F2F5A5A2FA985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A98585590606297EAFA9AF848584A984857E855A5A
%85AF85A985AF85A985FF85A985AF85A985AF85AFFD04FFA9AF85A985AF85
%A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85855A85
%2F842FAF855A845A855A2F5A84305AAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AFA9AF85AF85AF85AF85AF85AF85A8062F295A7EFFAFFF5AFF
%85A984A95A5A5AAF85AF85AF85AF85AF85AF85AF85AF85AF85AFFD04FFA9
%AF85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AF8585A985AF85A985AF
%85A985AF5A5A7E5A842F5A7E2F852F7E5A2F5A852FA985AF85A985AF85A9
%85AF85A985AF85A985AF85AFA9AFA9AF85AF85A985AF85A985AF5A530629
%2F5A845A062F84AF84855A5A365A85AF85A985AF85AF85AF85A985AF85A9
%85AF85FFFFAFA9AF85AF85A985AF85A985AF85AF85AF85A985AF85A985AF
%AF85AF85AF85AF85AF85AF85855A842F7E5A5A857E85842F855A855A5A5A
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AFA9AF85AF85
%AFA9AF8585A829062F2F29062F298585A985855A5A5AFFAFFFFFAFA9AF85
%AF85AFA9AF85AF85AF85AFA9AF85AFA9AF85AF85AF85AFA9AFA9FF85AFA9
%AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AF85A9
%85AF85A985AF85AF85AF85A9847E53060629060606295AA984AF847E305A
%A9A985AFAFA985AF85A985AF85AF85AFA9AF85AF85A985AF85AF85AF85AF
%85AFAFAFA9AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AFAFAF85AF85AF85AF85AF85AFAFAFA9AF85AF85AF85A82F2F062F062F06
%85A9FFFF855A5B5A8585AF85FFAFAF85AF85AF85AFA9FFAFAFA9AF85AF85
%AF85AF85AFAFAF85AFAFAF85FFAFAF85AFA9AF85AF85AF8585AF85A985AF
%85A985AF85A9A9AFA9AFA9AF85FFA9AFA9AF85FFA9AFA9AFA9FFA9AFA9AF
%A9FF85AFA9AFA9AFA9AFAFFFA9AFA9A985AF85AFA9AF85AFA9AF85A985AF
%5A842E290628062F84FFA9AF5A5A306160855A85AFAF85AF85A985AFA984
%2F532F5AA8AF85A985AF85AFA9AF85AF85FF85A9A9AF85A985AF85A985AF
%85A9AF85AF85AF85AF85AF85AF85FFAFFFAFFFFFAFFD0AFFAFFFFFFFA9FF
%FFFFAFAFAFFFAFFD08FFAF85AF85AFA9AF85AF85AFA9AF85AF85AF84847E
%53062F2FAFAFAF85855A5A608561AFAFAFA9AF85AF85AF84590629062906
%2F7EFFA9AFA9AFA9AF85AF85AFFFAFAFFF85AFA9AF85AF85AF85AF8585A9
%85AF85A985AF85A985AF85AFA9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85A985AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85A985AF85A9
%85AF85AFA9AF845A595A3685858560615A855A6184FFA8855A8585AF85AF
%530606280606062806062884A9AF85AF85A985AF85AFA9FF85AF85AF85A9
%85AF85A985AFAF85AF85AF85AF85AF85AF85AFAFFFAFFFAFFFAFFFAFAFAF
%FFAFAFAFFFAFAFAFFFA9FFAFFFAFFFAFFFA9FFAFFFA9FFAFAF85AFAFAFA9
%AF85AF85AF85AF85AFAFAFA9AF85AFAFFF85AF8585618560856185AFFF85
%8560AF85AFA9842829062F062F282F0629062F065AA9AFA9AF85AF85AF85
%AFAFAFA9AF85AF85AF85AF85AF8585A985AF85A985AF85A985AFA9FFA9FF
%AFFD05FFA9FFAFFFA9FFFFFF85FFFFAFA9FFAFFFFFFFAFAFA9FFFFFFA9FF
%A9AF85AF85AFA9AF85A985AF85AFA9AF85A9A9FFFFFF85AF84855A856085
%5AAFFF855A8585A985AF7E532828060606287EFF592F06060629062959AF
%A9A985AF85AFA9AF85AFA9AF85A985AF85A985AFAF85AF85AF85AF85AF85
%AF85AF85AFA9AF85AF85AFAFAF85AFA9AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AFA9AFA9AF85AF85AF85AFA9AF85AF85AFA9AF85AF85AFFFFFA9
%8560856185608585FF8585618585C5BEFD05B78FB7714D06292FA8282F06
%29062F06292885AFAFA9AFA9AF85AF85AF85AF85AF85AF85AF8585AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AFA9A985AF85A985AF85A985AFA9AF85AF85A9
%85AFA9AF84855A615A855A85A8AF60615A85A2B7B2B7B2B78FB78FB78EB7
%8F8F462806060628060606290606062F84AF85AF85A985AF85A985AF85A9
%85AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85A9A2A9A2A9A2A9A2A9A2A9A2CBA2A9A9AF85AF85AF85
%AFAFAFA9AF85AF85AF85AFFF8B6185608585FFAFAF618585AF9CB7B7B8FD
%06B7B2B7B2B78FB76B29062F0629062F062F062F062F53AFAFAF85AF85AF
%85AFAFAF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A984BEB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B77E
%A985AF85AF85AF85A9A9AF85A985AF8585AFAF85A9A8FF84855A8585AFA2
%B7B7B7B2B7B7B7BDCBC4B78FB78FB28EB228060629060606290628062906
%28067EA9AF85AF85AF85AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AFA9FD04AFFF85FFAFC4B7B7B7C4C4CBCBCBC4FFCA
%CBCACBB7B7B7BE85AFA9AF85AF85AF85AF85AFAFAF85AF618584AF858560
%8585AF85AFA99BFD05B7BECAFFFFFFBEB78FB78FB78F950629062F062906
%952829062F0629062F84AFA9AFA9AF85AF85AF85AF8585A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85AF85AFAFAFA9FF9CB7B2B7C4C4
%C4FFC4C4FFCBCACBC4B7B7B795AFA9A985AF85A985AF85A985FFA9AF8585
%60615A855A8584AFA9AF53289BB7B2B7B2B7FD06FF8FB78EB28E8F952806
%0606292FAF77B770060629060606292FA9A9AF85A985AF85A985AFAF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%9BB8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7CBA9AFA9AF85AF85AF85AFFFFF
%FFAFA9FFA9AF85AF85AF85AFAF84282806C4B7B8B7B7B7C4C4CBCAFFFFBE
%8FB78FB78FC40629062F062F59FFA85AFF84292F062F062F28AFAFAF85AF
%85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AF85AF85A9A9
%AF85A985FFA9FF85AF85A985AFA9A985AF85AF842FFD040695CAB2B7B7B7
%B2B7B2B78FB78FB78FB78FC46B29060606290628065A5984848406280629
%062884FF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9
%AF85AF85AF85AF85AFFFFFFFAF85AF85AF85AF85AFAFAFA9AF5306062806
%060695BECBFD08B78FB7B2B795CB9595062F0629062F0629062F7E2F062F
%0629065384FFA9AFA9AF85AF85AF8585AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985FFA9AF85AF85A985AF85A985AFA959FD0406
%0006060622B7B7C4C4BEB2B78FB78FB78EBEA2C46A8F4606062806060629
%0606062906060629067EA9FFA9AF85AFA9A985AF85A9AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AFA9AF85AF85AF85AFA9AFA9AFA9AFA9AF85AF85AF85
%FF7E2F0628062806280628062971B7B7BEBECBC4CBCAC4A2CB9B956A8F71
%29062F0629062F062F062F062F062F5AFFFFFFAFAF84AFA9AF85AF85AF85
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AF85AF85A9
%85AFA9A985AFA9A928FD0D062895B2B7B7B7B28F6A8F6A8F6A8F46290606
%06290606062906280629062F84FFA9AFA9AF84AF85AF85A985AF85A9AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9AF85AF85AF85AF85
%AFAFAFA95A060606280606282F0606062806280628064D70B7B7B78E8F6A
%8F6A710606062F0629062F0629062F062928A9AFFFA9FFAFA9A9AF85AF85
%AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AF
%85AF85A985AF85A985AF5906000606060006065AA9840606010606060006
%0606000606060006060600FD040628060606280606062F59FFA9AFA9AF84
%A9A9FF85AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AFA9AF85AFA9AFA9AF85AF85AFA9A928280628062806280628062F85AF
%5A28062806280628062806280628062806280628062F0629062F0629067E
%A9FFAFFFAFAF848585AFAFFFA9AF85AF85AF85AF8585A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AFA9A985AF842FFD0E062FA9A959
%FD130629060606292FA9A9FFA9AFA9855A855A85A9FF85AFA9AF85AF85A9
%85AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AFAF
%AF5928060606280606062F060606280606062806592F5A06280628060606
%2806060628060606290629062F062F7EFFAFAFA9AF8485608585AFAFAF61
%AF85AFA9AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AF85AF
%85A985AF85A9A98406060006060600062E7E84840606004C060600060606
%285A28FD050601FD0806280606065AA9FFA8AFA9A95A855A6184FFA8855A
%8585A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AF85AF85AFA9FF06280628062806287E84FFAF84FF592F707E2F280628
%0628065A592F062806290629062F0629062F062953FFFFFFA9AFA9856085
%6185AFFF8585608B85AFA9AF85FFFFFF85AF8585AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AFA9AF85AFA985A959FD07062F84A97EFF84A9845928
%2F7EFD0606282F5A06060628060606280606065384FFA9AFA9AF7E856085
%60AFAF855A85848585AFA9A9A9FFA9AF85AF85A9AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AFAFAF85AF5A84A9A9280606280606062859AF84
%A9FF7EA9A92F06954D060606280628285A2F280629062806292884AFFFA9
%AFA9A960856085A9FF8585618585AFAFAF85AFAFFFA9AF85AF85AF8585A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85AF85AF85AF85852F2F84FF5906
%000606060006067EA97E2F8459AF5928537E060601FD04062F28FD040628
%53FFA9A984AF84845A855A85A8AF60615A8585AFA9AF85FFA9AF85A985AF
%85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AFAF
%5A2F5A53FFA95A062806280628062F5A2977AF8485A97E06280629062806
%2906280629065AA8FFA9AFA9AF8485608585FFAFAF618585AFA9AFA9AFAF
%FFFD04AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AF85
%A985AF85A985AFA9842F302F7EA8A92EFD07062895957EA97E84A92FFD06
%062806062E85AFAF84AF85845A856085A8FF84855A8585AFA9AF85AFA9FF
%85A985AF85AF85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85
%AF85AF85AF85AF85AFAFFF5A362F3084FF7E2F062806060628064D28A884
%5A5384060606280628062F7EFFA9AF85AF8485618560AFFFAF6085618585
%AFAFAF85AFAFAF85AF85AF85AFA9AF85AF85AF8585AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85AF85AF85A985AF85AFA9FF85AF7E5A2F2F2FA9A859FD04
%06000606287DFF2F0600FD06065AA8FF848584855A615A8584FFA8855A61
%84AF85AF85AF85AF85AF85A985AF85A985AF85A985AF85A9AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AFAFAF85AFA9AFA9AFFFAF858561612F3029
%5AA9AF53280628062806282E280628062806292FAFAFAF85A98485618560
%85AFFF8585618585AFAFAF85AF85AF85AFAFAF85AF85AFA9AF85AF85AF85
%AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AFA9AF85A985AF
%AFAF60856085362F2F2F5AAF7E2FFD0B062F7EFFA98584A95A855A8560AF
%AFAF608560AFA9AFA9AF85A985AF85A985AF85AFA9AF85A985AF85A985AF
%85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9AF85AF60
%85A9FF858561855A5A2F302FA9AF7E06280606062806060684AFFF84A985
%855A85618585FFA985608585AFA9AFA9AF85AF85AF85AF85AF85AFAFAFA9
%AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF
%85AF85AFA9AF85855A8560AFA8855A615A602F2F2F5AA8AF530606060006
%53AFA8A984855A845A615A85AFAF5A855A8585AFA9AF85AF85AFA9AF85A9
%85AF85AF85AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85FD04AFFFAFAF85AFAFAFA9AF858560AFAFFF858561855A5A2F30
%5AFFA97E597EA9FFA98584855A85618584FFFF85608585AF85AFAFAF85AF
%85AF85AFAFAF85AFAFAF85AF85AF85AFA9AFA9AF85AF85AF8585A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85AFA9FFAFAF85AF85A985AF85AFA9AF85855A8584
%FF848560855A5A2F2F2F84A8AFA8A984857E845A855A8585FF8485608585
%AFA9AF85AF85A985AF85A985AF85AFA9AF85A985AF85A985AF85AFA9AF85
%A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AFAFFFA9AF85AF85AF85AF85AF
%A9AFA9AF8585608585AFFFAF6185608536302F365A855A855A85608561AF
%FFAF8585608B85AFA9AFA9AFA9AFAFAF85AF85AFA9AFA9AFA9AF85AF85AF
%85AF85AFA9AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AFA9FF85A985
%AF85A985AFA9AF85AF85A985AF858560855A85A8FF84615A855A302FFD04
%5A855A6184FFA9855A85848585AFA9A985AF85AFA9FF85A985AFA9AF85AF
%85A985AF85A985AF85AF85AF85A985AF85A9AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9
%FFFFAF85AF85AFA9AF85AFAFAF85AF85AF85AF85AFA9AFA985608585FFA9
%8561856085618560856185A9FF85856085A9AFA9AFA9AF85AFA9AFFFAFAF
%AF85AFAFAF85AF85AF85AFA9AFA9AFA9AF85AF85AF85AF85AF8585AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985FFA9A985AF85A985AF85AFA9AF85AF85AF85A985AF85AF
%A9AF85855A8560A9AFAF60855A8560855AAFFFA95A85608585AFA9AF85AF
%85AF85FFA9A985AFA9AF85AF85A985AF85A985AF85AFA9AF85A985AF85A9
%85AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85FFA9AF85AF85AF85AFA9AF85AFA9FFAF
%AFA9AFA9AF85AFA9AF85AFA9AF85856185A9FF8585608585FFA985618585
%AFA9AFA9AFA9AFA9AFAFFF85AF85AFA9AF85AFA9AF85AF85AF85AFA9AFA9
%AFA9AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%A9A985AFA9AFA9FFA9AFA9AFA9AF85AF85A985AFA9AF85855A6160AFAFAF
%A8AF84615A8585A985AF85A985AF85AFA9AF85A985AFA9A985AF85A985AF
%85A985AFA9AF85AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AFA9AF85AFA9AFA9FFAFFFAFFFAFAF85AF85AF85AF85AFA9
%AFAFAF858561856085618585AFAFAFA9AF85AF85AF85AF85AFAFAFA9AFA9
%AF85AF85AF85AFA9AFA9AFAFAF85AF85AF85AF85AFA9AF85AF85AF8585A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85AF85AF85A985AFA9AFA9AFA9AFA9AF85A9
%85AF85A985AF85AF85AFA9A9848560855A8585A985AFA9AF85AF85A985AF
%85A985AFA9AF85AF85A985AF85A985AF85AFA9AF85A985AF85A985AF85AF
%85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AFA9AFAF
%AFA9FFAFAF85AFA9AF85AF85AF85AFA9AF85AFA9AF85AF858B85AFA9AF85
%AFAFFF85AF85AF85AFA9AF85AF85AFA9AF85AF85AF85AFA9AF85AF85AF85
%AF85AF85AF85AFA9AF85AF85AF8585AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AFA9AFA9AFA9AF85AF85A985AFA9A985AF85AF85AF85A985AF85AF
%85AF85AF85AF85AFA9FFA9AF85AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AFA9AF85AF85A985AF85A9AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AFA9FFAFFFAFAF85AF85AF85AF85AFA9AFAFAF85
%AF85AF85AF85AF85AFA9AF85AF85AFAFFFAFFF85AFA9AFA9AF85AF85AF85
%AF85AF85AFA9AF85AF85AF85AF85AF85AFA9AFA9AF85AF85AF85AF85AF85
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AFA9AF85AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85AFFFFFA9A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AFAFFF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFFDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">banner_on_blue_bg</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-17T16:24:57+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-17T16:24:57+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-17T16:24:56+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7l6kC1D+pUUPwIWFD71G&#xA;/sM3EpEdHV4dPxi+KI95H61V4o9vSZpPGq0/icQT1aTEdEDf6pp1jdR29zOsbzP6cXLarEFgpPQH&#xA;iK/LDE2y8I9E/wBCjdNQowIrGSKilRUbjMbUkGHxbtKCJ/BkOa92TsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYTm6dExz8z7nWLDy1p99pt5LZiK9WS9u&#xA;IImn9OBYJf7xF6qz8F6ilRuOuRx0ZEEOVAAAE8vL3bMCm8yXHnRPL2iQOV1eWQ3Gp3VuNo4p1BBe&#xA;vw1O7BOoVct4eCz0RAXu940l2bVCWJJ9Mip37jMHOKh8WzTm8nwT7MB2DsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYt+hdT/3z/wyf1zafmId7qvy2TuV&#xA;RpeqBOHobUofjX+DZE5sfeyGDJ3IKy8pfUZnmtdOiilk+06CJTQUoPhpt8IwnUQPX70DT5B0TjSr&#xA;G9hvTLPHwXgRWqneo8Ccoz5YmNAt+DFISshOcw3NdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirDxc3bGglkJ/1j/XNxwR7g6YTl3lRvdWayUm6nlU7AKvq&#xA;O1WYKPgQM3U0wcMT3JufmrLcXjiqSyMCSBRidwaEbHxx4Y9wXin3lG6TPO08oeR2Aic0LE77ZTni&#xA;ABt1bdPMkmz0Sm81n6ooM1y4dldoogxMknpryZY0rVmp2GX8Ee5pEpHqW7TWDdJWO5cSqiyS27sV&#xA;liDio9VCap9ODgj3JJn3lQPmJReyWRuJVuIuBaFxKjuHrQwAr++pT4uBNMl4cauh9jIcfenugXcs&#xA;tzLWR24xNVXJqrVU7q24ND3zG1MAIjbq3aaUuI33JZc+Z9Sgk9P0r2bp8cFrJKm/gyIRlvgY/L5t&#xA;QzZPNWTXtRNoLqV5beLizkTx+kyqtallcAjpg8DH0U5sg6pHov5h3t3evZ6hNFYzHnJATLGytAsr&#xA;RrIxIHEGg+8eNMlLTwAuk+NkvmzHR766nugsk4liZC6FaEEbUYEDvmLnxxEbAb9PkkZUSlF95j1G&#xA;3uXiWO7mAqQ1vbvMoAJ2LIrCu3TL44Mdb182g5slmrXW2u6pPAZj69uikg/WITCfhAJNJFU0364f&#xA;Bx+SPGyeaG1zzkmhwW0+o3jLFdSiJWhQSlCY2k+NV+L7KdFBO42xjgjK6HJmMk+9E+VvOdlrmr3F&#xA;pY3wvUs6Cd0AMdXDFQrgUb7H7JyrPgEYXVFnhyyM6uwide1q9sbyRYhPIgpRLeFpiPhBJIRWNMOD&#xA;FAxBNIz5ZiZAU7bVdYngWcCeNWrRZojG4oabq6gjJnFi8vm1+Ll80DL51tIJb2G41aKCfT97uKUr&#xA;GUFFPL4wtV/eLuKipp1w/l47enmnxclc00t9TvJba0uo7v1YrniygAfYahB6dwcrOOFkVyZeJPY3&#xA;zXeYdYvLG4PpCaRAF/dW8TTPv34orNTI6fFAxsstRlmJ1FB2euatdQNOFuYUVipE8DQnam9HUGm/&#xA;XLjhx3W3zafGy+azUfMFxZWjT39yYbbYMzrseZ4gUAJNSe2A4cdcm3BLNOYjE+o8rofaVaLVb826&#xA;SQyt9XKrwYIFUAioG4FMRhx9zHJlyxkQTuDv72V5rHZOxV2KuxVj3mLV7ywnHoiaReK/ureJpnqS&#xA;d+KBmzO0+KMo2XB1GSYlUUpTzXqTSIhgv05kDm9nKqLU0qzFKKPc5f4GPy+bR42Xz+Su3mG5UI31&#xA;sMklQjrxYEgEsAQP2ab+GajW9p6XTTEZg2f2+fk7DFo9VMHpXfsfu80S2paosYkM+zEgAcSdtq7D&#xA;Njh8HLESjuC4WSeWBqR3Q1oIjMPUJCgEjj1JzIyXWzRjq93meu6jqOn+Y7uO5iaKO7uHWG548Z/Q&#xA;VfWURSdfT9WP7NePXv0ujEEbNg/X9jMPJclykF3KsItofUPoeknBCeT8mFNi3QE+2++VZIjYc0CR&#xA;5sl0b/eiX/jC/wDDKtRyHvZab6j7nlHmi+1HTfNtxM8biwuRBHBIyvxBdPSmaFxxKvR1B4HwrmYI&#xA;gjza8d/M0q2y3+r2uo2lnbmY/UGhWtasTFJFGsjsTy5FNuVfamAgRo+axJkxG88w65Gt5o2pQPNc&#xA;zXBW0S9tTLdQhSjwJAX9ORKrKabNQU4qK5dCIsEfe3SNG/6T1v8AJ3T9ds7K+bW43ivbt2uOMzmS&#xA;UqYoU5SEs7BmZCSpO3gOmYGuIIFcr/WulviN9ycetMImiWR0RwVPFipFRSoI6H3GTMAebRjyygQR&#xA;0+XySzzPHqVx5Zv7WwS4uru6jaOedWDmGNl41EXVu+wHjkcYiJ7mg5ObNLJG+EfAAPMtK823mgxX&#xA;lqI1gtCqt+5Mcj+rLyYvGZRCsaFkfZ+XAnaozKlh3F82kTjKOz2vyfFbRQ2S20YihNorLGCTTmFY&#xA;1NBU1O5zXam+E+9u0/1/BReeaOaQI5UFmqAduvhmQIggW4xmQTTF/Ndpf6tot7aQ3N7bvZNbSNOs&#xA;ir6saMWaONiSeQX4i/HrxrWhGGAEZe9yM2oOQbiIruAH4/R82J3+na5rdjLbR6bNBq+mXXIzzKit&#xA;LaxetAqpJT0uklft7cW/lWtwIHXm1RNHdkv5JeWde0WSeTVwEa5CLbQ8+bJHEr9afCK+pWgPz3yj&#xA;XTEommenvjHxZxq8kkeqTFGKn4a0NP2RleAA4xaNRIjIaSfUoNRbS39G5n9VgI4HWUBloftGqyV6&#xA;dWRt/pOTAiDybMmolkjuIj3AD7nlfnry75ll8x35stOe5F0YntXMayKeUUUbGWR6xrxKH7RFN26U&#xA;OZOOUaFtMvp87eoaJa6hbSW0FxzSO3t7eEQl+SCRFVXcDiKcuAp8RFN6AnfGJG/xT3J9rjumpFkY&#xA;q3FdwaHplWmFwZaokT2QVoHMpaSeVlHKiFiw+NuR2779K9B0yyUAOQZnVSnHhIjW3IC9vxv38+aW&#xA;+b7ewfTWuL+5mVzJG6WpYFneB0kRYhRk4lkFQykeNMrgJXUXYabLiMRDIAASPV1G/f3fLZF6dc6n&#xA;LZyLqChJ2pLwUrwQOCOACnqvHc0+nrlgiLFOv1IAMqNjiNe7oeVb/wBrOM1TsHYq7FXYqx3XXdNQ&#xA;DIxU+mNwaHqc2OlAMPi63VEie3cgLX1Obc55nX4yEZywq7cj18D08O2TljA5Mvzcpx4SI9OgB293&#xA;29/Pmw7TodS0mzM+p3U7SXTTWkNqjc1RvVZVkG0jqW5EbN0I25VzU9sdnHVQrHwxmOv07VRHI/i6&#xA;PftNLm8OVjjyARHFtxb8+/kBQ37uS/yrYeYLDzJrVtc8/wBFMkcsIehUSsADwoSKkA+pTvQ5sdFp&#xA;hgwwxg8XD1+P4pyu2dTpc2lxShXj78Vd39L9HxZkthqCmogev+qcvOWHe8yMU+4rptNkugovbA3X&#xA;BuUYkRWCmhWoDq+9DT5ZDjj0IDYIz6grmtNQOy28gToFIrQfQBhE4d4YmE+4ojSrO7jnkMkTKDEw&#xA;BII3PbK8+SJAo9W3BjkCbHRAS6PLcRtBdWbTW705xsnIVBqpoe6ncHsemWnLHvao45g8iqxabcW0&#xA;SW9naNFbRgCOMJSm1O3fbr1yInDmTukwn0Bpo6SzTC7exrfqhijufRUyLG3VBIRzCmpqBth8SPK9&#xA;vengnXIo7RbO6iuZDJEyAxMoLCgqSMp1OSJiKPVs02OQkbHRRXQr8EEqpHhyplh1MGA0s3TaFfSs&#xA;HKKsoJPqq5D7kE/F1oabjwyHjwZ+BkYz5k/KGx166Se4VoyAFl9ORQZFVzJRiVJHxMfskbfRS2Gs&#xA;jEIOnycujMdH0q4s5UDIqQxx+miq1aAUAG+/QZjZs0ZRoNuDDKMrKFl0O/aV2AWhYkfF4nLo6mFN&#xA;MtLMlcukakIjFwjKEhiCRWo6b9RT2wHPAm0jT5AK2Qt15VnurRLWeMNCknqKokKCo3A+DjUVrWvW&#xA;u+EaiANo/L5KpM9P06/ivEln48FBGx8RTKsuWBjQbcWGYkCVPUtIvLi9kmjC8G40qadFAyWHPGMQ&#xA;CxzaeUpEhAXnlW4vLZ7a4QNDJTkA5Q7b7MpDD6Dln5qDWNLN0/le8mnt5SqD6sKRqOJ7U2JBZf8A&#xA;YkV77YBqIebL8vk8l0PledNSa/8ATX6xKFWR+ZPwqR0UniOg6DE6mFUo087R+q6Vd3N2ZYgpQqBu&#xA;adMrwZ4xjRbM+CUpWEPHouoxmoVD/sssOogWqOmmGrnQ765aJpY0YxPzWrV34lf1HIjPANox5AD5&#xA;r30jUWUrwQf7LCM8A1nTzLIM17sXYq7FXYqk+raXd3V0JIgCvEDc03FczMGaMY0XC1GCUpWEPb6T&#xA;qcDl0VOVKAkjauWTzwkKLXDT5Imw1Lo19MVMsUblN15MDTI+LjbYDNGxE1fmuk0rUpAQyp4fawjP&#xA;ANZwTKEGrakSAJiSegAH9Mt8CHc0/mJ965NT1RmZRMQU+2CFFK9K7e2A4sY6MhlyHq0dX1CrBbgu&#xA;FNCwA60r4YRhh3IOeY6ovS9RvZppFklLARswFB1H0ZVmxRAFDq24M0iTZ6JYfMOofWRbj6yzGgEi&#xA;20rRb/8AFojMf/DZb4GPy+bUM2TzX3+uanZWslzM0vCNeRVVXkRWm3LiPvOAYcZ5BPi5O9Ts/MOo&#xA;XDMXuUjgaYQ2sxZQstVBNKgbg7UwHFAdG/JMgR4Z3fPaqN/qTnTLq+e6ljnkLqI2ZTSgNCKEbA5T&#xA;mhERBA6rgyTMiCeiSv5j1YXa2yw3coYqPXjg5RDl4uB275k+Bj8vm44zZD3r9T8w32m2b3d3JIkE&#xA;dPUfioCqWALMW4gKvUknIjDjPIJ8XJ3rrLWNYuC4kkEK+sYoXLKVkUCvMVUHsQR7YDjxjo35SRXD&#xA;O7G9iqO+3X33596a6Vd3z3xinkLKEJG1AelD0B75TnhERsBcGSZnRKTX/mPVLe6eKOC7uAKkPbwG&#xA;RBQn4SwHXbpmRHBjrevm0HNks1axPNN36aPcyS2PqSelEl2ghZ2JVQFDgVqzgDxOHwMfTdHjZO9J&#xA;o/zMlivtQi1Qy6fa2ckscdzKqkP6IjLNReRC/vg1SNlofGhOmh0C+PPvZZoWsTX08Lrci4tZlLxy&#xA;IVZGWlQVZdiPllGfFGMbAbcGWZnRLXmLWb6wuD6CTzLRf3VtH6rioJLUArTBp8UJRsp1GWYlUUNb&#xA;6xrE1uJys8CmtVmi9NhQ03BG2XeDjvo0+Nl80H/jSFZTG9+AqhS8o4MF5ECjKPiUio+0BWu1cHgR&#xA;/msvGl/ORlrrl5cJHNFcc4ZArKwAoVbcdsJwQ7mIz5O9FeYdXvrG4b0FmmUBf3NvH6r79+IFaZTp&#xA;8UDGy3ajLMTqKSnzhqwBLWOpKo6sbRgP1Zf+Xx+XzaTmy+fyRllr+p3cCyr68PMkCKaMJJsabqR3&#xA;xOCA6IGfJ3oqbUNXhcpJKVYUJFFPX5DIxxYyLAZSy5ImiUZ5j1G7slje3EjnixMUKc3ahH2V6nMf&#xA;TY4yu3I1OSUSOFjx83auELGx1IU3INowNKA16e+ZXgY/L5uN42Xz+S7XfNt7pGly6hPI3pxoXHOi&#xA;KaKSAXKkLypxBO3Igd8Rp4E0A2YcplICcuGJ61dedKHl/wA9T6xZwygzQTTh3jjKhkKRsFZhIF4H&#xA;4jT54y00AaoN+SExA5IS4sYlw3sP9jzZ1ZSPJZwu5q7ICx9yM1uQVIgN+IkxBKtkGbsVdirDrV3S&#xA;dWQ0YdD4ffm4mLDpYGjs8k/N/UL7T/NUlxZTS29yLKGl1CeLAepLUGQGoDHt+0fll+nAMRfm2Hay&#xA;y78n545vJMk/F39a7uGR5ZDI/wAT7szbF2NN2ynOPWFiRwlm+jf70S/8YX/hlOo5D3p031H3IP17&#xA;gQtEkzorKV+FiCOXdfA5aYA8wwx5pQII6dOiUeaNZ1vSNJ+tafC13NPJxkuJucq2ycTWT0Y6PIo4&#xA;/ZTffx2MBjF05GTUHJRIEfcKeTyaf5284XZshDbT2kUokGvTpKkgDFZDHEgZVZfh4UCKCy/EFfLx&#xA;wx339zlHWQjhOLgjxfztu++67/zvLk908l6XPplutpPdSXciQv8AvJWLMAWUhAzFm4r0XkzGnUk5&#xA;hag2Pi42D6j7lESzCNo1kZUYEEKxU7+BFCD7jMkwB5uLjyygQR0+P2HZIvOWva1ommLLptqbie6J&#xA;D3t008sNsAp4OYo+cjBm4rRB3r45EQjbkyzyyVxV8gPuAS2+1W917TP0ZotvRLqMjUJ5G9SzVyK1&#xA;gZSrPU8irJQ1FKoaUEIUeIuTLPDwjGhxbUQPPe+/YftZx5O0+6sFhtbq7e9mjjes8pq9CwIBJJJA&#xA;6DkS1PtEnfKdQbj8XH0/1/BRneTnNGruiuzBuDFTvtsVIIPvmQIggW44yShKx3+/7Dsw/wDMq78z&#xA;R28K6M80Onvya61BI/rt5FIF4I0ULuiqhrRuJLb/AAgmuDHADnzbsmbxCLNfAD7q7/e880zy7r3m&#xA;e7vIxE6Qx8ki1YKyOSUCu4Esay/EHq5cVZfs8jVzfxcIDVKiS9f/ACx0Oz0lAltO87Tu8k7OONX4&#xA;cefEKqjkoH2aA05UFd8XVH0ltwEmYJ82Q627pqLFGKngoqDTI6YAw3Y6okT2S8XqWaS3lw8kixow&#xA;CM7spLmv2S3Ctdlr06DLJYh0ZDVSlGjVf1Y+7mBf6+fN5rqOm6vYoZWJigvrgBZouVGQ8afApqdy&#xA;SOh/a9syYkGg45sWWc+XDqEFrFatAUs5F9YysoDlyQFDUZj9nc/rymYBN9WQJqmQ647pqRZSVPFd&#xA;xt2ynTC4NmqNTQVqGaarSyH7WzSSMvxtyNVJI69Ntu2TlADcBl+anMcJqtv4Yjl5gX7+/md2HeYI&#xA;fNLatOlpNdFppYzaXEU6wpboprx9H1FV1boT6THv8XdjH5PV6PtLs6OCInGPHEbgwsyPfxVY8qkP&#xA;gzaQOIAJDWQKA70pybuab0xjzeQyEb0KTDzGzLLbspIYBqEbHtlGkGxbtYaIYZ5r8x3Gi6c11bq1&#xA;3fSOOFu9wY0AC0ZynL4wqqTwUfF8zmSMQJZYp5pYzUbhEbngG3vlV/b5PJLy880+YNfY3t++rTRI&#xA;/wBWaxd4ordWYxcDFJ6P1R+PKpl+M9uWZEeGMdh8/wAbtcIR4rySPCB/Dz93cPxtez0jyJ5Q1LR2&#xA;OqXV49416zrJEk5aJVIBDu0nxXMi8EUSkBuJ+zTMaUt6/H7ESG1n8fretad/vBb/AOov6s1ub6y5&#xA;2H6B7kRlbY7FXYqwxBIrBuJNPY5uTRdILCG1XQNF11I49Yso51hJMRdWqOVOQDLQ0am4wCRj9JbA&#xA;b5ouNVhgW3ggWKCJeEUca8VVRsAABsMAA52gyKM0WNzdSChBaJgK+JplWoI4R723TA8R9zv0DqHg&#xA;v/BY/moI/KTVDpGqFOBCEeJNTt0yPj42f5fJSy30G9t4wlvDFCorshpWvXE6iB52gaeY5UjdM068&#xA;gnd5gtDGUFD3JH9MqzZYyFDvbsOGUTZ7kD+gdQ8F/wCCy/8ANQcf8pNfJo+pSxskqpIG2JZqmlKZ&#xA;EZ8bM6fIVlv5fu7ZBHawxwxgU4IQAPGgAFMTqIHmgaaY5I7S9OvILv1ZwvHgV2NdzTKs2WMo0G7B&#xA;hlGVlBy6HftK7ALQsSPi8Tl0dTCmmWlmSh4/KkqXUl2IVNxKvB3LnoBTYVoDt1G+J1MT1UaaaKg0&#xA;a9t4vSt4YoY6ceKGgoTUj5V7ZE5oHckshgmOQCI07TLuG8SWREVFBrxPiKZDLmiY0GeHDISstarp&#xA;V3c3ZliClCoG5p0w4M8YxornwSlKwh4tG1CNq+mjezHbJy1EC1R00x3KI8sy/W2uWgjZ2AB+IDZa&#xA;kCoFaVPTH8xGqtl+Xn3BE/orUSFUogUEUAbYb9sHjwXwJquq6Vd3N2ZYgpQqBuadMjgzxjGizz4J&#xA;SlYQ8Oj6lE4dVTkNxVhk5aiBao6aYNqh03VCxYqpYmpPLeuR8bGy8HItfSdSdSCib/5WSGeAQdPM&#xA;ozWdPubtojCAQgNamnWmU6fKIXbfqcMp1SVHyxPJPFNNEHaFuSUlZNx05BSAwHWjVy6WeBThlnxw&#xA;MAfTLmFOTyhzK/6LEqq/qcFbipPgQtOQ2BodqjeuP5iPeWmOGYBFR3+z3IptD1E3LT0+0nDgZDxA&#xA;rWtOn4fLAM8Ag4JlPbOJ4rWKN/tIoBp4jMPJK5EubjjUQCrZBm7FXYqxzWZrhdQkWORwoC7KSB09&#xA;s2OniODcOt1MpCZopfNe3UMZkeSUIKlmq1AAKk/QMo7Q1ePTY/EMbHl97LS4Z5p8INKdjqk96QsE&#xA;k3NhVUJYEgioI36UzV9m9v4NVPg4OAnlfVzdX2Zlwx4uLiTF7i5/RkTeo/MysCeRr0Gb0RHGdujr&#xA;jOXhjfqhhNfHpJIaCp+JumWcMe4NXFPvKnd6j9UNslzdvFLeGluHLKrmlQquTxLkAngN6ZGIiSdh&#xA;szPGADZRlpNdBbnnI9fQLLViafEu/XIzjHah1ZY5S3s9EvvNVmtIPWklkK1CgB6Enqacio2AJywx&#xA;iOiMIM5UZcPPck1sL8113qnoRAi4llnA5NChJb4m4qFFamp2r0yFDfYMoRMiBxVfU3XOlTTNTa7a&#xA;3nguWlgkZeLBiQRyoe+GcI0dvsYRlISG/wBrMc1TtnYqwS/TVjPLJa/U1t05F3upniYMCT0VHHHp&#xA;vXNuJgAXbqI4pTlUedoHVtRv9J0C+1O5ihu5rNGc29jIZdgARyLLGRseTbfZ33yUJiR2Tl088dcQ&#xA;q2J3H5i6vYyNe32lONJRUF2sZLTWzleR57AUpIlfvFQwy3hHfuwELek+V7+w1F7K/wBPLtZ3UPqw&#xA;vIOLMGUnlx7D2zC1F8BtvwADIKZZmudk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWNa20y3&#xA;ty0ArMI/3Q2+3w+Hr75sMH0B12c/vCxPSr7Vb+exk1BZ7S5s1mN8ApjimeMBQnpl5AvItzTkeXwn&#xA;p2sz4YTiQd4lu02s8OMo8IJPXrEg3see4sV1RGjX9rqmpzz21yZI4FUACvFBxK8P2QvKgPTft0zk&#xA;+zOxNRj1Hi5fTw1Q2NiiDVGgORO2/k7HWdo4p4uCG98/nfd8t2QSsE0yNiCQszkgAk7KOgGdWPrP&#xA;udJ/AP6zzSw/M3UNU15xe6fDa+X7eKYXummRhqiCNkCXEkQ4KYiDX92zgitWbpk5Y6G3NvwyIkJj&#xA;+H8Wp+a9XbzDaNpOkyCHQpZUP1m9Q+jN6b+o3CHZpfsn7IUct2ZWGHFAQ3PN2c45NWAcceKcT6qG&#xA;1dL6fP8AYJ15Ot4rfQBDDfyalAts5iu5JPVqplBorEseK9ACar0JJFTDJzH9b9DqsmKeOUoTBjID&#xA;kUs806jp9vBFHcW090x/eejDVuXFhQ0X4tjQGnSu9K73RiSedOPEgDlbF7BNQubu51WaZXN1FIDa&#xA;oQszhaiNOMdGbgu4Ck0+eSsAAdzttQMMjknCE+AxjXPaXUy95+9nuhKUaGKOVHsoXjjtUWpaNVpW&#xA;N613Tp1J8fAUyNgkuFlOL0CAIkPq3294Z5mpc92KsMuADNKCKgswIPzzcx5B0sjUkP8AWboetYWN&#xA;vRXirLLwHcnlxqONVWhG5qevTK5x6lujkJ57sAvvy5gu55YbdJY/rZjS6UMygrGOJZt/tLQ7/tCv&#xA;Sgy+Ob+cwIo+k/jq9I8o+X9N0a5toLNCrCBIZGLEhhDHxWinZQKnpmJnkTA23Ya4wzLNc7F2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksb1hwmpyE+C/8RzY6cXAOs1BrIUo1FbmaOllObWU7NIV&#xA;aQmrA1+3H4HatDXplnAW/R6rDjJOSHHfnX60YLhAiKAaqoVmJqSQOvt9GEQcSWQHkFcuF06F6VAm&#xA;c0P+qMhXrPuZXUAfNjmqeVfL2o3cd1PZRvLE3NWdEc8iKEnkDWvc9T45cLAaSe5X1LRrW6t4o4ZJ&#xA;bWWGpjuIiokUleNVLBqGm1aVp3yPBfN2Oh7UyaUngoiXMS3Br5JhoFhBp+nSWUFfSgtmVSaVNXBJ&#xA;226ntt4ADI5Onva82qnqMk8k/qkP1LJ7PTby29G+gSdQ3JQ4rQjuKZM8V7OJCQFHqEjtfI2hRap9&#xA;ckJeJSWig+IKpPUgAhR0G6gE9+9WzWzus3b2bJAxPCOMVKQG8h5/r+VUGSW0drFPbxWqCOCN1CIB&#xA;QAVFOmRN8JvudNGuIV3svzUu4diqTv5dRnZvXI5EmnHx+nMwasgcnCOjBPNtPL/D7NyR/sR/XAdV&#xA;fRI0ldWzoJLFjcsWPU8RX9eP5ryX8r5qtppH1e4WYzFyoIAK06injkMmo4hVM8en4ZXaY5juS7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHc/or1T9Y9L1dq86V9suh4lbXTTPw79VWpf7gf+KP&#xA;wyX73zYfufJ3+4H/AIo/DH975r+58lQ/oj0Fr6Xo8jx6ceVN8j+8vrbL93XSlP8A3A/8Ufhkv3vm&#xA;x/c+Tv8AcD/xR+GP73zX9z5L4/0PR/T9GnH95Sn2ajr7VwHxOtso+H0pZ/uB/wCKPww/vfNj+58n&#xA;f7gf+KPwx/e+a/ufJcn6E5rw9HnUcaUrXtifFre0jwr2pH5juQ7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:instanceID>
            <stRef:documentID>xmp.did:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</stEvt:instanceID>
                  <stEvt:when>2019-01-17T16:24:57+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=232 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=224 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=121 G=177 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>121</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=6 G=3 B=62</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>6</xmpG:red>
                           <xmpG:green>3</xmpG:green>
                           <xmpG:blue>62</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=44 G=38 B=96</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>44</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>96</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=25 B=187</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>187</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=45 G=9 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>9</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=91 G=4 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>91</xmpG:red>
                           <xmpG:green>4</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=101 G=7 B=250</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>7</xmpG:green>
                           <xmpG:blue>250</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=0 B=131</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>183</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=115 B=181</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>115</xmpG:green>
                           <xmpG:blue>181</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=226 G=64 B=152</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=191 B=48</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>48</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=152 B=132</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>132</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
600 400 mo
-.000300407 400 li
-.000300407 0 li
600 0 li
600 400 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.261051 .0218814 0 0 cmyk
f
546.364 132.325 mo
546.364 132.324 li
546.364 132.324 li
545.357 131.742 li
545.257 131.685 li
516.186 114.901 li
516.186 114.901 li
515.161 114.309 li
515.079 114.262 li
545.255 96.8389 li
576.541 114.902 li
546.364 132.325 li
545.255 98.1181 mo
516.186 114.901 li
545.257 131.685 li
574.326 114.902 li
545.255 98.1181 li
.159609 .0111391 0 0 cmyk
f
486.009 132.324 mo
486.009 132.324 li
500.544 123.933 li
486.01 132.324 li
483.794 132.324 mo
469.26 123.933 li
483.795 132.324 li
483.794 132.324 li
484.902 131.685 mo
484.902 131.685 li
473.461 125.079 li
484.902 131.685 li
499.437 123.293 li
484.902 131.685 li
516.186 114.901 mo
515.355 114.422 li
515.161 114.309 li
516.186 114.901 li
513.971 114.901 mo
484.902 98.1181 li
455.833 114.901 li
454.725 114.262 li
484.902 96.8389 li
515.079 114.262 li
513.971 114.901 li
f
516.187 149.747 mo
516.187 149.747 li
530.722 141.355 li
516.187 149.747 li
515.08 149.108 mo
515.08 149.107 li
486.009 132.324 li
486.009 132.324 li
484.983 131.732 li
484.902 131.685 li
499.437 123.293 li
513.971 114.901 li
515.079 114.262 li
515.079 114.262 li
515.161 114.309 li
515.355 114.422 li
516.186 114.901 li
545.256 131.685 li
544.149 132.324 li
515.079 115.541 li
500.544 123.933 li
486.009 132.324 li
515.08 149.107 li
532.708 138.93 li
515.08 149.108 li
546.364 132.324 mo
545.533 131.845 li
545.357 131.742 li
546.364 132.324 li
f
546.365 167.17 mo
546.365 167.17 li
546.365 167.17 li
545.395 166.61 li
545.257 166.53 li
516.187 149.747 li
516.187 149.747 li
515.18 149.165 li
515.08 149.108 li
532.708 138.93 li
544.149 132.324 li
545.257 131.685 li
545.357 131.742 li
545.533 131.845 li
546.364 132.324 li
546.364 132.325 li
576.542 149.747 li
546.365 167.17 li
516.187 149.747 mo
545.257 166.53 li
574.327 149.747 li
545.257 132.964 li
530.722 141.355 li
516.187 149.747 li
f
425.656 132.323 mo
425.656 132.323 li
434.649 127.131 li
425.656 132.323 li
424.548 131.684 mo
395.478 114.901 li
395.478 114.9 li
394.508 114.34 li
394.371 114.261 li
424.548 96.838 li
454.725 114.262 li
453.618 114.901 li
424.548 98.1172 li
395.478 114.9 li
424.549 131.684 li
443.12 120.962 li
424.549 131.684 li
424.549 131.684 li
f
455.833 149.746 mo
455.833 149.746 li
468.883 142.212 li
455.833 149.746 li
453.618 149.746 mo
439.083 141.354 li
453.618 149.746 li
453.618 149.746 li
454.725 149.107 mo
438.383 139.671 li
454.725 149.106 li
473.343 138.358 li
454.726 149.107 li
454.725 149.106 li
486.009 132.324 mo
485.178 131.845 li
484.983 131.732 li
486.009 132.324 li
483.795 132.324 mo
469.26 123.933 li
454.725 115.541 li
434.649 127.131 li
425.656 132.323 li
424.549 131.684 li
443.12 120.962 li
453.618 114.901 li
454.725 114.262 li
455.833 114.901 li
473.461 125.079 li
484.902 131.685 li
483.794 132.324 li
f
486.011 167.17 mo
486.011 167.17 li
500.545 158.778 li
486.011 167.17 li
483.795 167.17 mo
464.292 155.909 li
483.796 167.17 li
483.795 167.17 li
484.903 166.53 mo
484.903 166.53 li
472.232 159.214 li
484.903 166.53 li
501.092 157.183 li
484.903 166.53 li
516.187 149.747 mo
515.356 149.268 li
515.18 149.165 li
516.187 149.747 li
513.972 149.747 mo
484.902 132.964 li
468.883 142.212 li
455.833 149.746 li
454.725 149.106 li
473.343 138.358 li
483.794 132.324 li
483.794 132.324 li
484.902 131.685 li
484.902 131.685 li
484.983 131.732 li
485.178 131.845 li
486.009 132.324 li
515.08 149.108 li
513.972 149.747 li
f
516.188 184.593 mo
516.188 184.593 li
526.087 178.878 li
516.188 184.593 li
515.081 183.953 mo
486.01 167.17 li
486.011 167.17 li
485.021 166.598 li
484.903 166.53 li
501.092 157.183 li
513.972 149.747 li
515.08 149.107 li
515.08 149.108 li
515.18 149.165 li
515.356 149.268 li
516.187 149.747 li
545.257 166.53 li
544.15 167.17 li
515.08 150.387 li
500.545 158.778 li
486.011 167.17 li
515.081 183.953 li
527.808 176.605 li
515.081 183.953 li
515.081 183.953 li
546.365 167.17 mo
545.534 166.69 li
545.395 166.61 li
546.365 167.17 li
f
546.366 202.016 mo
546.366 202.016 li
546.366 202.016 li
545.433 201.477 li
545.259 201.376 li
516.188 184.593 li
516.188 184.593 li
515.218 184.033 li
515.081 183.953 li
527.808 176.605 li
544.15 167.17 li
545.257 166.53 li
545.395 166.61 li
545.534 166.69 li
546.365 167.17 li
546.365 167.17 li
576.543 184.593 li
546.366 202.016 li
516.188 184.593 mo
545.259 201.376 li
574.328 184.593 li
545.257 167.81 li
526.087 178.878 li
516.188 184.593 li
f
365.301 132.323 mo
365.301 132.323 li
379.836 123.932 li
365.302 132.323 li
364.194 131.684 mo
364.194 131.684 li
335.123 114.901 li
335.124 114.9 li
334.134 114.329 li
334.017 114.261 li
364.193 96.838 li
364.469 96.9981 li
394.371 114.261 li
393.263 114.9 li
364.193 98.1172 li
335.124 114.9 li
364.194 131.684 li
380.537 122.248 li
364.194 131.684 li
395.478 114.901 mo
394.647 114.421 li
394.508 114.34 li
395.478 114.9 li
f
395.479 149.746 mo
395.479 149.746 li
410.014 141.354 li
395.479 149.746 li
394.372 149.107 mo
394.372 149.106 li
365.301 132.323 li
365.301 132.323 li
364.331 131.763 li
364.194 131.684 li
380.537 122.248 li
393.263 114.9 li
394.371 114.261 li
394.371 114.261 li
394.508 114.34 li
394.647 114.421 li
395.478 114.901 li
424.548 131.684 li
423.441 132.323 li
394.371 115.54 li
379.836 123.932 li
365.301 132.323 li
394.372 149.106 li
410.714 139.671 li
394.372 149.107 li
f
425.657 167.169 mo
425.657 167.169 li
443.821 156.681 li
425.657 167.169 li
424.549 166.529 mo
395.479 149.746 li
395.479 149.746 li
394.546 149.207 li
394.372 149.107 li
410.714 139.671 li
423.441 132.323 li
424.549 131.684 li
425.656 132.323 li
425.656 132.323 li
438.383 139.671 li
454.725 149.107 li
453.618 149.746 li
439.083 141.354 li
424.549 132.963 li
410.014 141.354 li
395.479 149.746 li
424.55 166.529 li
434.054 161.041 li
424.55 166.529 li
424.55 166.529 li
f
455.834 184.592 mo
455.834 184.592 li
470.368 176.201 li
455.834 184.592 li
453.618 184.592 mo
439.084 176.2 li
453.619 184.592 li
453.618 184.592 li
454.726 183.952 mo
454.726 183.952 li
443.285 177.347 li
454.726 183.952 li
465.224 177.891 li
454.726 183.952 li
486.01 167.17 mo
485.179 166.69 li
485.021 166.598 li
486.011 167.17 li
483.796 167.17 mo
464.292 155.909 li
454.725 150.386 li
443.821 156.681 li
425.657 167.169 li
424.55 166.529 li
434.054 161.041 li
453.618 149.746 li
453.618 149.746 li
454.725 149.106 li
455.833 149.746 li
455.833 149.746 li
472.232 159.214 li
484.903 166.53 li
483.795 167.17 li
f
486.011 202.016 mo
486.011 202.016 li
500.546 193.624 li
486.012 202.016 li
483.796 202.016 mo
474.229 196.492 li
483.797 202.016 li
483.796 202.016 li
484.904 201.376 mo
484.904 201.376 li
465.401 190.115 li
484.904 201.376 li
499.439 192.984 li
484.904 201.376 li
516.188 184.593 mo
515.357 184.113 li
515.218 184.033 li
516.188 184.593 li
513.973 184.593 mo
484.903 167.81 li
470.368 176.201 li
455.834 184.592 li
454.726 183.952 li
465.224 177.891 li
483.795 167.17 li
483.795 167.17 li
484.903 166.53 li
484.903 166.53 li
485.021 166.598 li
485.179 166.69 li
486.01 167.17 li
515.081 183.953 li
513.973 184.593 li
f
516.189 219.439 mo
516.189 219.439 li
530.724 211.047 li
516.189 219.439 li
515.082 218.799 mo
515.082 218.799 li
486.011 202.016 li
486.011 202.016 li
485.054 201.463 li
484.904 201.376 li
499.439 192.984 li
513.973 184.593 li
515.081 183.953 li
515.081 183.953 li
515.218 184.033 li
515.357 184.113 li
516.188 184.593 li
545.258 201.376 li
544.151 202.016 li
515.081 185.232 li
500.546 193.624 li
486.011 202.016 li
515.082 218.799 li
531.424 209.363 li
515.082 218.799 li
546.366 202.016 mo
545.535 201.536 li
545.433 201.477 li
546.366 202.016 li
f
546.367 236.862 mo
546.367 236.861 li
546.367 236.861 li
545.359 236.28 li
545.259 236.222 li
516.189 219.439 li
516.189 219.439 li
515.254 218.899 li
515.082 218.799 li
531.424 209.363 li
544.151 202.016 li
545.259 201.376 li
545.433 201.477 li
545.535 201.536 li
546.366 202.016 li
546.366 202.016 li
576.544 219.439 li
546.367 236.862 li
516.189 219.439 mo
545.259 236.222 li
574.329 219.439 li
545.259 202.655 li
530.724 211.047 li
516.189 219.439 li
f
304.947 132.322 mo
304.947 132.322 li
323.564 121.574 li
304.947 132.322 li
303.839 131.683 mo
274.769 114.899 li
274.769 114.899 li
273.805 114.343 li
273.662 114.26 li
303.839 96.8369 li
334.016 114.261 li
332.909 114.9 li
303.839 98.1162 li
274.769 114.899 li
303.84 131.683 li
312.833 126.491 li
303.84 131.683 li
303.84 131.683 li
335.123 114.901 mo
334.293 114.421 li
334.134 114.329 li
335.124 114.9 li
f
335.125 149.745 mo
335.125 149.745 li
353.742 138.997 li
335.125 149.745 li
334.017 149.106 mo
304.947 132.322 li
304.947 132.322 li
303.94 131.741 li
303.84 131.683 li
312.833 126.491 li
332.909 114.9 li
334.016 114.261 li
334.017 114.261 li
334.134 114.329 li
334.293 114.421 li
335.123 114.901 li
364.194 131.684 li
363.086 132.323 li
334.016 115.54 li
323.564 121.574 li
304.947 132.322 li
334.017 149.106 li
343.011 143.913 li
334.018 149.106 li
334.017 149.106 li
365.301 132.323 mo
364.47 131.844 li
364.331 131.763 li
365.301 132.323 li
f
365.303 167.169 mo
365.303 167.169 li
384.473 156.101 li
365.303 167.169 li
363.087 167.169 mo
348.552 158.777 li
363.088 167.169 li
363.087 167.169 li
364.195 166.529 mo
364.195 166.529 li
349.66 158.137 li
364.195 166.529 li
372.554 161.703 li
364.195 166.529 li
395.479 149.746 mo
394.648 149.267 li
394.546 149.207 li
395.479 149.746 li
393.264 149.746 mo
364.194 132.963 li
353.742 138.997 li
335.125 149.745 li
334.017 149.106 li
343.011 143.913 li
363.086 132.323 li
364.194 131.684 li
364.194 131.684 li
364.331 131.763 li
364.47 131.844 li
365.301 132.323 li
394.371 149.107 li
393.264 149.746 li
f
395.481 184.592 mo
395.48 184.592 li
408.207 177.244 li
395.481 184.592 li
394.373 183.952 mo
365.302 167.169 li
365.303 167.169 li
364.271 166.573 li
364.195 166.529 li
372.554 161.703 li
393.264 149.746 li
394.372 149.106 li
394.372 149.107 li
394.546 149.207 li
394.648 149.267 li
395.479 149.746 li
424.549 166.529 li
423.442 167.169 li
394.372 150.386 li
384.473 156.101 li
365.303 167.169 li
394.373 183.952 li
408.907 175.561 li
394.373 183.952 li
394.373 183.952 li
f
425.657 202.015 mo
425.657 202.015 li
442 192.579 li
425.657 202.015 li
423.442 202.015 mo
408.907 193.623 li
423.442 202.015 li
423.442 202.015 li
424.549 201.375 mo
406.921 191.197 li
424.55 201.375 li
439.084 192.983 li
424.55 201.375 li
424.55 201.375 li
395.48 184.592 mo
394.373 183.952 li
408.907 175.561 li
423.442 167.169 li
424.55 166.529 li
425.657 167.169 li
425.657 167.169 li
443.285 177.347 li
454.726 183.952 li
453.619 184.592 li
439.084 176.2 li
424.55 167.809 li
408.207 177.244 li
395.48 184.592 li
f
455.835 219.437 mo
455.835 219.437 li
475.911 207.847 li
455.835 219.438 li
454.727 218.798 mo
425.657 202.015 li
425.657 202.015 li
424.674 201.447 li
424.55 201.375 li
439.084 192.983 li
453.618 184.592 li
453.619 184.592 li
454.726 183.952 li
455.834 184.592 li
455.834 184.592 li
465.401 190.115 li
484.904 201.376 li
483.796 202.016 li
474.229 196.492 li
454.726 185.231 li
442 192.579 li
425.657 202.015 li
454.727 218.798 li
469.262 210.407 li
454.728 218.798 li
454.727 218.798 li
486.011 202.016 mo
485.18 201.536 li
485.054 201.463 li
486.011 202.016 li
f
486.013 236.86 mo
486.013 236.86 li
500.547 228.469 li
486.013 236.86 li
484.905 236.221 mo
455.834 219.438 li
455.835 219.437 li
454.898 218.896 li
454.728 218.798 li
469.262 210.407 li
483.796 202.016 li
483.796 202.016 li
484.904 201.376 li
484.904 201.376 li
485.054 201.463 li
485.18 201.536 li
486.011 202.016 li
515.081 218.799 li
513.974 219.438 li
484.904 202.655 li
475.911 207.847 li
455.835 219.437 li
484.905 236.221 li
497.806 228.773 li
484.905 236.221 li
484.905 236.221 li
516.189 219.439 mo
515.358 218.959 li
515.254 218.899 li
516.189 219.439 li
f
516.19 254.284 mo
516.19 254.284 li
530.725 245.893 li
516.19 254.284 li
513.975 254.284 mo
494.472 243.024 li
513.975 254.284 li
513.975 254.284 li
515.083 253.645 mo
515.083 253.645 li
505.516 248.121 li
515.083 253.645 li
526.524 247.039 li
515.083 253.645 li
546.367 236.861 mo
545.536 236.382 li
545.359 236.28 li
546.367 236.861 li
544.152 236.861 mo
515.082 220.078 li
500.547 228.469 li
486.012 236.86 li
484.905 236.221 li
497.806 228.773 li
513.974 219.438 li
515.082 218.799 li
515.082 218.799 li
515.254 218.899 li
515.358 218.959 li
516.189 219.439 li
545.259 236.222 li
544.152 236.861 li
f
546.368 271.707 mo
546.368 271.707 li
546.368 271.707 li
545.36 271.125 li
545.26 271.067 li
516.19 254.284 li
516.19 254.284 li
515.156 253.687 li
515.083 253.645 li
526.524 247.039 li
544.152 236.861 li
545.259 236.222 li
545.359 236.28 li
545.536 236.382 li
546.367 236.861 li
546.367 236.862 li
576.545 254.284 li
546.368 271.707 li
516.19 254.284 mo
545.26 271.067 li
574.33 254.284 li
545.259 237.501 li
530.725 245.893 li
516.19 254.284 li
f
244.593 132.322 mo
244.593 132.322 li
257.319 124.974 li
244.593 132.322 li
242.377 132.322 mo
212.2 114.898 li
243.484 96.8369 li
243.76 96.997 li
273.662 114.26 li
272.554 114.899 li
243.484 98.1162 li
214.415 114.898 li
243.485 131.683 li
258.02 123.291 li
243.485 131.683 li
243.485 131.683 li
242.377 132.322 li
274.769 114.899 mo
273.938 114.42 li
273.805 114.343 li
274.769 114.899 li
f
274.77 149.745 mo
274.77 149.745 li
289.305 141.354 li
274.771 149.745 li
273.663 149.106 mo
243.761 131.843 li
243.485 131.683 li
258.02 123.291 li
272.554 114.899 li
273.662 114.26 li
273.662 114.26 li
273.805 114.343 li
273.938 114.42 li
274.769 114.899 li
303.839 131.683 li
302.732 132.322 li
273.662 115.539 li
257.319 124.974 li
244.593 132.322 li
273.663 149.106 li
288.197 140.714 li
273.663 149.106 li
273.663 149.106 li
304.947 132.322 mo
304.116 131.843 li
303.94 131.741 li
304.947 132.322 li
f
304.948 167.168 mo
304.948 167.168 li
319.483 158.776 li
304.948 167.168 li
303.84 166.528 mo
274.77 149.745 li
274.77 149.745 li
273.763 149.163 li
273.663 149.106 li
288.197 140.714 li
302.732 132.322 li
303.84 131.683 li
303.84 131.683 li
303.94 131.741 li
304.116 131.843 li
304.947 132.322 li
334.017 149.106 li
332.91 149.745 li
303.84 132.962 li
289.305 141.354 li
274.77 149.745 li
303.841 166.528 li
322.952 155.495 li
303.841 166.528 li
303.841 166.528 li
f
335.126 184.591 mo
335.126 184.591 li
345.624 178.53 li
335.126 184.591 li
334.019 183.951 mo
334.018 183.951 li
304.948 167.168 li
304.948 167.168 li
303.978 166.608 li
303.841 166.528 li
322.952 155.495 li
332.91 149.745 li
334.017 149.106 li
335.125 149.745 li
335.125 149.745 li
349.66 158.137 li
364.195 166.529 li
363.087 167.169 li
348.552 158.777 li
334.017 150.385 li
319.483 158.776 li
304.948 167.168 li
334.018 183.951 li
354.094 172.361 li
334.019 183.951 li
365.302 167.169 mo
364.471 166.689 li
364.271 166.573 li
365.303 167.169 li
f
365.304 202.014 mo
365.304 202.014 li
375.802 195.953 li
365.304 202.014 li
364.196 201.374 mo
364.196 201.374 li
335.125 184.591 li
335.126 184.591 li
334.156 184.031 li
334.019 183.951 li
354.094 172.361 li
363.087 167.169 li
363.087 167.169 li
364.195 166.529 li
364.195 166.529 li
364.271 166.573 li
364.471 166.689 li
365.302 167.169 li
394.373 183.952 li
393.265 184.592 li
364.195 167.809 li
345.624 178.53 li
335.126 184.591 li
364.196 201.374 li
384.272 189.784 li
364.196 201.374 li
f
395.48 219.437 mo
395.48 219.437 li
408.207 212.09 li
395.48 219.438 li
393.265 219.437 mo
376.821 209.943 li
393.265 219.437 li
393.265 219.437 li
394.373 218.798 mo
394.373 218.798 li
379.838 210.406 li
394.373 218.798 li
413.484 207.764 li
394.373 218.798 li
425.657 202.015 mo
424.826 201.535 li
424.674 201.447 li
425.657 202.015 li
423.442 202.015 mo
408.907 193.623 li
394.373 185.231 li
375.802 195.953 li
365.303 202.014 li
364.196 201.374 li
384.272 189.784 li
393.265 184.592 li
394.373 183.952 li
395.48 184.592 li
395.481 184.592 li
406.921 191.197 li
424.549 201.375 li
423.442 202.015 li
f
425.658 236.86 mo
425.658 236.86 li
434.017 232.034 li
425.658 236.86 li
424.55 236.221 mo
395.48 219.438 li
395.48 219.437 li
394.484 218.862 li
394.373 218.798 li
413.484 207.764 li
423.442 202.015 li
423.442 202.015 li
424.55 201.375 li
424.55 201.375 li
424.674 201.447 li
424.826 201.535 li
425.657 202.015 li
454.727 218.798 li
453.62 219.437 li
424.55 202.654 li
408.207 212.09 li
395.48 219.437 li
424.551 236.221 li
439.085 227.829 li
424.551 236.221 li
424.551 236.221 li
455.834 219.438 mo
455.004 218.958 li
454.898 218.896 li
455.835 219.437 li
f
455.836 254.283 mo
455.836 254.283 li
470.37 245.892 li
455.836 254.283 li
454.728 253.644 mo
425.658 236.861 li
425.658 236.86 li
424.688 236.3 li
424.551 236.221 li
439.085 227.829 li
453.62 219.437 li
454.727 218.798 li
454.728 218.798 li
454.898 218.896 li
455.004 218.958 li
455.834 219.438 li
484.905 236.221 li
483.797 236.86 li
454.727 220.077 li
434.017 232.034 li
425.658 236.86 li
454.728 253.644 li
469.263 245.252 li
454.728 253.644 li
454.728 253.644 li
f
486.013 271.706 mo
486.013 271.706 li
496.512 265.645 li
486.014 271.706 li
484.906 271.067 mo
455.836 254.283 li
455.836 254.283 li
454.903 253.745 li
454.728 253.644 li
469.263 245.252 li
483.797 236.86 li
484.905 236.221 li
486.013 236.86 li
486.013 236.86 li
505.516 248.121 li
515.083 253.645 li
513.975 254.284 li
494.472 243.024 li
484.905 237.5 li
470.37 245.892 li
455.836 254.283 li
484.906 271.066 li
503.477 260.345 li
484.906 271.067 li
484.906 271.066 li
516.19 254.284 mo
515.359 253.805 li
515.156 253.687 li
516.19 254.284 li
f
516.192 289.129 mo
516.191 289.129 li
530.726 280.738 li
516.192 289.129 li
515.084 288.489 mo
515.084 288.489 li
486.013 271.706 li
486.013 271.706 li
485.078 271.166 li
484.906 271.067 li
503.477 260.345 li
513.975 254.284 li
513.975 254.284 li
515.083 253.645 li
515.083 253.645 li
515.156 253.687 li
515.359 253.805 li
516.19 254.284 li
545.26 271.068 li
544.153 271.707 li
515.083 254.924 li
496.512 265.645 li
486.013 271.706 li
515.084 288.489 li
532.234 278.588 li
515.084 288.489 li
546.368 271.707 mo
545.537 271.228 li
545.36 271.125 li
546.368 271.707 li
f
546.369 306.553 mo
546.369 306.553 li
546.369 306.553 li
545.411 306 li
545.261 305.913 li
525.758 294.653 li
545.261 305.913 li
574.331 289.13 li
545.26 272.347 li
530.726 280.738 li
516.191 289.129 li
515.084 288.489 li
532.234 278.588 li
544.153 271.707 li
545.26 271.067 li
545.36 271.125 li
545.537 271.228 li
546.368 271.707 li
546.368 271.707 li
576.546 289.13 li
546.369 306.553 li
544.154 306.553 mo
533.217 300.238 li
544.154 306.553 li
544.154 306.553 li
f
244.593 167.168 mo
244.593 167.168 li
260.936 157.733 li
244.594 167.168 li
242.378 167.168 mo
212.201 149.744 li
242.377 132.322 li
243.485 131.683 li
243.485 131.683 li
243.761 131.843 li
273.663 149.106 li
272.555 149.745 li
243.485 132.962 li
214.416 149.744 li
243.486 166.528 li
262.657 155.46 li
243.486 166.528 li
243.486 166.528 li
242.378 167.168 li
274.77 149.745 mo
273.939 149.266 li
273.763 149.163 li
274.77 149.745 li
f
274.771 184.591 mo
274.771 184.591 li
287.651 177.155 li
274.771 184.591 li
273.663 183.951 mo
243.762 166.689 li
243.486 166.528 li
262.657 155.46 li
272.555 149.745 li
273.663 149.106 li
273.663 149.106 li
273.763 149.163 li
273.939 149.266 li
274.77 149.745 li
303.84 166.528 li
302.733 167.168 li
273.663 150.385 li
260.936 157.733 li
244.593 167.168 li
273.664 183.951 li
288.198 175.56 li
273.664 183.951 li
273.664 183.951 li
304.948 167.168 mo
304.117 166.689 li
303.978 166.608 li
304.948 167.168 li
f
304.949 202.014 mo
304.949 202.014 li
319.484 193.622 li
304.949 202.014 li
303.841 201.374 mo
274.771 184.591 li
274.771 184.591 li
273.835 184.05 li
273.664 183.951 li
288.198 175.56 li
302.733 167.168 li
303.841 166.528 li
303.841 166.528 li
303.978 166.608 li
304.117 166.689 li
304.948 167.168 li
334.018 183.951 li
332.911 184.591 li
303.841 167.808 li
287.651 177.155 li
274.771 184.591 li
303.842 201.374 li
316.568 194.026 li
303.842 201.374 li
303.842 201.374 li
335.125 184.591 mo
334.295 184.111 li
334.156 184.031 li
335.126 184.591 li
f
335.127 219.437 mo
335.127 219.436 li
349.661 211.045 li
335.127 219.437 li
334.019 218.797 mo
304.949 202.014 li
304.949 202.014 li
304.016 201.475 li
303.842 201.374 li
316.568 194.026 li
332.911 184.591 li
334.018 183.951 li
334.019 183.951 li
334.156 184.031 li
334.295 184.111 li
335.125 184.591 li
364.196 201.374 li
363.088 202.014 li
334.018 185.23 li
319.484 193.622 li
304.949 202.014 li
334.019 218.797 li
346.746 211.449 li
334.02 218.797 li
334.019 218.797 li
f
365.304 236.859 mo
365.304 236.859 li
379.838 228.468 li
365.304 236.859 li
363.088 236.859 mo
342.379 224.902 li
363.089 236.859 li
363.088 236.859 li
364.196 236.22 mo
364.196 236.22 li
354.297 230.505 li
364.196 236.22 li
377.246 228.686 li
364.196 236.22 li
395.48 219.438 mo
394.649 218.958 li
394.484 218.862 li
395.48 219.437 li
393.265 219.437 mo
376.821 209.943 li
364.196 202.653 li
349.661 211.045 li
335.127 219.437 li
334.019 218.797 li
346.746 211.449 li
363.088 202.014 li
364.196 201.374 li
365.304 202.014 li
365.304 202.014 li
379.838 210.406 li
394.373 218.798 li
393.265 219.437 li
f
395.481 254.283 mo
395.481 254.283 li
413.11 244.105 li
395.481 254.283 li
393.266 254.283 mo
385.276 249.67 li
393.266 254.283 li
393.266 254.283 li
394.374 253.644 mo
373.294 241.473 li
394.374 253.644 li
408.908 245.252 li
394.374 253.644 li
394.374 253.644 li
425.658 236.861 mo
424.827 236.381 li
424.688 236.3 li
425.658 236.86 li
423.443 236.86 mo
394.373 220.077 li
379.838 228.468 li
365.303 236.859 li
364.196 236.22 li
377.246 228.686 li
393.265 219.437 li
393.265 219.437 li
394.373 218.798 li
394.373 218.798 li
394.484 218.862 li
394.649 218.958 li
395.48 219.438 li
424.55 236.221 li
423.443 236.86 li
f
425.659 271.706 mo
425.659 271.706 li
443.287 261.528 li
425.659 271.706 li
424.551 271.067 mo
395.481 254.283 li
395.481 254.283 li
394.541 253.74 li
394.374 253.644 li
408.908 245.252 li
423.443 236.86 li
424.551 236.221 li
424.551 236.221 li
424.688 236.3 li
424.827 236.381 li
425.658 236.861 li
454.728 253.644 li
453.621 254.283 li
424.551 237.5 li
413.11 244.105 li
395.481 254.283 li
424.552 271.066 li
439.086 262.675 li
424.552 271.067 li
424.552 271.066 li
455.836 254.283 mo
455.005 253.804 li
454.903 253.745 li
455.836 254.283 li
f
455.837 289.129 mo
455.837 289.129 li
476.547 277.172 li
455.837 289.129 li
454.729 288.489 mo
425.659 271.706 li
425.659 271.706 li
424.767 271.191 li
424.552 271.067 li
439.086 262.675 li
453.621 254.283 li
454.728 253.644 li
454.728 253.644 li
454.903 253.745 li
455.005 253.804 li
455.836 254.283 li
484.906 271.067 li
483.798 271.706 li
454.728 254.923 li
443.287 261.528 li
425.659 271.706 li
454.729 288.489 li
464.628 282.774 li
454.729 288.489 li
454.729 288.489 li
486.013 271.706 mo
485.182 271.227 li
485.078 271.166 li
486.013 271.706 li
f
486.014 306.552 mo
486.014 306.552 li
500.549 298.16 li
486.015 306.552 li
484.907 305.912 mo
455.836 289.129 li
455.837 289.129 li
454.871 288.571 li
454.729 288.489 li
464.628 282.774 li
483.798 271.706 li
484.906 271.066 li
484.906 271.067 li
485.078 271.166 li
485.182 271.227 li
486.013 271.706 li
515.083 288.489 li
513.976 289.129 li
484.906 272.346 li
476.547 277.172 li
455.837 289.129 li
484.907 305.912 li
496.348 299.307 li
484.907 305.912 li
484.907 305.912 li
f
515.085 324.614 mo
515.084 324.614 li
515.085 324.614 li
515.085 324.614 li
515.085 324.614 li
516.192 323.975 mo
516.192 323.975 li
534.81 313.226 li
516.192 323.975 li
515.085 323.335 mo
486.014 306.552 li
486.014 306.552 li
485.007 305.97 li
484.907 305.912 li
496.348 299.307 li
513.976 289.129 li
515.084 288.489 li
516.191 289.129 li
516.192 289.129 li
525.758 294.653 li
545.261 305.913 li
544.154 306.553 li
533.217 300.238 li
515.084 289.769 li
500.549 298.16 li
486.014 306.552 li
515.085 323.335 li
524.078 318.143 li
515.085 323.335 li
546.369 306.553 mo
545.538 306.073 li
545.411 306 li
546.369 306.553 li
f
545.262 342.038 mo
515.085 324.614 li
515.085 324.614 li
516.192 323.975 li
515.085 323.335 li
524.078 318.143 li
544.154 306.553 li
544.154 306.553 li
545.261 305.913 li
545.411 306 li
545.538 306.073 li
546.369 306.553 li
546.369 306.553 li
576.547 323.976 li
545.262 342.038 li
516.192 323.975 mo
545.262 340.759 li
574.332 323.976 li
545.261 307.192 li
534.81 313.226 li
516.192 323.975 li
f
244.595 202.013 mo
244.595 202.013 li
260.614 192.764 li
244.595 202.013 li
242.38 202.012 mo
212.202 184.59 li
242.378 167.168 li
243.486 166.528 li
243.486 166.528 li
243.762 166.689 li
273.663 183.951 li
272.556 184.591 li
243.486 167.808 li
214.417 184.59 li
243.487 201.373 li
253.985 195.312 li
243.487 201.373 li
243.487 201.373 li
242.38 202.012 li
274.771 184.591 mo
273.94 184.111 li
273.835 184.05 li
274.771 184.591 li
f
274.772 219.437 mo
274.772 219.437 li
289.307 211.045 li
274.772 219.437 li
272.557 219.436 mo
262.99 213.913 li
272.557 219.437 li
272.557 219.436 li
273.665 218.797 mo
273.665 218.797 li
254.162 207.536 li
273.665 218.797 li
288.199 210.405 li
273.665 218.797 li
304.949 202.014 mo
304.118 201.534 li
304.016 201.475 li
304.949 202.014 li
302.734 202.014 mo
273.664 185.23 li
260.614 192.764 li
244.594 202.013 li
243.487 201.373 li
253.985 195.312 li
272.556 184.591 li
273.664 183.951 li
273.664 183.951 li
273.835 184.05 li
273.94 184.111 li
274.771 184.591 li
303.841 201.374 li
302.734 202.014 li
f
304.95 236.859 mo
304.95 236.859 li
324.061 225.826 li
304.95 236.859 li
303.842 236.22 mo
274.772 219.437 li
274.772 219.437 li
273.815 218.884 li
273.665 218.797 li
288.199 210.405 li
302.734 202.014 li
303.842 201.374 li
303.842 201.374 li
304.016 201.475 li
304.118 201.534 li
304.949 202.014 li
334.019 218.797 li
332.912 219.436 li
303.842 202.653 li
289.307 211.045 li
274.772 219.437 li
303.842 236.22 li
313.801 230.47 li
303.843 236.22 li
303.842 236.22 li
f
335.128 254.282 mo
335.128 254.282 li
349.662 245.891 li
335.128 254.282 li
334.02 253.643 mo
334.02 253.643 li
304.95 236.859 li
304.95 236.859 li
303.942 236.278 li
303.843 236.22 li
313.801 230.47 li
332.912 219.436 li
334.019 218.797 li
335.127 219.436 li
335.127 219.437 li
354.297 230.505 li
364.196 236.22 li
363.088 236.859 li
342.379 224.902 li
334.019 220.076 li
324.061 225.826 li
304.95 236.859 li
334.02 253.643 li
348.554 245.251 li
334.02 253.643 li
f
365.304 271.705 mo
365.304 271.705 li
381.324 262.457 li
365.305 271.705 li
363.089 271.705 mo
350.363 264.357 li
363.09 271.705 li
363.089 271.705 li
364.197 271.066 mo
364.197 271.065 li
349.662 262.674 li
364.197 271.065 li
374.695 265.005 li
364.197 271.066 li
395.481 254.283 mo
394.65 253.804 li
394.541 253.74 li
395.481 254.283 li
393.266 254.283 mo
385.276 249.67 li
364.196 237.499 li
349.662 245.891 li
335.128 254.282 li
334.02 253.643 li
348.554 245.251 li
363.088 236.859 li
363.088 236.859 li
364.196 236.22 li
365.304 236.859 li
365.304 236.859 li
373.294 241.473 li
394.374 253.644 li
393.266 254.283 li
f
395.483 289.128 mo
395.482 289.128 li
407.401 282.247 li
395.483 289.128 li
394.374 288.488 mo
365.304 271.705 li
365.304 271.705 li
364.279 271.113 li
364.197 271.066 li
374.695 265.005 li
393.266 254.283 li
393.266 254.283 li
394.374 253.644 li
394.374 253.644 li
394.541 253.74 li
394.65 253.804 li
395.481 254.283 li
424.551 271.067 li
423.444 271.706 li
394.374 254.923 li
381.324 262.457 li
365.304 271.705 li
394.375 288.488 li
408.909 280.097 li
394.375 288.488 li
394.375 288.488 li
425.659 271.706 mo
424.828 271.227 li
424.767 271.191 li
425.659 271.706 li
f
425.66 306.552 mo
425.66 306.552 li
438.387 299.204 li
425.66 306.552 li
423.445 306.552 mo
403.942 295.291 li
423.445 306.552 li
423.445 306.552 li
424.553 305.912 mo
424.552 305.912 li
414.985 300.388 li
424.552 305.912 li
439.087 297.52 li
424.553 305.912 li
455.836 289.129 mo
455.006 288.649 li
454.871 288.571 li
455.837 289.129 li
453.622 289.129 mo
424.552 272.346 li
407.401 282.247 li
395.482 289.128 li
394.375 288.488 li
408.909 280.097 li
423.444 271.706 li
424.552 271.066 li
424.552 271.067 li
424.767 271.191 li
424.828 271.227 li
425.659 271.706 li
454.729 288.489 li
453.622 289.129 li
f
454.73 324.614 mo
454.73 324.614 li
454.73 324.614 li
454.73 324.614 li
454.73 324.614 li
455.838 323.975 mo
455.838 323.975 li
470.372 315.583 li
455.838 323.975 li
454.73 323.335 mo
425.66 306.552 li
425.66 306.552 li
424.626 305.955 li
424.553 305.912 li
439.087 297.52 li
453.622 289.129 li
454.729 288.489 li
454.729 288.489 li
454.871 288.571 li
455.006 288.649 li
455.836 289.129 li
484.907 305.912 li
483.799 306.552 li
454.729 289.769 li
438.387 299.204 li
425.66 306.552 li
454.73 323.335 li
469.265 314.943 li
454.73 323.335 li
486.014 306.552 mo
485.183 306.072 li
485.007 305.97 li
486.014 306.552 li
f
484.908 342.037 mo
484.632 341.877 li
454.73 324.614 li
454.73 324.614 li
455.838 323.975 li
454.73 323.335 li
469.265 314.943 li
483.799 306.552 li
484.907 305.912 li
484.907 305.912 li
485.007 305.97 li
485.183 306.072 li
486.014 306.552 li
515.085 323.335 li
516.192 323.975 li
515.085 324.614 li
515.084 324.614 li
484.908 342.037 li
455.838 323.975 mo
484.908 340.758 li
513.977 323.975 li
484.907 307.191 li
470.372 315.583 li
455.838 323.975 li
f
244.595 236.858 mo
244.595 236.858 li
261.746 226.957 li
244.596 236.859 li
242.381 236.858 mo
212.203 219.436 li
242.38 202.012 li
243.487 201.373 li
244.595 202.013 li
244.595 202.013 li
254.162 207.536 li
273.665 218.797 li
272.557 219.436 li
262.99 213.913 li
243.487 202.652 li
214.418 219.436 li
243.488 236.219 li
258.023 227.828 li
243.488 236.219 li
243.488 236.219 li
242.381 236.858 li
274.772 219.437 mo
273.941 218.957 li
273.815 218.884 li
274.772 219.437 li
f
274.774 254.281 mo
274.773 254.281 li
287.823 246.747 li
274.774 254.281 li
273.665 253.642 mo
243.764 236.379 li
243.488 236.219 li
258.023 227.828 li
272.557 219.436 li
272.557 219.436 li
273.665 218.797 li
273.665 218.797 li
273.815 218.884 li
273.941 218.957 li
274.772 219.437 li
303.842 236.22 li
302.735 236.859 li
273.665 220.076 li
261.746 226.957 li
244.595 236.858 li
273.666 253.642 li
292.283 242.893 li
273.666 253.642 li
273.666 253.642 li
304.95 236.859 mo
304.119 236.38 li
303.942 236.278 li
304.95 236.859 li
f
304.951 271.705 mo
304.951 271.705 li
319.486 263.313 li
304.951 271.705 li
302.736 271.705 mo
283.233 260.445 li
302.736 271.705 li
302.736 271.705 li
303.844 271.065 mo
303.844 271.065 li
295.853 266.452 li
303.844 271.065 li
315.284 264.46 li
303.844 271.066 li
332.913 254.282 mo
303.842 237.499 li
287.823 246.747 li
274.773 254.281 li
273.666 253.642 li
292.283 242.893 li
302.735 236.859 li
303.842 236.22 li
303.843 236.22 li
303.942 236.278 li
304.119 236.38 li
304.95 236.859 li
334.02 253.643 li
332.913 254.282 li
f
335.128 289.128 mo
335.128 289.128 li
345.086 283.378 li
335.128 289.128 li
332.912 289.128 mo
320.033 281.692 li
332.913 289.128 li
332.912 289.128 li
334.021 288.488 mo
334.02 288.488 li
314.85 277.42 li
334.02 288.488 li
354.73 276.531 li
334.021 288.488 li
365.304 271.705 mo
364.473 271.226 li
364.279 271.113 li
365.304 271.705 li
363.09 271.705 mo
350.363 264.357 li
334.02 254.922 li
319.486 263.313 li
304.951 271.705 li
303.844 271.065 li
315.284 264.46 li
332.913 254.282 li
334.02 253.643 li
335.128 254.282 li
335.128 254.282 li
349.662 262.674 li
364.197 271.066 li
363.089 271.705 li
f
365.305 306.551 mo
365.305 306.551 li
379.84 298.159 li
365.306 306.551 li
364.198 305.911 mo
364.198 305.911 li
335.127 289.128 li
335.128 289.128 li
334.143 288.56 li
334.021 288.488 li
354.73 276.531 li
363.089 271.705 li
363.089 271.705 li
364.197 271.065 li
364.197 271.066 li
364.279 271.113 li
364.473 271.226 li
365.304 271.705 li
394.374 288.488 li
393.267 289.128 li
364.197 272.345 li
345.086 283.378 li
335.128 289.128 li
364.198 305.911 li
380.541 296.476 li
364.198 305.911 li
f
394.376 324.613 mo
394.376 324.613 li
394.376 324.613 li
394.376 324.613 li
394.376 324.613 li
395.483 323.974 mo
395.483 323.974 li
408.533 316.44 li
395.483 323.974 li
394.376 323.334 mo
365.305 306.551 li
365.305 306.551 li
364.372 306.012 li
364.198 305.911 li
380.541 296.476 li
393.267 289.128 li
394.375 288.488 li
395.482 289.128 li
395.483 289.128 li
414.985 300.388 li
424.552 305.912 li
423.445 306.552 li
403.942 295.291 li
394.375 289.767 li
379.84 298.159 li
365.305 306.551 li
394.376 323.334 li
412.993 312.586 li
394.376 323.334 li
425.66 306.552 mo
424.829 306.072 li
424.626 305.955 li
425.66 306.552 li
f
424.553 342.036 mo
424.277 341.876 li
394.376 324.613 li
394.376 324.613 li
395.483 323.974 li
394.376 323.334 li
412.993 312.586 li
423.445 306.552 li
423.445 306.552 li
424.552 305.912 li
424.553 305.912 li
424.626 305.955 li
424.829 306.072 li
425.66 306.552 li
454.73 323.335 li
455.838 323.975 li
454.73 324.614 li
454.73 324.614 li
424.553 342.036 li
395.483 323.974 mo
424.553 340.757 li
453.623 323.975 li
424.552 307.191 li
408.533 316.44 li
395.483 323.974 li
f
244.596 271.704 mo
244.596 271.704 li
256.037 265.099 li
244.597 271.704 li
242.382 271.704 mo
212.204 254.281 li
242.381 236.858 li
243.488 236.219 li
243.488 236.219 li
243.764 236.379 li
273.665 253.642 li
272.558 254.281 li
243.488 237.498 li
214.419 254.281 li
243.489 271.064 li
258.024 262.673 li
243.489 271.065 li
243.489 271.064 li
242.382 271.704 li
f
274.775 289.127 mo
274.774 289.127 li
289.309 280.736 li
274.775 289.127 li
273.667 288.487 mo
243.765 271.225 li
243.489 271.065 li
258.024 262.673 li
272.558 254.281 li
273.666 253.642 li
274.773 254.281 li
274.774 254.281 li
295.853 266.452 li
303.843 271.066 li
302.736 271.705 li
283.233 260.445 li
273.666 254.921 li
256.037 265.099 li
244.596 271.704 li
273.667 288.487 li
288.201 280.096 li
273.667 288.487 li
273.667 288.487 li
f
304.951 306.551 mo
304.951 306.551 li
319.486 298.159 li
304.951 306.551 li
302.736 306.551 mo
293.624 301.29 li
302.736 306.551 li
302.736 306.551 li
303.844 305.911 mo
303.844 305.911 li
283.886 294.388 li
303.844 305.911 li
316.57 298.563 li
303.844 305.911 li
335.127 289.128 mo
334.297 288.648 li
334.143 288.56 li
335.128 289.128 li
332.913 289.128 mo
320.033 281.692 li
303.844 272.345 li
289.309 280.736 li
274.774 289.127 li
273.667 288.487 li
288.201 280.096 li
302.736 271.705 li
302.736 271.705 li
303.844 271.065 li
304.951 271.705 li
304.951 271.705 li
314.85 277.42 li
334.02 288.488 li
332.913 289.128 li
f
334.021 324.613 mo
334.021 324.613 li
334.021 324.613 li
334.021 324.613 li
334.021 324.613 li
335.129 323.974 mo
335.129 323.974 li
349.663 315.582 li
335.129 323.974 li
334.021 323.334 mo
304.951 306.551 li
304.951 306.551 li
303.985 305.993 li
303.844 305.911 li
316.57 298.563 li
332.912 289.128 li
332.913 289.128 li
334.02 288.488 li
334.021 288.488 li
334.143 288.56 li
334.297 288.648 li
335.127 289.128 li
364.198 305.911 li
363.09 306.551 li
334.02 289.767 li
319.486 298.159 li
304.951 306.551 li
334.021 323.334 li
346.748 315.986 li
334.021 323.334 li
365.305 306.551 mo
364.474 306.071 li
364.372 306.012 li
365.305 306.551 li
f
364.199 342.036 mo
363.923 341.876 li
334.021 324.613 li
334.021 324.613 li
335.129 323.974 li
334.021 323.334 li
346.748 315.986 li
363.09 306.551 li
364.198 305.911 li
364.198 305.911 li
364.372 306.012 li
364.474 306.071 li
365.305 306.551 li
394.376 323.334 li
395.483 323.974 li
394.376 324.613 li
394.376 324.613 li
364.199 342.036 li
335.129 323.974 mo
364.199 340.757 li
393.268 323.974 li
364.198 307.19 li
349.663 315.582 li
335.129 323.974 li
f
244.597 306.55 mo
244.597 306.55 li
260.94 297.114 li
244.598 306.55 li
242.383 306.55 mo
212.205 289.127 li
242.382 271.704 li
243.489 271.064 li
243.489 271.065 li
243.765 271.225 li
273.667 288.487 li
272.559 289.127 li
243.489 272.344 li
214.42 289.127 li
243.49 305.91 li
258.025 297.519 li
243.49 305.91 li
243.49 305.91 li
242.383 306.55 li
f
284.55 318.329 mo
284.55 318.329 li
295.2 312.181 li
284.55 318.329 li
252.288 310.99 mo
243.766 306.07 li
243.49 305.91 li
258.025 297.519 li
272.559 289.127 li
273.667 288.487 li
274.774 289.127 li
274.775 289.127 li
283.886 294.388 li
303.843 305.911 li
302.736 306.551 li
293.624 301.29 li
273.667 289.767 li
260.94 297.114 li
244.597 306.55 li
252.289 310.99 li
252.288 310.99 li
304.951 306.551 mo
304.12 306.071 li
303.985 305.993 li
304.951 306.551 li
f
303.844 342.035 mo
276.8 326.421 li
277.908 325.781 li
303.844 340.756 li
332.914 323.974 li
303.844 307.19 li
295.2 312.181 li
284.55 318.329 li
284.736 317.818 284.888 317.303 285 316.79 cv
302.736 306.551 li
302.736 306.551 li
303.844 305.911 li
303.844 305.911 li
303.985 305.993 li
304.12 306.071 li
304.951 306.551 li
334.021 323.334 li
335.129 323.974 li
334.021 324.613 li
334.021 324.613 li
303.844 342.035 li
f
234.558 336.877 mo
212.206 323.973 li
242.383 306.55 li
243.49 305.91 li
243.49 305.91 li
243.766 306.07 li
252.288 310.99 li
251.932 311.198 251.579 311.421 251.23 311.658 cv
243.49 307.189 li
214.421 323.973 li
235.501 336.143 li
235.178 336.364 234.863 336.61 234.558 336.877 cv
f
59.0505 126.762 mo
59.0505 117.489 li
60.74 117.489 li
60.74 125.593 li
62.9597 125.593 li
62.9597 126.762 li
59.0505 126.762 li
cp
0 0 0 0 cmyk
f
65.7556 125.767 mo
65.8826 125.767 65.9861 125.738 66.0662 125.683 cv
66.1462 125.626 66.2039 125.54 66.24 125.422 cv
66.2751 125.305 66.2986 125.191 66.3093 125.081 cv
66.321 124.972 66.3259 124.829 66.3259 124.653 cv
66.3259 122.254 li
66.3259 122.116 66.323 122.002 66.3181 121.91 cv
66.3123 121.819 66.2996 121.72 66.2791 121.611 cv
66.2585 121.503 66.2273 121.418 66.1863 121.356 cv
66.0183 121.2 li
65.948 121.157 65.8601 121.136 65.7556 121.136 cv
65.6287 121.136 65.5251 121.165 65.4451 121.223 cv
65.365 121.28 65.3074 121.368 65.2722 121.485 cv
65.2361 121.603 65.2136 121.717 65.2019 121.826 cv
65.1912 121.937 65.1853 122.079 65.1853 122.254 cv
65.1853 124.653 li
65.1853 124.791 65.1882 124.906 65.1941 124.997 cv
65.199 125.089 65.2126 125.188 65.2332 125.294 cv
65.2537 125.4 65.2839 125.483 65.325 125.545 cv
65.4929 125.702 li
65.5632 125.745 65.6511 125.767 65.7556 125.767 cv
cp
65.7498 126.868 mo
65.0378 126.868 64.5076 126.668 64.1589 126.267 cv
63.8103 125.866 63.6365 125.293 63.6365 124.547 cv
63.6365 122.36 li
63.6365 121.615 63.8103 121.042 64.1589 120.641 cv
64.5076 120.24 65.0378 120.04 65.7498 120.04 cv
66.4656 120.04 66.9998 120.24 67.3523 120.641 cv
67.7048 121.042 67.8806 121.615 67.8806 122.36 cv
67.8806 124.547 li
67.8806 125.293 67.7048 125.866 67.3523 126.267 cv
66.9998 126.668 66.4656 126.868 65.7498 126.868 cv
cp
f
68.9773 126.762 mo
68.9773 120.141 li
70.5427 120.141 li
70.5427 121.158 li
70.7625 120.767 70.9851 120.485 71.2107 120.313 cv
71.4363 120.143 71.6785 120.057 71.9353 120.057 cv
72.1707 120.084 li
72.1707 121.634 li
71.9949 121.566 71.8142 121.533 71.6277 121.533 cv
71.4041 121.54 71.2078 121.597 71.0378 121.7 cv
70.8679 121.805 70.7029 121.979 70.5427 122.221 cv
70.5427 126.762 li
68.9773 126.762 li
cp
f
74.3406 122.746 mo
75.4705 122.746 li
75.4705 122.114 li
75.4705 121.779 75.4285 121.538 75.3445 121.393 cv
75.2605 121.248 75.1121 121.175 74.8992 121.175 cv
74.6833 121.175 74.5359 121.257 74.4578 121.421 cv
74.3796 121.585 74.3406 121.884 74.3406 122.315 cv
74.3406 122.746 li
cp
74.9167 126.868 mo
74.1599 126.868 73.615 126.659 73.283 126.241 cv
72.9519 125.824 72.7859 125.207 72.7859 124.391 cv
72.7859 122.517 li
72.7859 121.7 72.9539 121.084 73.2888 120.666 cv
73.6248 120.248 74.1648 120.04 74.9109 120.04 cv
75.3054 120.04 75.6384 120.098 75.9089 120.213 cv
76.1794 120.329 76.3904 120.504 76.5408 120.738 cv
76.6921 120.974 76.7996 121.245 76.8621 121.553 cv
76.9255 121.86 76.9578 122.23 76.9578 122.662 cv
76.9578 123.529 li
74.3406 123.529 li
74.3406 124.524 li
74.3406 124.663 74.3416 124.77 74.3435 124.847 cv
74.3455 124.923 74.3513 125.015 74.363 125.123 cv
74.3738 125.231 74.3914 125.315 74.4158 125.375 cv
74.5134 125.557 li
74.6755 125.688 li
74.9109 125.728 li
75.1199 125.728 75.2654 125.653 75.3474 125.506 cv
75.4285 125.359 75.4705 125.146 75.4705 124.866 cv
75.4705 124.485 li
76.9519 124.485 li
76.9519 124.748 li
76.9519 125.435 76.781 125.959 76.4402 126.322 cv
76.0994 126.687 75.5916 126.868 74.9167 126.868 cv
cp
f
78.0261 126.762 mo
78.0261 120.141 li
79.5134 120.141 li
79.5134 120.722 li
79.9568 120.256 80.4812 120.022 81.0847 120.022 cv
81.6365 120.022 82.0037 120.293 82.1863 120.834 cv
82.6531 120.293 83.2097 120.022 83.8591 120.022 cv
84.2283 120.022 84.5242 120.157 84.7478 120.426 cv
84.9714 120.694 85.0837 121.084 85.0837 121.595 cv
85.0837 126.762 li
83.5955 126.762 li
83.5955 121.729 li
83.5955 121.486 83.5554 121.314 83.4753 121.214 cv
83.3953 121.113 83.2771 121.065 83.1208 121.068 cv
82.8484 121.076 82.574 121.205 82.2986 121.454 cv
82.3015 121.521 li
82.3044 121.595 li
82.3044 126.762 li
80.822 126.762 li
80.822 121.729 li
80.822 121.486 80.782 121.314 80.7019 121.214 cv
80.6218 121.113 80.5017 121.065 80.3416 121.068 cv
80.0798 121.076 79.8044 121.207 79.5134 121.46 cv
79.5134 126.762 li
78.0261 126.762 li
cp
f
89.0867 126.762 mo
89.0867 120.141 li
90.6531 120.141 li
90.6531 126.762 li
89.0867 126.762 li
cp
89.0867 119.095 mo
89.0867 117.774 li
90.658 117.774 li
90.658 119.095 li
89.0867 119.095 li
cp
f
94.1375 125.744 mo
94.2527 125.744 94.3494 125.711 94.4275 125.646 cv
94.5066 125.581 94.5632 125.485 94.5984 125.36 cv
94.6335 125.236 94.658 125.107 94.6707 124.975 cv
94.6843 124.843 94.6912 124.684 94.6912 124.497 cv
94.6912 122.215 li
94.6912 122.063 94.6824 121.925 94.6658 121.804 cv
94.6492 121.683 94.6199 121.567 94.5789 121.457 cv
94.5378 121.348 94.4763 121.264 94.3943 121.206 cv
94.3123 121.147 94.2136 121.121 94.0974 121.125 cv
93.8923 121.128 93.6765 121.216 93.449 121.388 cv
93.449 125.537 li
93.6726 125.675 93.9021 125.744 94.1375 125.744 cv
cp
91.8835 128.942 mo
91.8835 120.141 li
93.449 120.141 li
93.449 120.649 li
93.8591 120.239 94.3044 120.036 94.7859 120.04 cv
95.0203 120.043 95.2283 120.098 95.4089 120.202 cv
95.5906 120.307 95.7322 120.436 95.8347 120.591 cv
95.9373 120.745 96.0203 120.928 96.0857 121.139 cv
96.1511 121.35 96.1951 121.545 96.2175 121.726 cv
96.24 121.906 96.2507 122.09 96.2507 122.276 cv
96.2507 124.446 li
96.2507 124.782 96.2234 125.091 96.1667 125.372 cv
96.1111 125.653 96.0232 125.909 95.9041 126.138 cv
95.7849 126.367 95.6218 126.547 95.4148 126.675 cv
95.2078 126.804 94.9646 126.868 94.6853 126.868 cv
94.2751 126.868 93.863 126.669 93.449 126.27 cv
93.449 128.942 li
91.8835 128.942 li
cp
f
99.0583 126.868 mo
98.5105 126.868 98.0613 126.715 97.7107 126.409 cv
97.3601 126.104 97.1199 125.664 96.989 125.09 cv
98.1746 124.659 li
98.2566 125.024 98.3718 125.301 98.5212 125.489 cv
98.6707 125.678 98.8572 125.769 99.0808 125.761 cv
99.2449 125.757 99.3796 125.698 99.4861 125.585 cv
99.5925 125.471 99.6414 125.332 99.6345 125.168 cv
99.6189 124.93 99.4011 124.629 98.9802 124.268 cv
98.0906 123.507 li
97.449 122.955 97.1365 122.379 97.1511 121.779 cv
97.1619 121.25 97.3425 120.827 97.6912 120.513 cv
98.0398 120.197 98.4841 120.04 99.0242 120.04 cv
99.5427 120.04 99.9646 120.196 100.289 120.51 cv
100.613 120.822 100.823 121.242 100.921 121.768 cv
99.8914 122.198 li
99.7498 121.513 99.4851 121.168 99.0974 121.164 cv
98.9333 121.16 98.8015 121.21 98.7029 121.314 cv
98.6042 121.419 98.5544 121.544 98.5544 121.689 cv
98.5515 121.891 98.7361 122.153 99.1082 122.478 cv
100.014 123.3 li
100.168 123.435 100.294 123.555 100.394 123.661 cv
100.496 123.767 100.6 123.896 100.711 124.05 cv
100.821 124.202 100.903 124.366 100.957 124.542 cv
101.01 124.717 101.038 124.905 101.038 125.106 cv
101.038 125.666 100.852 126.099 100.481 126.406 cv
100.11 126.714 99.6365 126.868 99.0583 126.868 cv
cp
f
102.923 126.862 mo
102.546 126.862 102.271 126.725 102.097 126.448 cv
101.925 126.173 101.838 125.833 101.838 125.431 cv
101.838 120.141 li
103.398 120.141 li
103.398 125.112 li
103.398 125.317 103.429 125.47 103.493 125.57 cv
103.556 125.671 103.674 125.72 103.845 125.716 cv
104.028 125.716 104.252 125.623 104.516 125.437 cv
104.516 120.141 li
106.077 120.141 li
106.077 126.762 li
104.516 126.762 li
104.516 126.141 li
103.991 126.622 103.46 126.862 102.923 126.862 cv
cp
f
107.285 126.762 mo
107.285 120.141 li
108.772 120.141 li
108.772 120.722 li
109.216 120.256 109.74 120.022 110.344 120.022 cv
110.895 120.022 111.262 120.293 111.445 120.834 cv
111.912 120.293 112.469 120.022 113.118 120.022 cv
113.487 120.022 113.783 120.157 114.007 120.426 cv
114.23 120.694 114.343 121.084 114.343 121.595 cv
114.343 126.762 li
112.854 126.762 li
112.854 121.729 li
112.854 121.486 112.814 121.314 112.734 121.214 cv
112.654 121.113 112.536 121.065 112.38 121.068 cv
112.107 121.076 111.833 121.205 111.557 121.454 cv
111.56 121.521 li
111.563 121.595 li
111.563 126.762 li
110.081 126.762 li
110.081 121.729 li
110.081 121.486 110.041 121.314 109.961 121.214 cv
109.881 121.113 109.76 121.065 109.6 121.068 cv
109.339 121.076 109.063 121.207 108.772 121.46 cv
108.772 126.762 li
107.285 126.762 li
cp
f
120.347 125.749 mo
120.538 125.749 120.739 125.689 120.952 125.57 cv
120.952 121.343 li
120.739 121.208 120.536 121.142 120.343 121.142 cv
120.134 121.142 119.983 121.236 119.892 121.427 cv
119.801 121.617 119.755 121.859 119.755 122.153 cv
119.755 124.581 li
119.755 124.819 119.768 125.017 119.794 125.174 cv
119.82 125.33 119.879 125.465 119.97 125.579 cv
120.061 125.692 120.187 125.749 120.347 125.749 cv
cp
119.8 126.868 mo
119.26 126.868 118.854 126.676 118.587 126.292 cv
118.318 125.908 118.183 125.299 118.183 124.463 cv
118.183 122.539 li
118.183 122.186 118.211 121.864 118.264 121.577 cv
118.319 121.29 118.404 121.027 118.522 120.789 cv
118.639 120.551 118.804 120.366 119.016 120.235 cv
119.229 120.104 119.483 120.04 119.777 120.04 cv
120.195 120.04 120.587 120.209 120.952 120.549 cv
120.952 117.489 li
122.517 117.489 li
122.517 126.762 li
120.952 126.762 li
120.952 126.309 li
120.597 126.678 120.214 126.864 119.8 126.868 cv
cp
f
125.711 125.767 mo
125.838 125.767 125.941 125.738 126.021 125.683 cv
126.101 125.626 126.159 125.54 126.195 125.422 cv
126.23 125.305 126.254 125.191 126.264 125.081 cv
126.276 124.972 126.281 124.829 126.281 124.653 cv
126.281 122.254 li
126.281 122.116 126.278 122.002 126.273 121.91 cv
126.267 121.819 126.255 121.72 126.234 121.611 cv
126.214 121.503 126.182 121.418 126.141 121.356 cv
125.973 121.2 li
125.903 121.157 125.815 121.136 125.711 121.136 cv
125.584 121.136 125.48 121.165 125.4 121.223 cv
125.32 121.28 125.262 121.368 125.227 121.485 cv
125.191 121.603 125.169 121.717 125.157 121.826 cv
125.146 121.937 125.14 122.079 125.14 122.254 cv
125.14 124.653 li
125.14 124.791 125.143 124.906 125.149 124.997 cv
125.154 125.089 125.168 125.188 125.188 125.294 cv
125.209 125.4 125.239 125.483 125.28 125.545 cv
125.448 125.702 li
125.518 125.745 125.606 125.767 125.711 125.767 cv
cp
125.705 126.868 mo
124.993 126.868 124.463 126.668 124.114 126.267 cv
123.765 125.866 123.592 125.293 123.592 124.547 cv
123.592 122.36 li
123.592 121.615 123.765 121.042 124.114 120.641 cv
124.463 120.24 124.993 120.04 125.705 120.04 cv
126.421 120.04 126.955 120.24 127.307 120.641 cv
127.66 121.042 127.836 121.615 127.836 122.36 cv
127.836 124.547 li
127.836 125.293 127.66 125.866 127.307 126.267 cv
126.955 126.668 126.421 126.868 125.705 126.868 cv
cp
f
129.01 126.762 mo
129.01 117.489 li
130.576 117.489 li
130.576 126.762 li
129.01 126.762 li
cp
f
133.802 125.767 mo
133.929 125.767 134.033 125.738 134.113 125.683 cv
134.193 125.626 134.251 125.54 134.287 125.422 cv
134.322 125.305 134.345 125.191 134.356 125.081 cv
134.368 124.972 134.373 124.829 134.373 124.653 cv
134.373 122.254 li
134.373 122.116 134.37 122.002 134.365 121.91 cv
134.359 121.819 134.346 121.72 134.326 121.611 cv
134.305 121.503 134.274 121.418 134.233 121.356 cv
134.065 121.2 li
133.995 121.157 133.907 121.136 133.802 121.136 cv
133.676 121.136 133.572 121.165 133.492 121.223 cv
133.412 121.28 133.354 121.368 133.319 121.485 cv
133.283 121.603 133.26 121.717 133.249 121.826 cv
133.238 121.937 133.232 122.079 133.232 122.254 cv
133.232 124.653 li
133.232 124.791 133.235 124.906 133.241 124.997 cv
133.246 125.089 133.26 125.188 133.28 125.294 cv
133.301 125.4 133.331 125.483 133.372 125.545 cv
133.54 125.702 li
133.61 125.745 133.698 125.767 133.802 125.767 cv
cp
133.797 126.868 mo
133.085 126.868 132.554 126.668 132.206 126.267 cv
131.857 125.866 131.683 125.293 131.683 124.547 cv
131.683 122.36 li
131.683 121.615 131.857 121.042 132.206 120.641 cv
132.554 120.24 133.085 120.04 133.797 120.04 cv
134.512 120.04 135.047 120.24 135.399 120.641 cv
135.752 121.042 135.927 121.615 135.927 122.36 cv
135.927 124.547 li
135.927 125.293 135.752 125.866 135.399 126.267 cv
135.047 126.668 134.512 126.868 133.797 126.868 cv
cp
f
137.024 126.762 mo
137.024 120.141 li
138.59 120.141 li
138.59 121.158 li
138.809 120.767 139.032 120.485 139.258 120.313 cv
139.483 120.143 139.725 120.057 139.982 120.057 cv
140.218 120.084 li
140.218 121.634 li
140.042 121.566 139.861 121.533 139.675 121.533 cv
139.451 121.54 139.255 121.597 139.085 121.7 cv
138.915 121.805 138.75 121.979 138.59 122.221 cv
138.59 126.762 li
137.024 126.762 li
cp
f
145.485 126.868 mo
144.937 126.868 144.488 126.715 144.137 126.409 cv
143.787 126.104 143.547 125.664 143.416 125.09 cv
144.601 124.659 li
144.683 125.024 144.799 125.301 144.948 125.489 cv
145.097 125.678 145.284 125.769 145.508 125.761 cv
145.672 125.757 145.806 125.698 145.913 125.585 cv
146.019 125.471 146.068 125.332 146.061 125.168 cv
146.046 124.93 145.828 124.629 145.407 124.268 cv
144.517 123.507 li
143.876 122.955 143.563 122.379 143.578 121.779 cv
143.589 121.25 143.769 120.827 144.118 120.513 cv
144.467 120.197 144.911 120.04 145.451 120.04 cv
145.969 120.04 146.391 120.196 146.716 120.51 cv
147.04 120.822 147.25 121.242 147.347 121.768 cv
146.318 122.198 li
146.177 121.513 145.912 121.168 145.524 121.164 cv
145.36 121.16 145.228 121.21 145.13 121.314 cv
145.031 121.419 144.981 121.544 144.981 121.689 cv
144.978 121.891 145.163 122.153 145.535 122.478 cv
146.441 123.3 li
146.594 123.435 146.72 123.555 146.821 123.661 cv
146.923 123.767 147.027 123.896 147.137 124.05 cv
147.248 124.202 147.33 124.366 147.384 124.542 cv
147.437 124.717 147.465 124.905 147.465 125.106 cv
147.465 125.666 147.279 126.099 146.908 126.406 cv
146.537 126.714 146.063 126.868 145.485 126.868 cv
cp
f
148.359 126.762 mo
148.359 120.141 li
149.926 120.141 li
149.926 126.762 li
148.359 126.762 li
cp
148.359 119.095 mo
148.359 117.774 li
149.93 117.774 li
149.93 119.095 li
148.359 119.095 li
cp
f
153.002 126.852 mo
152.699 126.848 152.443 126.797 152.232 126.7 cv
152.021 126.604 151.859 126.465 151.746 126.283 cv
151.632 126.103 151.55 125.9 151.5 125.677 cv
151.449 125.453 151.425 125.192 151.425 124.894 cv
151.425 121.175 li
150.77 121.175 li
150.77 120.141 li
151.425 120.141 li
151.425 118.194 li
152.996 118.194 li
152.996 120.141 li
154.003 120.141 li
154.003 121.175 li
152.996 121.175 li
152.996 124.994 li
152.996 125.211 153.043 125.366 153.138 125.462 cv
153.233 125.557 153.385 125.606 153.594 125.609 cv
153.739 125.613 153.898 125.603 154.069 125.576 cv
154.069 126.772 li
153.626 126.832 153.269 126.858 153.002 126.852 cv
cp
f
159.628 125.654 mo
159.747 125.654 159.866 125.609 159.983 125.521 cv
160.1 125.431 160.194 125.34 160.265 125.246 cv
160.265 123.423 li
159.49 123.852 159.102 124.338 159.102 124.883 cv
159.102 125.121 159.148 125.31 159.239 125.447 cv
159.331 125.586 159.46 125.654 159.628 125.654 cv
cp
159.029 126.868 mo
158.612 126.864 158.269 126.701 158.004 126.379 cv
157.737 126.057 157.603 125.691 157.603 125.285 cv
157.603 124.901 157.667 124.565 157.794 124.278 cv
157.921 123.991 158.128 123.745 158.417 123.54 cv
158.706 123.336 158.946 123.187 159.135 123.093 cv
159.326 123 159.619 122.877 160.013 122.724 cv
160.126 122.68 160.21 122.646 160.265 122.623 cv
160.265 122.069 li
160.265 121.771 160.231 121.554 160.162 121.415 cv
160.093 121.277 159.952 121.208 159.74 121.208 cv
159.393 121.208 159.216 121.451 159.209 121.936 cv
159.186 122.35 li
157.687 122.293 li
157.69 122.17 li
157.693 122.053 li
157.741 121.359 157.947 120.851 158.311 120.526 cv
158.675 120.202 159.193 120.04 159.868 120.04 cv
160.52 120.04 161.005 120.217 161.319 120.571 cv
161.635 120.925 161.792 121.427 161.792 122.075 cv
161.792 125.101 li
161.792 125.607 161.833 126.161 161.915 126.762 cv
160.501 126.762 li
160.415 126.329 160.36 126.005 160.338 125.789 cv
160.245 126.095 160.09 126.351 159.871 126.558 cv
159.653 126.765 159.373 126.868 159.029 126.868 cv
cp
f
162.939 126.762 mo
162.939 120.141 li
164.427 120.141 li
164.427 120.722 li
164.87 120.256 165.394 120.022 165.998 120.022 cv
166.55 120.022 166.917 120.293 167.099 120.834 cv
167.566 120.293 168.123 120.022 168.772 120.022 cv
169.141 120.022 169.437 120.157 169.661 120.426 cv
169.885 120.694 169.997 121.084 169.997 121.595 cv
169.997 126.762 li
168.509 126.762 li
168.509 121.729 li
168.509 121.486 168.469 121.314 168.388 121.214 cv
168.308 121.113 168.19 121.065 168.034 121.068 cv
167.761 121.076 167.487 121.205 167.212 121.454 cv
167.215 121.521 li
167.218 121.595 li
167.218 126.762 li
165.735 126.762 li
165.735 121.729 li
165.735 121.486 165.695 121.314 165.615 121.214 cv
165.535 121.113 165.415 121.065 165.255 121.068 cv
164.993 121.076 164.718 121.207 164.427 121.46 cv
164.427 126.762 li
162.939 126.762 li
cp
f
172.586 122.746 mo
173.716 122.746 li
173.716 122.114 li
173.716 121.779 173.674 121.538 173.59 121.393 cv
173.506 121.248 173.357 121.175 173.144 121.175 cv
172.928 121.175 172.781 121.257 172.703 121.421 cv
172.625 121.585 172.586 121.884 172.586 122.315 cv
172.586 122.746 li
cp
173.162 126.868 mo
172.405 126.868 171.86 126.659 171.528 126.241 cv
171.197 125.824 171.031 125.207 171.031 124.391 cv
171.031 122.517 li
171.031 121.7 171.199 121.084 171.534 120.666 cv
171.87 120.248 172.41 120.04 173.156 120.04 cv
173.551 120.04 173.884 120.098 174.154 120.213 cv
174.425 120.329 174.635 120.504 174.786 120.738 cv
174.937 120.974 175.045 121.245 175.107 121.553 cv
175.171 121.86 175.203 122.23 175.203 122.662 cv
175.203 123.529 li
172.586 123.529 li
172.586 124.524 li
172.586 124.663 172.587 124.77 172.589 124.847 cv
172.591 124.923 172.596 125.015 172.608 125.123 cv
172.619 125.231 172.636 125.315 172.661 125.375 cv
172.759 125.557 li
172.921 125.688 li
173.156 125.728 li
173.365 125.728 173.51 125.653 173.593 125.506 cv
173.674 125.359 173.716 125.146 173.716 124.866 cv
173.716 124.485 li
175.197 124.485 li
175.197 124.748 li
175.197 125.435 175.026 125.959 174.685 126.322 cv
174.344 126.687 173.837 126.868 173.162 126.868 cv
cp
f
178.117 126.852 mo
177.814 126.848 177.558 126.797 177.347 126.7 cv
177.136 126.604 176.974 126.465 176.861 126.283 cv
176.747 126.103 176.665 125.9 176.615 125.677 cv
176.564 125.453 176.54 125.192 176.54 124.894 cv
176.54 121.175 li
175.885 121.175 li
175.885 120.141 li
176.54 120.141 li
176.54 118.194 li
178.111 118.194 li
178.111 120.141 li
179.118 120.141 li
179.118 121.175 li
178.111 121.175 li
178.111 124.994 li
178.111 125.211 178.158 125.366 178.254 125.462 cv
178.348 125.557 178.501 125.606 178.71 125.609 cv
178.854 125.613 179.013 125.603 179.184 125.576 cv
179.184 126.772 li
178.741 126.832 178.385 126.858 178.117 126.852 cv
cp
f
180.169 128.333 mo
180.001 127.746 li
180.221 127.69 180.401 127.577 180.541 127.407 cv
180.68 127.238 180.751 127.022 180.751 126.762 cv
179.928 126.762 li
179.928 125.246 li
181.467 125.246 li
181.467 126.655 li
181.467 127.603 181.034 128.162 180.169 128.333 cv
cp
f
187.26 126.868 mo
186.51 126.868 185.971 126.657 185.643 126.236 cv
185.315 125.814 185.151 125.205 185.151 124.407 cv
185.151 122.489 li
185.151 121.691 185.315 121.084 185.643 120.666 cv
185.971 120.248 186.51 120.04 187.26 120.04 cv
187.964 120.04 188.475 120.206 188.795 120.537 cv
189.113 120.869 189.272 121.384 189.272 122.081 cv
189.272 122.618 li
187.813 122.618 li
187.813 122.053 li
187.813 121.718 187.773 121.483 187.693 121.352 cv
187.612 121.219 187.473 121.152 187.276 121.152 cv
187.056 121.152 186.908 121.23 186.832 121.388 cv
186.755 121.544 186.717 121.835 186.717 122.26 cv
186.717 124.676 li
186.717 125.097 186.759 125.382 186.843 125.528 cv
186.927 125.676 187.071 125.749 187.276 125.749 cv
187.485 125.749 187.627 125.678 187.701 125.534 cv
187.775 125.391 187.813 125.174 187.813 124.883 cv
187.813 124.173 li
189.272 124.173 li
189.272 124.799 li
189.272 125.484 189.109 126.001 188.783 126.348 cv
188.457 126.694 187.949 126.868 187.26 126.868 cv
cp
f
192.298 125.767 mo
192.425 125.767 192.528 125.738 192.608 125.683 cv
192.688 125.626 192.746 125.54 192.782 125.422 cv
192.817 125.305 192.841 125.191 192.851 125.081 cv
192.863 124.972 192.868 124.829 192.868 124.653 cv
192.868 122.254 li
192.868 122.116 192.865 122.002 192.86 121.91 cv
192.854 121.819 192.842 121.72 192.821 121.611 cv
192.801 121.503 192.769 121.418 192.728 121.356 cv
192.56 121.2 li
192.49 121.157 192.402 121.136 192.298 121.136 cv
192.171 121.136 192.067 121.165 191.987 121.223 cv
191.907 121.28 191.849 121.368 191.814 121.485 cv
191.778 121.603 191.756 121.717 191.744 121.826 cv
191.733 121.937 191.727 122.079 191.727 122.254 cv
191.727 124.653 li
191.727 124.791 191.73 124.906 191.736 124.997 cv
191.741 125.089 191.755 125.188 191.775 125.294 cv
191.796 125.4 191.826 125.483 191.867 125.545 cv
192.035 125.702 li
192.105 125.745 192.193 125.767 192.298 125.767 cv
cp
192.292 126.868 mo
191.58 126.868 191.05 126.668 190.701 126.267 cv
190.352 125.866 190.178 125.293 190.178 124.547 cv
190.178 122.36 li
190.178 121.615 190.352 121.042 190.701 120.641 cv
191.05 120.24 191.58 120.04 192.292 120.04 cv
193.008 120.04 193.542 120.24 193.894 120.641 cv
194.247 121.042 194.423 121.615 194.423 122.36 cv
194.423 124.547 li
194.423 125.293 194.247 125.866 193.894 126.267 cv
193.542 126.668 193.008 126.868 192.292 126.868 cv
cp
f
195.497 126.762 mo
195.497 120.141 li
197.062 120.141 li
197.062 120.789 li
197.595 120.289 198.135 120.04 198.678 120.04 cv
199.055 120.04 199.33 120.178 199.504 120.453 cv
199.677 120.729 199.763 121.068 199.763 121.472 cv
199.763 126.762 li
198.198 126.762 li
198.198 121.818 li
198.198 121.609 198.168 121.454 198.108 121.354 cv
198.049 121.253 197.933 121.205 197.761 121.208 cv
197.567 121.212 197.335 121.313 197.062 121.511 cv
197.062 126.762 li
195.497 126.762 li
cp
f
202.638 126.868 mo
202.091 126.868 201.641 126.715 201.291 126.409 cv
200.94 126.104 200.7 125.664 200.569 125.09 cv
201.755 124.659 li
201.837 125.024 201.952 125.301 202.101 125.489 cv
202.251 125.678 202.437 125.769 202.661 125.761 cv
202.825 125.757 202.96 125.698 203.066 125.585 cv
203.173 125.471 203.221 125.332 203.215 125.168 cv
203.199 124.93 202.981 124.629 202.56 124.268 cv
201.671 123.507 li
201.029 122.955 200.717 122.379 200.731 121.779 cv
200.742 121.25 200.923 120.827 201.271 120.513 cv
201.62 120.197 202.064 120.04 202.604 120.04 cv
203.123 120.04 203.545 120.196 203.869 120.51 cv
204.193 120.822 204.403 121.242 204.501 121.768 cv
203.471 122.198 li
203.33 121.513 203.065 121.168 202.677 121.164 cv
202.513 121.16 202.382 121.21 202.283 121.314 cv
202.184 121.419 202.135 121.544 202.135 121.689 cv
202.132 121.891 202.316 122.153 202.688 122.478 cv
203.594 123.3 li
203.748 123.435 203.874 123.555 203.974 123.661 cv
204.076 123.767 204.18 123.896 204.291 124.05 cv
204.401 124.202 204.483 124.366 204.537 124.542 cv
204.591 124.717 204.618 124.905 204.618 125.106 cv
204.618 125.666 204.432 126.099 204.061 126.406 cv
203.69 126.714 203.217 126.868 202.638 126.868 cv
cp
f
206.894 122.746 mo
208.024 122.746 li
208.024 122.114 li
208.024 121.779 207.982 121.538 207.898 121.393 cv
207.814 121.248 207.666 121.175 207.453 121.175 cv
207.237 121.175 207.09 121.257 207.011 121.421 cv
206.933 121.585 206.894 121.884 206.894 122.315 cv
206.894 122.746 li
cp
207.47 126.868 mo
206.714 126.868 206.169 126.659 205.837 126.241 cv
205.506 125.824 205.34 125.207 205.34 124.391 cv
205.34 122.517 li
205.34 121.7 205.508 121.084 205.843 120.666 cv
206.178 120.248 206.719 120.04 207.465 120.04 cv
207.859 120.04 208.192 120.098 208.463 120.213 cv
208.733 120.329 208.944 120.504 209.094 120.738 cv
209.246 120.974 209.353 121.245 209.416 121.553 cv
209.479 121.86 209.511 122.23 209.511 122.662 cv
209.511 123.529 li
206.894 123.529 li
206.894 124.524 li
206.894 124.663 206.895 124.77 206.897 124.847 cv
206.899 124.923 206.905 125.015 206.917 125.123 cv
206.927 125.231 206.945 125.315 206.969 125.375 cv
207.067 125.557 li
207.229 125.688 li
207.465 125.728 li
207.674 125.728 207.819 125.653 207.901 125.506 cv
207.982 125.359 208.024 125.146 208.024 124.866 cv
208.024 124.485 li
209.506 124.485 li
209.506 124.748 li
209.506 125.435 209.335 125.959 208.994 126.322 cv
208.653 126.687 208.145 126.868 207.47 126.868 cv
cp
f
212.565 126.868 mo
211.815 126.868 211.277 126.657 210.949 126.236 cv
210.621 125.814 210.457 125.205 210.457 124.407 cv
210.457 122.489 li
210.457 121.691 210.621 121.084 210.949 120.666 cv
211.277 120.248 211.815 120.04 212.565 120.04 cv
213.269 120.04 213.781 120.206 214.1 120.537 cv
214.419 120.869 214.578 121.384 214.578 122.081 cv
214.578 122.618 li
213.119 122.618 li
213.119 122.053 li
213.119 121.718 213.079 121.483 212.999 121.352 cv
212.918 121.219 212.779 121.152 212.582 121.152 cv
212.362 121.152 212.214 121.23 212.137 121.388 cv
212.06 121.544 212.022 121.835 212.022 122.26 cv
212.022 124.676 li
212.022 125.097 212.064 125.382 212.148 125.528 cv
212.232 125.676 212.377 125.749 212.582 125.749 cv
212.791 125.749 212.932 125.678 213.007 125.534 cv
213.081 125.391 213.119 125.174 213.119 124.883 cv
213.119 124.173 li
214.578 124.173 li
214.578 124.799 li
214.578 125.484 214.415 126.001 214.089 126.348 cv
213.762 126.694 213.255 126.868 212.565 126.868 cv
cp
f
217.453 126.852 mo
217.15 126.848 216.894 126.797 216.683 126.7 cv
216.472 126.604 216.31 126.465 216.197 126.283 cv
216.083 126.103 216.001 125.9 215.951 125.677 cv
215.9 125.453 215.876 125.192 215.876 124.894 cv
215.876 121.175 li
215.221 121.175 li
215.221 120.141 li
215.876 120.141 li
215.876 118.194 li
217.447 118.194 li
217.447 120.141 li
218.454 120.141 li
218.454 121.175 li
217.447 121.175 li
217.447 124.994 li
217.447 125.211 217.494 125.366 217.59 125.462 cv
217.684 125.557 217.837 125.606 218.046 125.609 cv
218.19 125.613 218.349 125.603 218.52 125.576 cv
218.52 126.772 li
218.077 126.832 217.72 126.858 217.453 126.852 cv
cp
f
220.842 122.746 mo
221.971 122.746 li
221.971 122.114 li
221.971 121.779 221.929 121.538 221.845 121.393 cv
221.761 121.248 221.613 121.175 221.4 121.175 cv
221.184 121.175 221.037 121.257 220.959 121.421 cv
220.881 121.585 220.842 121.884 220.842 122.315 cv
220.842 122.746 li
cp
221.418 126.868 mo
220.661 126.868 220.116 126.659 219.784 126.241 cv
219.453 125.824 219.287 125.207 219.287 124.391 cv
219.287 122.517 li
219.287 121.7 219.455 121.084 219.79 120.666 cv
220.126 120.248 220.666 120.04 221.412 120.04 cv
221.806 120.04 222.139 120.098 222.41 120.213 cv
222.68 120.329 222.891 120.504 223.042 120.738 cv
223.193 120.974 223.301 121.245 223.363 121.553 cv
223.427 121.86 223.459 122.23 223.459 122.662 cv
223.459 123.529 li
220.842 123.529 li
220.842 124.524 li
220.842 124.663 220.843 124.77 220.844 124.847 cv
220.846 124.923 220.852 125.015 220.864 125.123 cv
220.875 125.231 220.892 125.315 220.917 125.375 cv
221.014 125.557 li
221.177 125.688 li
221.412 125.728 li
221.621 125.728 221.766 125.653 221.848 125.506 cv
221.929 125.359 221.971 125.146 221.971 124.866 cv
221.971 124.485 li
223.453 124.485 li
223.453 124.748 li
223.453 125.435 223.282 125.959 222.941 126.322 cv
222.6 126.687 222.093 126.868 221.418 126.868 cv
cp
f
226.373 126.852 mo
226.07 126.848 225.814 126.797 225.603 126.7 cv
225.392 126.604 225.23 126.465 225.117 126.283 cv
225.003 126.103 224.921 125.9 224.871 125.677 cv
224.82 125.453 224.796 125.192 224.796 124.894 cv
224.796 121.175 li
224.141 121.175 li
224.141 120.141 li
224.796 120.141 li
224.796 118.194 li
226.367 118.194 li
226.367 120.141 li
227.374 120.141 li
227.374 121.175 li
226.367 121.175 li
226.367 124.994 li
226.367 125.211 226.414 125.366 226.51 125.462 cv
226.604 125.557 226.757 125.606 226.966 125.609 cv
227.11 125.613 227.269 125.603 227.44 125.576 cv
227.44 126.772 li
226.997 126.832 226.64 126.858 226.373 126.852 cv
cp
f
229.37 126.862 mo
228.993 126.862 228.719 126.725 228.545 126.448 cv
228.372 126.173 228.285 125.833 228.285 125.431 cv
228.285 120.141 li
229.845 120.141 li
229.845 125.112 li
229.845 125.317 229.877 125.47 229.94 125.57 cv
230.004 125.671 230.121 125.72 230.293 125.716 cv
230.475 125.716 230.699 125.623 230.964 125.437 cv
230.964 120.141 li
232.524 120.141 li
232.524 126.762 li
230.964 126.762 li
230.964 126.141 li
230.438 126.622 229.907 126.862 229.37 126.862 cv
cp
f
233.755 126.762 mo
233.755 120.141 li
235.32 120.141 li
235.32 121.158 li
235.54 120.767 235.762 120.485 235.988 120.313 cv
236.214 120.143 236.456 120.057 236.713 120.057 cv
236.948 120.084 li
236.948 121.634 li
236.772 121.566 236.592 121.533 236.405 121.533 cv
236.181 121.54 235.985 121.597 235.815 121.7 cv
235.645 121.805 235.48 121.979 235.32 122.221 cv
235.32 126.762 li
233.755 126.762 li
cp
f
60.8289 139.397 mo
60.948 139.397 61.0671 139.353 61.1843 139.264 cv
61.3015 139.174 61.3953 139.083 61.4666 138.989 cv
61.4666 137.166 li
60.6912 137.595 60.3035 138.081 60.3035 138.626 cv
60.3035 138.864 60.3494 139.053 60.4402 139.19 cv
60.532 139.329 60.6609 139.397 60.8289 139.397 cv
cp
60.2302 140.611 mo
59.8132 140.607 59.4705 140.444 59.2048 140.122 cv
58.9382 139.8 58.8044 139.435 58.8044 139.028 cv
58.8044 138.645 58.8679 138.309 58.9949 138.021 cv
59.1218 137.734 59.3289 137.488 59.6179 137.283 cv
59.907 137.079 60.1472 136.93 60.3367 136.836 cv
60.5271 136.743 60.8201 136.62 61.2146 136.467 cv
61.3269 136.423 61.4109 136.389 61.4666 136.366 cv
61.4666 135.813 li
61.4666 135.515 61.4324 135.297 61.363 135.158 cv
61.2937 135.021 61.1531 134.951 60.9412 134.951 cv
60.5945 134.951 60.4167 135.194 60.4099 135.679 cv
60.3875 136.093 li
58.8884 136.036 li
58.8914 135.913 li
58.8943 135.796 li
58.9421 135.103 59.1482 134.594 59.5125 134.27 cv
59.8757 133.945 60.3943 133.783 61.0691 133.783 cv
61.7214 133.783 62.2058 133.96 62.5203 134.314 cv
62.8357 134.668 62.9929 135.17 62.9929 135.818 cv
62.9929 138.844 li
62.9929 139.351 63.0339 139.904 63.116 140.505 cv
61.7019 140.505 li
61.616 140.072 61.5613 139.748 61.5388 139.532 cv
61.446 139.838 61.2908 140.094 61.072 140.301 cv
60.8542 140.508 60.574 140.611 60.2302 140.611 cv
cp
f
66.1921 139.492 mo
66.3826 139.492 66.5837 139.433 66.7966 139.313 cv
66.7966 135.086 li
66.5837 134.951 66.3806 134.885 66.1873 134.885 cv
65.9783 134.885 65.8279 134.979 65.7371 135.17 cv
65.6453 135.36 65.5994 135.603 65.5994 135.896 cv
65.5994 138.324 li
65.5994 138.563 65.613 138.76 65.6384 138.917 cv
65.6648 139.073 65.7234 139.208 65.8152 139.322 cv
65.906 139.436 66.032 139.492 66.1921 139.492 cv
cp
65.6443 140.611 mo
65.1042 140.611 64.699 140.419 64.4314 140.035 cv
64.1628 139.651 64.0281 139.042 64.0281 138.206 cv
64.0281 136.282 li
64.0281 135.929 64.0554 135.607 64.1091 135.32 cv
64.1638 135.033 64.2488 134.771 64.3669 134.532 cv
64.4841 134.294 64.6492 134.109 64.8611 133.979 cv
65.074 133.848 65.3279 133.783 65.6218 133.783 cv
66.0398 133.783 66.4314 133.952 66.7966 134.292 cv
66.7966 131.232 li
68.3621 131.232 li
68.3621 140.505 li
66.7966 140.505 li
66.7966 140.052 li
66.4421 140.421 66.0583 140.607 65.6443 140.611 cv
cp
f
69.6091 140.505 mo
69.6091 133.884 li
71.1755 133.884 li
71.1755 140.505 li
69.6091 140.505 li
cp
69.6091 132.838 mo
69.6091 131.518 li
71.1804 131.518 li
71.1804 132.838 li
69.6091 132.838 li
cp
f
74.6599 139.487 mo
74.7751 139.487 74.8718 139.454 74.95 139.39 cv
75.0291 139.324 75.0857 139.229 75.1208 139.104 cv
75.156 138.979 75.1804 138.851 75.1931 138.718 cv
75.2068 138.586 75.2136 138.427 75.2136 138.24 cv
75.2136 135.958 li
75.2136 135.806 75.2048 135.668 75.1882 135.547 cv
75.1716 135.426 75.1423 135.311 75.1013 135.2 cv
75.0603 135.091 74.9988 135.007 74.9167 134.949 cv
74.8347 134.891 74.7361 134.864 74.6199 134.868 cv
74.4148 134.871 74.199 134.959 73.9714 135.131 cv
73.9714 139.28 li
74.1951 139.418 74.4246 139.487 74.6599 139.487 cv
cp
72.406 142.686 mo
72.406 133.884 li
73.9714 133.884 li
73.9714 134.393 li
74.3816 133.982 74.8269 133.779 75.3083 133.783 cv
75.5427 133.786 75.7507 133.841 75.9314 133.945 cv
76.113 134.05 76.2546 134.179 76.3572 134.334 cv
76.4597 134.488 76.5427 134.671 76.6082 134.882 cv
76.6736 135.093 76.7175 135.288 76.74 135.469 cv
76.7625 135.649 76.7732 135.833 76.7732 136.02 cv
76.7732 138.189 li
76.7732 138.525 76.7458 138.834 76.6892 139.115 cv
76.6335 139.396 76.5457 139.652 76.4265 139.881 cv
76.3074 140.11 76.1443 140.29 75.9373 140.418 cv
75.7302 140.547 75.4871 140.611 75.2078 140.611 cv
74.7976 140.611 74.3855 140.412 73.9714 140.013 cv
73.9714 142.686 li
72.406 142.686 li
cp
f
77.9138 140.505 mo
77.9138 133.884 li
79.4802 133.884 li
79.4802 140.505 li
77.9138 140.505 li
cp
77.9138 132.838 mo
77.9138 131.518 li
79.4851 131.518 li
79.4851 132.838 li
77.9138 132.838 li
cp
f
82.4275 140.611 mo
81.8796 140.611 81.4304 140.458 81.0798 140.152 cv
80.7292 139.847 80.489 139.407 80.3582 138.833 cv
81.5437 138.402 li
81.6257 138.768 81.741 139.044 81.8904 139.232 cv
82.0398 139.421 82.2263 139.512 82.45 139.504 cv
82.614 139.5 82.7488 139.441 82.8552 139.328 cv
82.9617 139.214 83.0105 139.075 83.0037 138.911 cv
82.988 138.673 82.7703 138.372 82.3494 138.011 cv
81.4597 137.25 li
80.8181 136.698 80.5056 136.122 80.5203 135.522 cv
80.531 134.993 80.7117 134.57 81.0603 134.256 cv
81.4089 133.94 81.8533 133.783 82.3933 133.783 cv
82.9119 133.783 83.3337 133.939 83.658 134.253 cv
83.9822 134.565 84.1921 134.985 84.2898 135.511 cv
83.2605 135.941 li
83.1189 135.256 82.8542 134.911 82.4666 134.907 cv
82.3025 134.903 82.1707 134.953 82.072 135.058 cv
81.9734 135.162 81.9236 135.287 81.9236 135.433 cv
81.9207 135.634 82.1052 135.896 82.4773 136.221 cv
83.3835 137.043 li
83.5369 137.178 83.6628 137.298 83.7634 137.404 cv
83.865 137.51 83.9695 137.64 84.0798 137.793 cv
84.1902 137.945 84.2722 138.109 84.3259 138.285 cv
84.3796 138.46 84.407 138.648 84.407 138.85 cv
84.407 139.409 84.2214 139.842 83.8503 140.149 cv
83.4792 140.457 83.0056 140.611 82.4275 140.611 cv
cp
f
87.2371 140.611 mo
86.4871 140.611 85.949 140.4 85.6208 139.979 cv
85.2927 139.558 85.1287 138.948 85.1287 138.15 cv
85.1287 136.232 li
85.1287 135.435 85.2927 134.827 85.6208 134.409 cv
85.949 133.991 86.4871 133.783 87.2371 133.783 cv
87.9412 133.783 88.4529 133.949 88.7722 134.28 cv
89.0906 134.612 89.2498 135.127 89.2498 135.824 cv
89.2498 136.361 li
87.7908 136.361 li
87.7908 135.796 li
87.7908 135.461 87.7507 135.227 87.6707 135.095 cv
87.5896 134.962 87.4509 134.896 87.2537 134.896 cv
87.0339 134.896 86.8855 134.974 86.8093 135.131 cv
86.7322 135.287 86.6941 135.578 86.6941 136.003 cv
86.6941 138.419 li
86.6941 138.84 86.7361 139.125 86.8201 139.271 cv
86.9041 139.419 87.0486 139.492 87.2537 139.492 cv
87.4626 139.492 87.6042 139.421 87.6785 139.277 cv
87.7527 139.134 87.7908 138.917 87.7908 138.626 cv
87.7908 137.916 li
89.2498 137.916 li
89.2498 138.542 li
89.2498 139.228 89.0867 139.744 88.7605 140.091 cv
88.4343 140.438 87.9265 140.611 87.2371 140.611 cv
cp
f
90.3289 140.505 mo
90.3289 133.884 li
91.8953 133.884 li
91.8953 140.505 li
90.3289 140.505 li
cp
90.3289 132.838 mo
90.3289 131.518 li
91.9001 131.518 li
91.9001 132.838 li
90.3289 132.838 li
cp
f
93.1257 140.505 mo
93.1257 133.884 li
94.6912 133.884 li
94.6912 134.532 li
95.2244 134.032 95.7634 133.783 96.3074 133.783 cv
96.6843 133.783 96.9587 133.921 97.1326 134.196 cv
97.3054 134.473 97.3923 134.812 97.3923 135.215 cv
97.3923 140.505 li
95.8269 140.505 li
95.8269 135.562 li
95.8269 135.353 95.7966 135.197 95.7371 135.097 cv
95.6775 134.996 95.5623 134.948 95.3904 134.951 cv
95.196 134.955 94.9636 135.056 94.6912 135.254 cv
94.6912 140.505 li
93.1257 140.505 li
cp
f
100.524 137.463 mo
100.785 137.463 100.955 137.365 101.033 137.172 cv
101.112 136.978 101.151 136.635 101.151 136.143 cv
101.151 135.636 101.113 135.283 101.039 135.086 cv
100.965 134.889 100.797 134.789 100.536 134.789 cv
100.271 134.789 100.099 134.89 100.021 135.089 cv
99.9431 135.288 99.9041 135.64 99.9041 136.143 cv
99.9041 136.321 99.907 136.474 99.9148 136.599 cv
99.9226 136.724 99.9392 136.844 99.9656 136.959 cv
99.991 137.075 100.027 137.167 100.071 137.236 cv
100.251 137.401 li
100.325 137.442 100.416 137.463 100.524 137.463 cv
cp
100.826 141.411 mo
101.147 141.411 101.381 141.37 101.528 141.288 cv
101.676 141.206 101.751 141.073 101.755 140.891 cv
101.766 140.693 101.716 140.549 101.603 140.457 cv
101.492 140.366 101.289 140.308 100.994 140.281 cv
99.9431 140.181 li
99.7156 140.445 99.6013 140.689 99.6013 140.913 cv
99.6013 141.032 99.6306 141.126 99.6882 141.192 cv
99.7458 141.26 99.865 141.313 100.047 141.353 cv
100.227 141.392 100.487 141.411 100.826 141.411 cv
cp
100.838 142.513 mo
100.64 142.513 100.468 142.511 100.32 142.507 cv
100.173 142.503 100.003 142.493 99.8083 142.477 cv
99.615 142.459 99.448 142.436 99.3083 142.403 cv
99.1687 142.372 99.0251 142.328 98.8777 142.272 cv
98.7302 142.216 98.6111 142.15 98.5193 142.073 cv
98.4285 141.997 98.3523 141.9 98.2927 141.783 cv
98.2332 141.665 98.2039 141.534 98.2039 141.389 cv
98.2039 140.833 98.5144 140.365 99.1375 139.984 cv
98.6902 139.832 98.4529 139.584 98.4275 139.241 cv
98.4089 139.003 98.4587 138.797 98.5779 138.623 cv
98.698 138.449 98.9011 138.245 99.1882 138.011 cv
98.9421 137.824 98.7576 137.591 98.6345 137.312 cv
98.5115 137.032 98.45 136.657 98.45 136.188 cv
98.45 135.375 98.6257 134.771 98.9783 134.376 cv
99.3308 133.98 99.8406 133.783 100.508 133.783 cv
101.193 133.783 101.667 133.999 101.928 134.432 cv
102.01 134.331 102.135 134.212 102.3 134.073 cv
102.466 133.936 102.64 133.822 102.823 133.732 cv
103.041 133.632 li
103.41 134.504 li
103.279 134.538 103.082 134.604 102.817 134.706 cv
102.552 134.807 102.376 134.885 102.286 134.94 cv
102.357 135.071 102.419 135.255 102.47 135.491 cv
102.523 135.729 102.549 135.966 102.549 136.204 cv
102.549 137.718 101.887 138.475 100.563 138.475 cv
100.456 138.475 100.307 138.459 100.119 138.428 cv
99.9304 138.396 99.8083 138.368 99.7527 138.347 cv
99.6257 138.536 99.5662 138.682 99.574 138.782 cv
99.5847 138.932 99.7791 139.024 100.155 139.063 cv
100.2 139.069 100.397 139.091 100.748 139.126 cv
101.098 139.162 101.303 139.184 101.363 139.19 cv
101.919 139.25 102.325 139.411 102.583 139.675 cv
102.84 139.938 102.969 140.313 102.969 140.802 cv
102.969 141.387 102.804 141.818 102.476 142.096 cv
102.148 142.374 101.602 142.513 100.838 142.513 cv
cp
f
108.091 136.489 mo
109.22 136.489 li
109.22 135.857 li
109.22 135.522 109.178 135.281 109.094 135.136 cv
109.01 134.991 108.862 134.918 108.649 134.918 cv
108.433 134.918 108.286 135 108.208 135.164 cv
108.13 135.328 108.091 135.627 108.091 136.059 cv
108.091 136.489 li
cp
108.667 140.611 mo
107.91 140.611 107.365 140.402 107.033 139.984 cv
106.702 139.567 106.536 138.95 106.536 138.134 cv
106.536 136.26 li
106.536 135.443 106.704 134.827 107.039 134.409 cv
107.375 133.991 107.915 133.783 108.661 133.783 cv
109.055 133.783 109.388 133.841 109.659 133.956 cv
109.929 134.072 110.14 134.247 110.291 134.481 cv
110.442 134.717 110.55 134.988 110.612 135.296 cv
110.676 135.604 110.708 135.974 110.708 136.405 cv
110.708 137.272 li
108.091 137.272 li
108.091 138.268 li
108.091 138.406 108.092 138.513 108.094 138.59 cv
108.095 138.666 108.101 138.758 108.113 138.866 cv
108.124 138.975 108.141 139.059 108.166 139.118 cv
108.263 139.3 li
108.426 139.431 li
108.661 139.471 li
108.87 139.471 109.015 139.396 109.097 139.249 cv
109.178 139.103 109.22 138.889 109.22 138.609 cv
109.22 138.229 li
110.702 138.229 li
110.702 138.491 li
110.702 139.178 110.531 139.702 110.19 140.065 cv
109.849 140.43 109.342 140.611 108.667 140.611 cv
cp
f
111.877 140.505 mo
111.877 131.232 li
113.442 131.232 li
113.442 140.505 li
111.877 140.505 li
cp
f
114.722 140.505 mo
114.722 133.884 li
116.289 133.884 li
116.289 140.505 li
114.722 140.505 li
cp
114.722 132.838 mo
114.722 131.518 li
116.294 131.518 li
116.294 132.838 li
114.722 132.838 li
cp
f
119.365 140.595 mo
119.062 140.591 118.806 140.54 118.595 140.443 cv
118.385 140.347 118.222 140.208 118.109 140.026 cv
117.995 139.846 117.913 139.644 117.863 139.42 cv
117.812 139.196 117.788 138.936 117.788 138.637 cv
117.788 134.918 li
117.134 134.918 li
117.134 133.884 li
117.788 133.884 li
117.788 131.938 li
119.359 131.938 li
119.359 133.884 li
120.366 133.884 li
120.366 134.918 li
119.359 134.918 li
119.359 138.737 li
119.359 138.954 119.406 139.109 119.502 139.205 cv
119.596 139.3 119.749 139.35 119.958 139.353 cv
120.102 139.356 120.261 139.346 120.432 139.319 cv
120.432 140.516 li
119.989 140.575 119.633 140.602 119.365 140.595 cv
cp
f
121.417 142.076 mo
121.249 141.489 li
121.469 141.434 121.649 141.32 121.789 141.15 cv
121.928 140.981 121.999 140.766 121.999 140.505 cv
121.177 140.505 li
121.177 138.989 li
122.715 138.989 li
122.715 140.398 li
122.715 141.346 122.282 141.905 121.417 142.076 cv
cp
f
128.239 140.611 mo
127.691 140.611 127.242 140.458 126.891 140.152 cv
126.541 139.847 126.301 139.407 126.17 138.833 cv
127.355 138.402 li
127.437 138.768 127.552 139.044 127.702 139.232 cv
127.851 139.421 128.038 139.512 128.261 139.504 cv
128.426 139.5 128.56 139.441 128.667 139.328 cv
128.773 139.214 128.822 139.075 128.815 138.911 cv
128.8 138.673 128.582 138.372 128.161 138.011 cv
127.271 137.25 li
126.63 136.698 126.317 136.122 126.332 135.522 cv
126.343 134.993 126.523 134.57 126.872 134.256 cv
127.22 133.94 127.665 133.783 128.205 133.783 cv
128.723 133.783 129.145 133.939 129.469 134.253 cv
129.794 134.565 130.004 134.985 130.101 135.511 cv
129.072 135.941 li
128.93 135.256 128.666 134.911 128.278 134.907 cv
128.114 134.903 127.982 134.953 127.884 135.058 cv
127.785 135.162 127.735 135.287 127.735 135.433 cv
127.732 135.634 127.917 135.896 128.289 136.221 cv
129.195 137.043 li
129.348 137.178 129.474 137.298 129.575 137.404 cv
129.677 137.51 129.781 137.64 129.891 137.793 cv
130.002 137.945 130.084 138.109 130.137 138.285 cv
130.191 138.46 130.219 138.648 130.219 138.85 cv
130.219 139.409 130.033 139.842 129.662 140.149 cv
129.291 140.457 128.817 140.611 128.239 140.611 cv
cp
f
132.495 136.489 mo
133.625 136.489 li
133.625 135.857 li
133.625 135.522 133.583 135.281 133.499 135.136 cv
133.415 134.991 133.266 134.918 133.053 134.918 cv
132.838 134.918 132.69 135 132.612 135.164 cv
132.534 135.328 132.495 135.627 132.495 136.059 cv
132.495 136.489 li
cp
133.071 140.611 mo
132.314 140.611 131.769 140.402 131.437 139.984 cv
131.106 139.567 130.94 138.95 130.94 138.134 cv
130.94 136.26 li
130.94 135.443 131.108 134.827 131.443 134.409 cv
131.779 133.991 132.319 133.783 133.065 133.783 cv
133.46 133.783 133.793 133.841 134.063 133.956 cv
134.334 134.072 134.545 134.247 134.695 134.481 cv
134.846 134.717 134.954 134.988 135.016 135.296 cv
135.08 135.604 135.112 135.974 135.112 136.405 cv
135.112 137.272 li
132.495 137.272 li
132.495 138.268 li
132.495 138.406 132.496 138.513 132.498 138.59 cv
132.5 138.666 132.506 138.758 132.517 138.866 cv
132.528 138.975 132.546 139.059 132.57 139.118 cv
132.668 139.3 li
132.83 139.431 li
133.065 139.471 li
133.274 139.471 133.42 139.396 133.502 139.249 cv
133.583 139.103 133.625 138.889 133.625 138.609 cv
133.625 138.229 li
135.106 138.229 li
135.106 138.491 li
135.106 139.178 134.935 139.702 134.594 140.065 cv
134.254 140.43 133.746 140.611 133.071 140.611 cv
cp
f
138.232 139.492 mo
138.423 139.492 138.624 139.433 138.837 139.313 cv
138.837 135.086 li
138.624 134.951 138.421 134.885 138.227 134.885 cv
138.018 134.885 137.868 134.979 137.777 135.17 cv
137.685 135.36 137.639 135.603 137.639 135.896 cv
137.639 138.324 li
137.639 138.563 137.653 138.76 137.678 138.917 cv
137.705 139.073 137.763 139.208 137.855 139.322 cv
137.946 139.436 138.072 139.492 138.232 139.492 cv
cp
137.684 140.611 mo
137.144 140.611 136.739 140.419 136.471 140.035 cv
136.203 139.651 136.068 139.042 136.068 138.206 cv
136.068 136.282 li
136.068 135.929 136.095 135.607 136.149 135.32 cv
136.204 135.033 136.289 134.771 136.407 134.532 cv
136.524 134.294 136.689 134.109 136.901 133.979 cv
137.114 133.848 137.368 133.783 137.662 133.783 cv
138.08 133.783 138.471 133.952 138.837 134.292 cv
138.837 131.232 li
140.402 131.232 li
140.402 140.505 li
138.837 140.505 li
138.837 140.052 li
138.482 140.421 138.098 140.607 137.684 140.611 cv
cp
f
146.447 139.492 mo
146.637 139.492 146.839 139.433 147.052 139.313 cv
147.052 135.086 li
146.839 134.951 146.635 134.885 146.442 134.885 cv
146.233 134.885 146.083 134.979 145.992 135.17 cv
145.9 135.36 145.854 135.603 145.854 135.896 cv
145.854 138.324 li
145.854 138.563 145.868 138.76 145.893 138.917 cv
145.92 139.073 145.978 139.208 146.07 139.322 cv
146.161 139.436 146.287 139.492 146.447 139.492 cv
cp
145.899 140.611 mo
145.359 140.611 144.954 140.419 144.686 140.035 cv
144.418 139.651 144.283 139.042 144.283 138.206 cv
144.283 136.282 li
144.283 135.929 144.31 135.607 144.364 135.32 cv
144.419 135.033 144.504 134.771 144.622 134.532 cv
144.739 134.294 144.904 134.109 145.116 133.979 cv
145.329 133.848 145.583 133.783 145.877 133.783 cv
146.295 133.783 146.686 133.952 147.052 134.292 cv
147.052 131.232 li
148.617 131.232 li
148.617 140.505 li
147.052 140.505 li
147.052 140.052 li
146.697 140.421 146.313 140.607 145.899 140.611 cv
cp
f
151.81 139.51 mo
151.937 139.51 152.041 139.481 152.121 139.426 cv
152.201 139.369 152.259 139.283 152.295 139.165 cv
152.33 139.048 152.353 138.935 152.364 138.824 cv
152.376 138.715 152.381 138.572 152.381 138.396 cv
152.381 135.997 li
152.381 135.859 152.378 135.745 152.373 135.653 cv
152.367 135.563 152.354 135.463 152.334 135.354 cv
152.313 135.246 152.282 135.161 152.241 135.1 cv
152.073 134.943 li
152.003 134.9 151.915 134.879 151.81 134.879 cv
151.683 134.879 151.58 134.908 151.5 134.966 cv
151.42 135.023 151.362 135.111 151.327 135.229 cv
151.291 135.346 151.268 135.46 151.257 135.569 cv
151.246 135.68 151.24 135.822 151.24 135.997 cv
151.24 138.396 li
151.24 138.534 151.243 138.649 151.249 138.74 cv
151.254 138.832 151.267 138.931 151.288 139.037 cv
151.308 139.144 151.339 139.227 151.38 139.288 cv
151.548 139.445 li
151.618 139.488 151.706 139.51 151.81 139.51 cv
cp
151.804 140.611 mo
151.093 140.611 150.562 140.411 150.214 140.01 cv
149.865 139.609 149.691 139.036 149.691 138.29 cv
149.691 136.104 li
149.691 135.358 149.865 134.785 150.214 134.384 cv
150.562 133.983 151.093 133.783 151.804 133.783 cv
152.52 133.783 153.054 133.983 153.407 134.384 cv
153.76 134.785 153.935 135.358 153.935 136.104 cv
153.935 138.29 li
153.935 139.036 153.76 139.609 153.407 140.01 cv
153.054 140.411 152.52 140.611 151.804 140.611 cv
cp
f
159.237 136.489 mo
160.367 136.489 li
160.367 135.857 li
160.367 135.522 160.325 135.281 160.241 135.136 cv
160.157 134.991 160.009 134.918 159.796 134.918 cv
159.58 134.918 159.432 135 159.354 135.164 cv
159.276 135.328 159.237 135.627 159.237 136.059 cv
159.237 136.489 li
cp
159.813 140.611 mo
159.056 140.611 158.511 140.402 158.179 139.984 cv
157.848 139.567 157.682 138.95 157.682 138.134 cv
157.682 136.26 li
157.682 135.443 157.85 134.827 158.185 134.409 cv
158.521 133.991 159.061 133.783 159.807 133.783 cv
160.202 133.783 160.535 133.841 160.805 133.956 cv
161.076 134.072 161.287 134.247 161.437 134.481 cv
161.589 134.717 161.696 134.988 161.759 135.296 cv
161.822 135.604 161.854 135.974 161.854 136.405 cv
161.854 137.272 li
159.237 137.272 li
159.237 138.268 li
159.237 138.406 159.238 138.513 159.24 138.59 cv
159.242 138.666 159.248 138.758 159.26 138.866 cv
159.27 138.975 159.288 139.059 159.312 139.118 cv
159.41 139.3 li
159.572 139.431 li
159.807 139.471 li
160.016 139.471 160.162 139.396 160.244 139.249 cv
160.325 139.103 160.367 138.889 160.367 138.609 cv
160.367 138.229 li
161.848 138.229 li
161.848 138.491 li
161.848 139.178 161.677 139.702 161.337 140.065 cv
160.996 140.43 160.488 140.611 159.813 140.611 cv
cp
f
162.972 140.505 mo
162.972 133.884 li
164.539 133.884 li
164.539 140.505 li
162.972 140.505 li
cp
162.972 132.838 mo
162.972 131.518 li
164.544 131.518 li
164.544 132.838 li
162.972 132.838 li
cp
f
166.809 140.605 mo
166.432 140.605 166.158 140.468 165.984 140.191 cv
165.811 139.916 165.724 139.576 165.724 139.174 cv
165.724 133.884 li
167.285 133.884 li
167.285 138.855 li
167.285 139.061 167.316 139.213 167.38 139.313 cv
167.443 139.414 167.56 139.463 167.732 139.459 cv
167.915 139.459 168.138 139.366 168.403 139.18 cv
168.403 133.884 li
169.964 133.884 li
169.964 140.505 li
168.403 140.505 li
168.403 139.884 li
167.878 140.365 167.346 140.605 166.809 140.605 cv
cp
f
172.888 140.611 mo
172.341 140.611 171.891 140.458 171.541 140.152 cv
171.19 139.847 170.95 139.407 170.819 138.833 cv
172.005 138.402 li
172.087 138.768 172.202 139.044 172.351 139.232 cv
172.501 139.421 172.687 139.512 172.911 139.504 cv
173.075 139.5 173.21 139.441 173.316 139.328 cv
173.423 139.214 173.471 139.075 173.465 138.911 cv
173.449 138.673 173.231 138.372 172.81 138.011 cv
171.921 137.25 li
171.279 136.698 170.967 136.122 170.981 135.522 cv
170.992 134.993 171.173 134.57 171.521 134.256 cv
171.87 133.94 172.314 133.783 172.854 133.783 cv
173.373 133.783 173.795 133.939 174.119 134.253 cv
174.443 134.565 174.653 134.985 174.751 135.511 cv
173.721 135.941 li
173.58 135.256 173.315 134.911 172.927 134.907 cv
172.763 134.903 172.632 134.953 172.533 135.058 cv
172.434 135.162 172.385 135.287 172.385 135.433 cv
172.382 135.634 172.566 135.896 172.938 136.221 cv
173.844 137.043 li
173.998 137.178 174.124 137.298 174.224 137.404 cv
174.326 137.51 174.43 137.64 174.541 137.793 cv
174.651 137.945 174.733 138.109 174.787 138.285 cv
174.841 138.46 174.868 138.648 174.868 138.85 cv
174.868 139.409 174.682 139.842 174.311 140.149 cv
173.94 140.457 173.467 140.611 172.888 140.611 cv
cp
f
175.713 140.505 mo
175.713 133.884 li
177.2 133.884 li
177.2 134.465 li
177.643 133.999 178.168 133.766 178.771 133.766 cv
179.323 133.766 179.69 134.036 179.873 134.577 cv
180.34 134.036 180.896 133.766 181.546 133.766 cv
181.915 133.766 182.211 133.9 182.434 134.169 cv
182.658 134.438 182.77 134.827 182.77 135.338 cv
182.77 140.505 li
181.282 140.505 li
181.282 135.472 li
181.282 135.229 181.242 135.058 181.162 134.957 cv
181.082 134.856 180.964 134.809 180.807 134.812 cv
180.535 134.819 180.26 134.948 179.985 135.197 cv
179.988 135.265 li
179.991 135.338 li
179.991 140.505 li
178.509 140.505 li
178.509 135.472 li
178.509 135.229 178.469 135.058 178.388 134.957 cv
178.308 134.856 178.188 134.809 178.028 134.812 cv
177.766 134.819 177.491 134.95 177.2 135.203 cv
177.2 140.505 li
175.713 140.505 li
cp
f
185.924 139.51 mo
186.051 139.51 186.154 139.481 186.234 139.426 cv
186.314 139.369 186.372 139.283 186.408 139.165 cv
186.443 139.048 186.467 138.935 186.477 138.824 cv
186.489 138.715 186.494 138.572 186.494 138.396 cv
186.494 135.997 li
186.494 135.859 186.491 135.745 186.486 135.653 cv
186.48 135.563 186.468 135.463 186.447 135.354 cv
186.427 135.246 186.395 135.161 186.354 135.1 cv
186.186 134.943 li
186.116 134.9 186.028 134.879 185.924 134.879 cv
185.797 134.879 185.693 134.908 185.613 134.966 cv
185.533 135.023 185.475 135.111 185.44 135.229 cv
185.404 135.346 185.382 135.46 185.37 135.569 cv
185.359 135.68 185.353 135.822 185.353 135.997 cv
185.353 138.396 li
185.353 138.534 185.356 138.649 185.362 138.74 cv
185.367 138.832 185.381 138.931 185.401 139.037 cv
185.422 139.144 185.452 139.227 185.493 139.288 cv
185.661 139.445 li
185.731 139.488 185.819 139.51 185.924 139.51 cv
cp
185.918 140.611 mo
185.206 140.611 184.676 140.411 184.327 140.01 cv
183.978 139.609 183.804 139.036 183.804 138.29 cv
183.804 136.104 li
183.804 135.358 183.978 134.785 184.327 134.384 cv
184.676 133.983 185.206 133.783 185.918 133.783 cv
186.634 133.783 187.168 133.983 187.52 134.384 cv
187.873 134.785 188.049 135.358 188.049 136.104 cv
188.049 138.29 li
188.049 139.036 187.873 139.609 187.52 140.01 cv
187.168 140.411 186.634 140.611 185.918 140.611 cv
cp
f
191.175 139.492 mo
191.365 139.492 191.566 139.433 191.779 139.313 cv
191.779 135.086 li
191.566 134.951 191.363 134.885 191.17 134.885 cv
190.961 134.885 190.81 134.979 190.719 135.17 cv
190.628 135.36 190.582 135.603 190.582 135.896 cv
190.582 138.324 li
190.582 138.563 190.595 138.76 190.621 138.917 cv
190.647 139.073 190.706 139.208 190.798 139.322 cv
190.888 139.436 191.014 139.492 191.175 139.492 cv
cp
190.627 140.611 mo
190.087 140.611 189.681 140.419 189.414 140.035 cv
189.145 139.651 189.01 139.042 189.01 138.206 cv
189.01 136.282 li
189.01 135.929 189.038 135.607 189.092 135.32 cv
189.146 135.033 189.231 134.771 189.349 134.532 cv
189.467 134.294 189.632 134.109 189.844 133.979 cv
190.056 133.848 190.31 133.783 190.604 133.783 cv
191.022 133.783 191.414 133.952 191.779 134.292 cv
191.779 131.232 li
193.344 131.232 li
193.344 140.505 li
191.779 140.505 li
191.779 140.052 li
191.425 140.421 191.041 140.607 190.627 140.611 cv
cp
f
199.183 140.595 mo
198.881 140.591 198.625 140.54 198.414 140.443 cv
198.203 140.347 198.041 140.208 197.927 140.026 cv
197.813 139.846 197.731 139.644 197.681 139.42 cv
197.631 139.196 197.606 138.936 197.606 138.637 cv
197.606 134.918 li
196.952 134.918 li
196.952 133.884 li
197.606 133.884 li
197.606 131.938 li
199.177 131.938 li
199.177 133.884 li
200.184 133.884 li
200.184 134.918 li
199.177 134.918 li
199.177 138.737 li
199.177 138.954 199.224 139.109 199.32 139.205 cv
199.415 139.3 199.567 139.35 199.776 139.353 cv
199.921 139.356 200.08 139.346 200.251 139.319 cv
200.251 140.516 li
199.807 140.575 199.451 140.602 199.183 140.595 cv
cp
f
202.572 136.489 mo
203.702 136.489 li
203.702 135.857 li
203.702 135.522 203.66 135.281 203.576 135.136 cv
203.492 134.991 203.344 134.918 203.131 134.918 cv
202.915 134.918 202.767 135 202.689 135.164 cv
202.611 135.328 202.572 135.627 202.572 136.059 cv
202.572 136.489 li
cp
203.148 140.611 mo
202.391 140.611 201.846 140.402 201.514 139.984 cv
201.183 139.567 201.017 138.95 201.017 138.134 cv
201.017 136.26 li
201.017 135.443 201.185 134.827 201.52 134.409 cv
201.856 133.991 202.396 133.783 203.142 133.783 cv
203.537 133.783 203.87 133.841 204.14 133.956 cv
204.411 134.072 204.622 134.247 204.772 134.481 cv
204.924 134.717 205.031 134.988 205.094 135.296 cv
205.157 135.604 205.189 135.974 205.189 136.405 cv
205.189 137.272 li
202.572 137.272 li
202.572 138.268 li
202.572 138.406 202.573 138.513 202.575 138.59 cv
202.577 138.666 202.583 138.758 202.594 138.866 cv
202.605 138.975 202.623 139.059 202.647 139.118 cv
202.745 139.3 li
202.907 139.431 li
203.142 139.471 li
203.351 139.471 203.497 139.396 203.579 139.249 cv
203.66 139.103 203.702 138.889 203.702 138.609 cv
203.702 138.229 li
205.183 138.229 li
205.183 138.491 li
205.183 139.178 205.012 139.702 204.672 140.065 cv
204.331 140.43 203.823 140.611 203.148 140.611 cv
cp
f
206.258 140.505 mo
206.258 133.884 li
207.745 133.884 li
207.745 134.465 li
208.188 133.999 208.713 133.766 209.316 133.766 cv
209.868 133.766 210.235 134.036 210.418 134.577 cv
210.885 134.036 211.441 133.766 212.091 133.766 cv
212.46 133.766 212.756 133.9 212.979 134.169 cv
213.203 134.438 213.315 134.827 213.315 135.338 cv
213.315 140.505 li
211.827 140.505 li
211.827 135.472 li
211.827 135.229 211.787 135.058 211.707 134.957 cv
211.627 134.856 211.509 134.809 211.352 134.812 cv
211.08 134.819 210.805 134.948 210.53 135.197 cv
210.533 135.265 li
210.536 135.338 li
210.536 140.505 li
209.053 140.505 li
209.053 135.472 li
209.053 135.229 209.013 135.058 208.933 134.957 cv
208.853 134.856 208.733 134.809 208.573 134.812 cv
208.311 134.819 208.036 134.95 207.745 135.203 cv
207.745 140.505 li
206.258 140.505 li
cp
f
216.726 139.487 mo
216.842 139.487 216.938 139.454 217.016 139.39 cv
217.095 139.324 217.152 139.229 217.187 139.104 cv
217.222 138.979 217.247 138.851 217.26 138.718 cv
217.273 138.586 217.28 138.427 217.28 138.24 cv
217.28 135.958 li
217.28 135.806 217.271 135.668 217.255 135.547 cv
217.238 135.426 217.209 135.311 217.168 135.2 cv
217.127 135.091 217.065 135.007 216.983 134.949 cv
216.901 134.891 216.802 134.864 216.686 134.868 cv
216.481 134.871 216.265 134.959 216.038 135.131 cv
216.038 139.28 li
216.261 139.418 216.491 139.487 216.726 139.487 cv
cp
214.472 142.686 mo
214.472 133.884 li
216.038 133.884 li
216.038 134.393 li
216.448 133.982 216.893 133.779 217.375 133.783 cv
217.609 133.786 217.817 133.841 217.998 133.945 cv
218.179 134.05 218.321 134.179 218.424 134.334 cv
218.526 134.488 218.609 134.671 218.675 134.882 cv
218.74 135.093 218.784 135.288 218.806 135.469 cv
218.829 135.649 218.84 135.833 218.84 136.02 cv
218.84 138.189 li
218.84 138.525 218.812 138.834 218.756 139.115 cv
218.7 139.396 218.612 139.652 218.493 139.881 cv
218.374 140.11 218.211 140.29 218.004 140.418 cv
217.797 140.547 217.553 140.611 217.274 140.611 cv
216.864 140.611 216.452 140.412 216.038 140.013 cv
216.038 142.686 li
214.472 142.686 li
cp
f
221.927 139.51 mo
222.053 139.51 222.157 139.481 222.237 139.426 cv
222.317 139.369 222.375 139.283 222.411 139.165 cv
222.446 139.048 222.469 138.935 222.48 138.824 cv
222.492 138.715 222.497 138.572 222.497 138.396 cv
222.497 135.997 li
222.497 135.859 222.494 135.745 222.489 135.653 cv
222.483 135.563 222.47 135.463 222.45 135.354 cv
222.429 135.246 222.398 135.161 222.357 135.1 cv
222.189 134.943 li
222.119 134.9 222.031 134.879 221.927 134.879 cv
221.8 134.879 221.696 134.908 221.616 134.966 cv
221.536 135.023 221.478 135.111 221.443 135.229 cv
221.407 135.346 221.385 135.46 221.373 135.569 cv
221.362 135.68 221.356 135.822 221.356 135.997 cv
221.356 138.396 li
221.356 138.534 221.359 138.649 221.365 138.74 cv
221.37 138.832 221.384 138.931 221.404 139.037 cv
221.425 139.144 221.455 139.227 221.496 139.288 cv
221.664 139.445 li
221.734 139.488 221.822 139.51 221.927 139.51 cv
cp
221.921 140.611 mo
221.209 140.611 220.678 140.411 220.33 140.01 cv
219.981 139.609 219.807 139.036 219.807 138.29 cv
219.807 136.104 li
219.807 135.358 219.981 134.785 220.33 134.384 cv
220.678 133.983 221.209 133.783 221.921 133.783 cv
222.636 133.783 223.171 133.983 223.523 134.384 cv
223.876 134.785 224.052 135.358 224.052 136.104 cv
224.052 138.29 li
224.052 139.036 223.876 139.609 223.523 140.01 cv
223.171 140.411 222.636 140.611 221.921 140.611 cv
cp
f
225.148 140.505 mo
225.148 133.884 li
226.714 133.884 li
226.714 134.901 li
226.933 134.51 227.156 134.229 227.382 134.057 cv
227.607 133.886 227.849 133.8 228.106 133.8 cv
228.342 133.827 li
228.342 135.377 li
228.166 135.31 227.985 135.276 227.799 135.276 cv
227.575 135.283 227.379 135.34 227.209 135.443 cv
227.039 135.548 226.874 135.722 226.714 135.964 cv
226.714 140.505 li
225.148 140.505 li
cp
f
228.069 172.982 mo
161.937 172.982 li
156.841 172.982 152.709 168.852 152.709 163.755 cv
152.709 158.658 156.841 154.527 161.937 154.527 cv
228.069 154.527 li
233.166 154.527 237.298 158.658 237.298 163.755 cv
237.298 168.852 233.166 172.982 228.069 172.982 cv
cp
0 .912535 0 0 cmyk
f
171.86 167.862 mo
171.86 160.073 li
173.278 160.073 li
173.278 166.881 li
175.143 166.881 li
175.143 167.862 li
171.86 167.862 li
cp
0 0 0 0 cmyk
f
175.895 167.862 mo
175.895 160.073 li
179.155 160.073 li
179.155 161.074 li
177.313 161.074 li
177.313 163.311 li
178.77 163.311 li
178.77 164.311 li
177.313 164.311 li
177.313 166.881 li
179.178 166.881 li
179.178 167.862 li
175.895 167.862 li
cp
f
181.401 165.128 mo
182.444 165.128 li
181.923 161.929 li
181.401 165.128 li
cp
179.593 167.862 mo
181.176 160.073 li
182.655 160.073 li
184.234 167.862 li
182.914 167.862 li
182.599 166.054 li
181.251 166.054 li
180.931 167.862 li
179.593 167.862 li
cp
f
186.418 163.399 mo
186.76 163.399 li
187.18 163.399 187.479 163.311 187.656 163.132 cv
187.833 162.953 187.922 162.647 187.922 162.216 cv
187.922 161.799 187.844 161.501 187.691 161.32 cv
187.538 161.141 187.256 161.051 186.845 161.051 cv
186.418 161.051 li
186.418 163.399 li
cp
185 167.862 mo
185 160.073 li
186.784 160.073 li
187.195 160.073 187.547 160.107 187.842 160.175 cv
188.135 160.242 188.391 160.354 188.609 160.513 cv
188.827 160.671 188.99 160.886 189.098 161.156 cv
189.206 161.427 189.26 161.759 189.26 162.149 cv
189.26 162.639 189.187 163.038 189.042 163.348 cv
188.896 163.658 188.656 163.884 188.321 164.024 cv
189.401 167.862 li
187.977 167.862 li
187.048 164.306 li
186.418 164.306 li
186.418 167.862 li
185 167.862 li
cp
f
190.337 167.862 mo
190.337 160.073 li
191.313 160.073 li
193.22 164.484 li
193.22 160.073 li
194.395 160.073 li
194.395 167.862 li
193.465 167.862 li
191.539 163.226 li
191.539 167.862 li
190.337 167.862 li
cp
f
197.894 167.862 mo
198.021 160.073 li
199.477 160.073 li
200.605 165.546 li
201.765 160.073 li
203.189 160.073 li
203.32 167.862 li
202.249 167.862 li
202.155 162.497 li
201.032 167.862 li
200.201 167.862 li
199.064 162.479 li
198.979 167.862 li
197.894 167.862 li
cp
f
206.235 166.843 mo
206.334 166.884 206.452 166.904 206.59 166.904 cv
206.727 166.904 206.844 166.884 206.942 166.843 cv
207.039 166.802 207.117 166.749 207.175 166.684 cv
207.232 166.617 207.278 166.531 207.31 166.425 cv
207.344 166.318 207.366 166.212 207.377 166.105 cv
207.387 165.999 207.393 165.872 207.393 165.725 cv
207.393 162.188 li
207.393 161.999 207.384 161.843 207.365 161.718 cv
207.346 161.593 207.309 161.475 207.255 161.363 cv
207.2 161.252 207.117 161.169 207.008 161.114 cv
206.898 161.06 206.759 161.032 206.59 161.032 cv
206.421 161.032 206.28 161.06 206.169 161.114 cv
206.058 161.169 205.975 161.252 205.923 161.363 cv
205.869 161.475 205.834 161.593 205.814 161.718 cv
205.796 161.843 205.786 161.999 205.786 162.188 cv
205.786 165.725 li
205.786 165.872 205.792 165.999 205.802 166.105 cv
205.813 166.212 205.836 166.318 205.869 166.425 cv
205.901 166.531 205.946 166.617 206.003 166.684 cv
206.058 166.749 206.136 166.802 206.235 166.843 cv
cp
206.59 167.956 mo
205.788 167.956 205.214 167.738 204.866 167.304 cv
204.518 166.868 204.344 166.23 204.344 165.392 cv
204.344 162.517 li
204.344 162.103 204.384 161.744 204.462 161.44 cv
204.54 161.137 204.666 160.874 204.84 160.651 cv
205.013 160.429 205.246 160.262 205.537 160.151 cv
205.829 160.04 206.179 159.984 206.59 159.984 cv
207.388 159.984 207.962 160.198 208.311 160.628 cv
208.661 161.057 208.835 161.687 208.835 162.517 cv
208.835 165.392 li
208.835 165.799 208.796 166.156 208.716 166.465 cv
208.635 166.773 208.509 167.041 208.335 167.268 cv
208.161 167.495 207.928 167.667 207.637 167.782 cv
207.346 167.898 206.997 167.956 206.59 167.956 cv
cp
f
211.292 163.399 mo
211.635 163.399 li
212.054 163.399 212.353 163.311 212.53 163.132 cv
212.707 162.953 212.796 162.647 212.796 162.216 cv
212.796 161.799 212.719 161.501 212.565 161.32 cv
212.412 161.141 212.13 161.051 211.719 161.051 cv
211.292 161.051 li
211.292 163.399 li
cp
209.874 167.862 mo
209.874 160.073 li
211.658 160.073 li
212.069 160.073 212.421 160.107 212.716 160.175 cv
213.01 160.242 213.265 160.354 213.483 160.513 cv
213.701 160.671 213.864 160.886 213.972 161.156 cv
214.08 161.427 214.135 161.759 214.135 162.149 cv
214.135 162.639 214.061 163.038 213.916 163.348 cv
213.77 163.658 213.53 163.884 213.195 164.024 cv
214.275 167.862 li
212.851 167.862 li
211.922 164.306 li
211.292 164.306 li
211.292 167.862 li
209.874 167.862 li
cp
f
215.211 167.862 mo
215.211 160.073 li
218.47 160.073 li
218.47 161.074 li
216.629 161.074 li
216.629 163.311 li
218.086 163.311 li
218.086 164.311 li
216.629 164.311 li
216.629 166.881 li
218.494 166.881 li
218.494 167.862 li
215.211 167.862 li
cp
f
58.6345 105.795 mo
58.6345 85.5117 li
62.3289 85.5117 li
62.3289 103.238 li
67.1863 103.238 li
67.1863 105.795 li
58.6345 105.795 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
69.1433 105.795 mo
69.1433 85.5117 li
77.6335 85.5117 li
77.6335 88.1182 li
72.8376 88.1182 li
72.8376 93.9404 li
76.6306 93.9404 li
76.6306 96.5469 li
72.8376 96.5469 li
72.8376 103.238 li
77.6951 103.238 li
77.6951 105.795 li
69.1433 105.795 li
cp
f
85.2673 106.04 mo
84.3943 106.04 83.6238 105.93 82.9548 105.709 cv
82.2859 105.489 81.7332 105.184 81.2976 104.792 cv
80.8611 104.4 80.5066 103.915 80.2332 103.336 cv
79.9597 102.757 79.7683 102.135 79.658 101.471 cv
79.5476 100.806 79.4929 100.058 79.4929 99.2256 cv
79.4929 92.1553 li
79.4929 91.2744 79.5496 90.4932 79.6638 89.8125 cv
79.7781 89.1309 79.9705 88.499 80.239 87.916 cv
80.5085 87.333 80.8611 86.8535 81.2976 86.4785 cv
81.7332 86.1035 82.2839 85.8096 82.949 85.5977 cv
83.614 85.3857 84.3865 85.2793 85.2673 85.2793 cv
86.2781 85.2793 87.1433 85.4141 87.8611 85.6836 cv
88.5779 85.9521 89.1453 86.3486 89.5613 86.8701 cv
89.9773 87.3916 90.2791 88.002 90.4666 88.6992 cv
90.6541 89.3965 90.7478 90.21 90.7478 91.1396 cv
90.7478 92.877 li
87.1882 92.877 li
87.1882 91.1514 li
87.1882 90.1406 87.1345 89.459 87.0291 89.1084 cv
86.8162 88.4238 86.2986 88.0566 85.4753 88.0078 cv
85.2791 88.0078 li
84.9695 88.0078 84.698 88.0439 84.4656 88.1182 cv
84.2332 88.1914 84.0437 88.3076 83.8972 88.4668 cv
83.7498 88.625 83.6316 88.7949 83.5427 88.9746 cv
83.4529 89.1533 83.3855 89.3877 83.3406 89.6777 cv
83.2957 89.9668 83.2673 90.2344 83.2546 90.4785 cv
83.2429 90.7236 83.2361 91.0332 83.2361 91.4082 cv
83.2361 99.9961 li
83.2361 101.188 83.3855 102.035 83.6833 102.541 cv
83.9802 103.047 84.5125 103.3 85.2791 103.3 cv
85.5408 103.3 85.7703 103.269 85.9705 103.208 cv
86.1707 103.146 86.3376 103.069 86.4724 102.976 cv
86.6072 102.882 86.7205 102.747 86.8142 102.571 cv
86.908 102.396 86.9802 102.233 87.0291 102.082 cv
87.0779 101.932 87.114 101.722 87.1384 101.452 cv
87.1628 101.183 87.1775 100.955 87.1814 100.767 cv
87.1853 100.579 87.1882 100.322 87.1882 99.9961 cv
87.1882 98.1855 li
90.7478 98.1855 li
90.7478 99.8496 li
90.7478 100.608 90.6941 101.289 90.5886 101.893 cv
90.4822 102.496 90.3015 103.063 90.0447 103.593 cv
89.7869 104.123 89.4548 104.563 89.0476 104.914 cv
88.6394 105.265 88.1179 105.54 87.4812 105.74 cv
86.8455 105.939 86.1072 106.04 85.2673 106.04 cv
cp
f
95.2869 105.795 mo
95.2869 88.2402 li
91.8855 88.2402 li
91.8855 85.5117 li
102.272 85.5117 li
102.272 88.2402 li
98.9812 88.2402 li
98.9812 105.795 li
95.2869 105.795 li
cp
f
109.441 106.04 mo
108.536 106.04 107.751 105.934 107.086 105.722 cv
106.421 105.51 105.875 105.212 105.447 104.828 cv
105.018 104.445 104.676 103.954 104.419 103.354 cv
104.162 102.755 103.982 102.106 103.881 101.409 cv
103.779 100.712 103.727 99.9023 103.727 98.9814 cv
103.727 85.5117 li
107.312 85.5117 li
107.312 99.3604 li
107.312 99.833 107.324 100.237 107.348 100.571 cv
107.374 100.906 107.427 101.257 107.508 101.623 cv
107.59 101.99 107.706 102.284 107.856 102.504 cv
108.008 102.725 108.216 102.908 108.48 103.055 cv
108.745 103.201 109.065 103.274 109.441 103.274 cv
109.816 103.274 110.135 103.201 110.401 103.055 cv
110.666 102.908 110.87 102.725 111.012 102.504 cv
111.155 102.284 111.269 101.99 111.355 101.623 cv
111.441 101.257 111.494 100.908 111.514 100.577 cv
111.535 100.247 111.545 99.8418 111.545 99.3604 cv
111.545 85.5117 li
115.13 85.5117 li
115.13 98.9814 li
115.13 99.9023 115.078 100.712 114.976 101.409 cv
114.874 102.106 114.695 102.755 114.438 103.354 cv
114.181 103.954 113.841 104.445 113.417 104.828 cv
112.992 105.212 112.448 105.51 111.783 105.722 cv
111.119 105.934 110.338 106.04 109.441 106.04 cv
cp
f
121.698 94.1729 mo
122.592 94.1729 li
123.684 94.1729 124.461 93.9404 124.922 93.4756 cv
125.383 93.0107 125.613 92.2158 125.613 91.0908 cv
125.613 90.0059 125.413 89.2295 125.013 88.7598 cv
124.614 88.291 123.88 88.0566 122.811 88.0566 cv
121.698 88.0566 li
121.698 94.1729 li
cp
118.004 105.795 mo
118.004 85.5117 li
122.653 85.5117 li
123.721 85.5117 124.638 85.5996 125.405 85.7754 cv
126.172 85.9502 126.839 86.2441 127.405 86.6563 cv
127.972 87.0674 128.396 87.627 128.677 88.332 cv
128.959 89.0371 129.099 89.8994 129.099 90.9189 cv
129.099 92.1914 128.91 93.2314 128.531 94.0391 cv
128.151 94.8457 127.525 95.4336 126.653 95.8008 cv
129.467 105.795 li
125.76 105.795 li
123.338 96.5342 li
121.698 96.5342 li
121.698 105.795 li
118.004 105.795 li
cp
f
131.901 105.795 mo
131.901 85.5117 li
140.391 85.5117 li
140.391 88.1182 li
135.595 88.1182 li
135.595 93.9404 li
139.388 93.9404 li
139.388 96.5469 li
135.595 96.5469 li
135.595 103.238 li
140.453 103.238 li
140.453 105.795 li
131.901 105.795 li
cp
f
550.546 214.906 mo
466.469 166.219 li
461.902 163.573 453.918 163.893 448.636 166.933 cv
272.182 268.482 li
266.9 271.521 266.321 276.131 270.887 278.775 cv
354.965 327.463 li
359.532 330.108 367.515 329.789 372.798 326.749 cv
549.252 225.199 li
554.534 222.16 555.113 217.551 550.546 214.906 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
458.72 154.023 mo
455.464 154.023 452.007 154.805 449.371 156.321 cv
272.917 257.871 li
270.641 259.18 269.282 260.879 269.28 262.415 cv
269.278 263.936 270.554 264.994 271.626 265.615 cv
355.702 314.303 li
359.787 316.667 367.276 316.341 372.063 313.587 cv
548.517 212.037 li
550.793 210.729 552.152 209.029 552.154 207.493 cv
552.156 205.972 550.88 204.913 549.808 204.293 cv
465.732 155.604 li
463.897 154.543 461.376 154.023 458.72 154.023 cv
cp
362.757 318.853 mo
359.586 318.853 356.546 318.192 354.227 316.85 cv
270.15 268.162 li
267.687 266.735 266.333 264.692 266.337 262.41 cv
266.341 259.771 268.204 257.187 271.448 255.32 cv
447.902 153.771 li
453.676 150.445 462.155 150.132 467.207 153.058 cv
551.283 201.746 li
553.746 203.172 555.1 205.215 555.097 207.497 cv
555.094 210.137 553.23 212.722 549.986 214.588 cv
373.532 316.138 li
370.408 317.936 366.492 318.853 362.757 318.853 cv
cp
0 0 0 0 cmyk
f
352.518 297.542 mo
265.019 246.873 li
262.144 245.208 260.805 242.963 260.9 240.628 cv
260.881 240.635 li
260.916 227.938 li
265.782 233.639 li
266.097 233.431 266.416 233.223 266.76 233.023 cv
445.758 130.012 li
452.863 125.922 463.605 125.491 469.75 129.05 cv
556.02 179.008 li
557.765 177.097 561.427 173.06 561.427 173.06 cv
561.385 185.479 li
561.384 185.478 li
561.513 188.277 559.52 191.26 555.508 193.568 cv
376.51 296.581 li
369.405 300.671 358.663 301.102 352.518 297.542 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
305.204 266.458 mo
310.243 269.367 li
310.913 269.754 311.455 269.344 311.455 268.451 cv
311.455 267.559 310.913 266.522 310.243 266.136 cv
305.204 263.226 li
304.535 262.84 303.992 263.25 303.992 264.143 cv
303.992 265.034 304.535 266.071 305.204 266.458 cv
cp
1 .866484 .240818 .0951247 cmyk
f
445.758 130.011 mo
452.863 125.922 463.605 125.491 469.75 129.05 cv
556.02 179.008 li
557.765 177.097 561.427 173.06 561.427 173.06 cv
561.385 185.479 li
561.384 185.478 li
561.513 188.277 559.52 191.26 555.508 193.568 cv
376.511 296.581 li
372.803 298.715 368.109 299.842 363.592 299.938 cv
363.762 177.199 li
445.758 130.011 li
cp
level3{
gsave
clp
[209.344 0 0 209.344 363.592 213.288 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[209.344 0 0 209.344 363.592 213.288 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~F)uAAEH#l8Df0E.Chmg$C2%?oB4b^dA7K+Y@UW\Q?sd5H?!LW>>[(B8=]ed-=&r@%<E)pr;c6Lj;,C(b
:JX_\9he;T91qlL8P)HD7n6$<77BU46psC06:*t(5s[b$5<h=q4Ztni4?P\e4$,Ja3B9&Y3&iiU2`EWQ
2E!HN2)R6J1c$pC1,:U?1,:U>0ekC:0JG160/"t2/hSb./M/P+/M/P*/1`>&.k<,".Olnt.Olns.4H\p
.4H\p-n$Jl-n$Jl-n$Jl-RU8h-RU8h-71&d-71&d-71&d,pai`,pai`,pai`,pai`,pai`,pai`,pai`
~>
<~-n$Jk-RL/d,pX`],U4NX+sA*Q+WqmM+<M[H*ZZ7A*?6%=*#fh9)]BV5)AsD1)&O2-(`*u)(D[c%()7Q!
'bqGu'GM2o',(uk&eYcg&J5Qc&.f?_%hB-[%LrsY%LrpW%1NaU%1N^S$k*LO$O[:K$47+I$47(G#mgkC
#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
~>
<~!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%!<<*"zzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
557.286 166.955 mo
469.787 116.285 li
463.642 112.727 452.9 113.156 445.794 117.246 cv
266.798 220.259 li
259.691 224.349 258.912 230.549 265.056 234.107 cv
352.555 284.777 li
358.7 288.336 369.441 287.906 376.548 283.816 cv
555.544 180.804 li
562.65 176.714 563.43 170.514 557.286 166.955 cv
cp
.147219 .0154116 0 0 cmyk
f
352.489 286.133 mo
264.989 235.463 li
261.82 233.627 260.508 231.089 260.94 228.5 cv
261.095 230.604 262.444 232.595 265.056 234.107 cv
352.555 284.777 li
358.7 288.336 369.441 287.906 376.548 283.816 cv
555.544 180.804 li
558.985 178.823 560.928 176.348 561.335 173.917 cv
561.545 176.76 559.562 179.808 555.477 182.159 cv
376.481 285.171 li
369.375 289.261 358.633 289.691 352.489 286.133 cv
cp
0 0 0 0 cmyk
f
550.546 168.951 mo
466.469 120.264 li
461.902 117.619 453.918 117.938 448.636 120.979 cv
272.182 222.527 li
266.9 225.567 266.321 230.176 270.887 232.821 cv
354.965 281.509 li
359.532 284.154 367.515 283.834 372.798 280.795 cv
549.252 179.245 li
554.534 176.205 555.113 171.597 550.546 168.951 cv
cp
level3{
gsave
clp
[203.92 0 0 203.92 552.5 172.432 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s4ogTs4ogTs4ogTs4ogTs4ojUs4ojUs4ojVs4ojVs4ojVs4ojVs4ojVs4ojVs4omWs4omXs4omXs4omX
s4opYs4opZs4opZs4opZs4os[s5$$]s5$$]s5$$^s5$'_s5$'_s5$*as5$*as5$-cs5$-cs5$-cs5$0e
s5-6fs5-6gs5-9hs5-9is5-<ks5-<ks56Ens56Ens56Hps56Hps5?Qss5?Qts5?Qus5?R!s5?U#s5?U$
s5?X&s5H^(s5Ha*s5Ha+s5Hd-s5Hd.s5Qm1s5Qm2s5Qp4s5Qp5s5[$8s5[':s5d0>s5d3@s5m9Bs5m<D
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[203.92 0 0 203.92 552.5 172.432 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^`Ah;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-rE
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,Hhr!>Khr!>Khr!>Khr!>Li8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EPOiSibSiSibSiSibSiSibSiSibSio8tWio8tWio8tWio8tWj5]1[j5]1[jQ,C_jQ,C_jlPUcjlPUc
~>
<~4?P_g4?P_g4?P_g4?Yhj4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4Ztqk4[)%n5!D.o5!D.o5!D.o5!M7r
5<h@s5<h@s5<h@s5<hCu5X7S"5X7S"5X7S"5X7V$5s[e&5s[h(6:+"*6:+%,6UO4.6UO4.6UO706psF2
6psF26psF377BX677BX77Rfj:7Rfj;7n6'>7n6'?84Z9B84Z9C8P)KF8P)KF8P)KF8P)KG8kM]J8kM]K
91qoN91qoN9MA,R9MA,R9he>V9he>V:/4PZ:/4PZ:JXb^:JXb^:f'tb;,L1f;GpCj;c?Un;c?Un<)cgr
~>
<~(Ddl((Ddl((Ddl((Ddl((Ddl((Dmu+(`4),(`4),(`4),(`4),(`4),(`4),(`=2/)&X;0)&X;0)&X;0
)&X>2)B'M4)B'M4)B'M4)B'P6)]K_8)]Kb:*#oq<*#oq<*#ot>*??.@*??1B*Zc@D*Zc@D*ZcCF+!2RH
+!2RI+<VdL+<VdM+X&!Q+sJ3T+sJ3U,9nEX,9nEY,U=W\,U=W],paia-71&e-RU8i-n$Jm.4H\q.Olnu
.k<,#/1`>'/M/P+/hSb/0/"t30JG170ekC;1,:U?1G^gC1c.$G2)R6K2E!HO2`E]U3B9)[3]];_4$,Mc
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
376.143 256.222 mo
316.814 221.968 li
320.601 219.781 li
379.93 254.035 li
376.143 256.222 li
cp
.147219 .0154116 0 0 cmyk
f
334.863 246.235 mo
304.823 228.892 li
308.609 226.705 li
338.65 244.049 li
334.863 246.235 li
cp
f
349.442 254.652 mo
339.699 249.027 li
343.485 246.841 li
353.228 252.466 li
349.442 254.652 li
cp
0 .912535 0 0 cmyk
f
364.152 263.146 mo
354.409 257.52 li
358.195 255.334 li
367.938 260.959 li
364.152 263.146 li
cp
0 0 0 0 cmyk
f
335.199 239.506 mo
310.818 225.43 li
314.605 223.243 li
338.986 237.319 li
335.199 239.506 li
cp
f
364.961 256.688 mo
340.58 242.612 li
344.367 240.426 li
368.748 254.502 li
364.961 256.688 li
cp
.147219 .0154116 0 0 cmyk
f
346.911 226.599 mo
345.69 227.304 343.713 227.304 342.493 226.599 cv
341.272 225.895 341.272 224.753 342.492 224.048 cv
343.713 223.344 345.69 223.344 346.911 224.048 cv
348.131 224.753 348.131 225.895 346.911 226.599 cv
cp
0 .912535 0 0 cmyk
f
353.512 230.41 mo
352.292 231.114 350.314 231.114 349.094 230.41 cv
347.874 229.706 347.874 228.563 349.094 227.859 cv
350.314 227.155 352.292 227.155 353.511 227.859 cv
354.732 228.564 354.732 229.706 353.512 230.41 cv
cp
0 0 0 0 cmyk
f
360.113 234.222 mo
358.893 234.926 356.916 234.926 355.695 234.222 cv
354.475 233.518 354.475 232.375 355.695 231.671 cv
356.916 230.967 358.893 230.967 360.113 231.671 cv
361.334 232.375 361.334 233.518 360.113 234.222 cv
cp
.147219 .0154116 0 0 cmyk
f
366.715 238.033 mo
365.495 238.737 363.517 238.737 362.297 238.033 cv
361.077 237.329 361.077 236.187 362.297 235.482 cv
363.516 234.778 365.495 234.778 366.715 235.482 cv
367.935 236.187 367.935 237.329 366.715 238.033 cv
cp
0 .912535 0 0 cmyk
f
373.316 241.845 mo
372.096 242.549 370.118 242.549 368.898 241.845 cv
367.678 241.14 367.678 239.998 368.898 239.294 cv
370.118 238.589 372.096 238.589 373.316 239.294 cv
374.536 239.998 374.537 241.14 373.316 241.845 cv
cp
0 0 0 0 cmyk
f
506.008 169.327 mo
496.018 163.56 li
499.901 161.318 li
509.89 167.085 li
506.008 169.327 li
cp
0 .912535 0 0 cmyk
f
519.918 177.357 mo
509.928 171.59 li
513.811 169.349 li
523.801 175.116 li
519.918 177.357 li
cp
0 0 0 0 cmyk
f
461.389 143.324 mo
451.4 137.558 li
455.282 135.315 li
465.271 141.083 li
461.389 143.324 li
cp
f
503.781 175.14 mo
489.871 167.108 li
493.754 164.867 li
507.664 172.897 li
503.781 175.14 li
cp
f
513.77 180.907 mo
507.667 177.383 li
511.55 175.142 li
517.653 178.665 li
513.77 180.907 li
cp
.147219 .0154116 0 0 cmyk
f
532.605 257.53 mo
532.393 257.53 532.178 257.48 531.978 257.376 cv
531.313 257.029 531.055 256.209 531.403 255.545 cv
532.78 252.907 534.802 250.685 536.948 249.444 cv
538.298 248.665 539.626 248.301 540.855 248.363 cv
542.637 248.436 544.785 247.134 546.685 244.844 cv
547.752 243.56 548.971 242.502 550.213 241.786 cv
551.561 241.008 552.869 240.635 554.12 240.705 cv
555.889 240.763 558.05 239.476 559.95 237.186 cv
561.016 235.901 562.236 234.844 563.477 234.128 cv
564.827 233.349 566.139 232.982 567.385 233.047 cv
569.162 233.101 571.314 231.817 573.216 229.527 cv
574.28 228.244 575.5 227.187 576.742 226.469 cv
578.732 225.319 580.718 225.072 582.333 225.774 cv
583.02 226.074 583.335 226.874 583.036 227.562 cv
582.737 228.249 581.939 228.563 581.249 228.265 cv
580.448 227.914 579.327 228.112 578.099 228.82 cv
577.134 229.378 576.167 230.223 575.304 231.262 cv
572.821 234.251 569.889 235.894 567.25 235.758 cv
566.529 235.723 565.711 235.973 564.835 236.479 cv
563.869 237.037 562.902 237.881 562.04 238.92 cv
559.558 241.908 556.646 243.544 553.985 243.416 cv
553.258 243.379 552.447 243.63 551.57 244.138 cv
550.604 244.695 549.637 245.539 548.775 246.578 cv
546.295 249.566 543.377 251.205 540.72 251.074 cv
540.003 251.035 539.181 251.289 538.305 251.796 cv
536.594 252.784 534.955 254.609 533.809 256.801 cv
533.567 257.265 533.094 257.53 532.605 257.53 cv
cp
0 0 0 0 cmyk
f
452.917 309.685 mo
452.917 311.35 451.748 313.375 450.305 314.208 cv
448.863 315.041 447.693 314.365 447.693 312.7 cv
447.693 311.034 448.863 309.009 450.305 308.177 cv
451.748 307.344 452.917 308.019 452.917 309.685 cv
cp
f
461.383 304.796 mo
461.383 306.462 460.214 308.487 458.771 309.32 cv
457.329 310.153 456.159 309.478 456.159 307.813 cv
456.159 306.146 457.329 304.121 458.771 303.288 cv
460.214 302.456 461.383 303.131 461.383 304.796 cv
cp
f
469.849 299.908 mo
469.849 301.574 468.679 303.6 467.237 304.433 cv
465.795 305.265 464.626 304.59 464.626 302.925 cv
464.626 301.259 465.795 299.233 467.237 298.4 cv
468.679 297.567 469.849 298.243 469.849 299.908 cv
cp
f
478.315 295.021 mo
478.315 296.687 477.145 298.712 475.703 299.544 cv
474.26 300.377 473.092 299.702 473.092 298.036 cv
473.092 296.371 474.26 294.346 475.703 293.513 cv
477.145 292.68 478.315 293.355 478.315 295.021 cv
cp
f
432.286 88.4609 mo
432.286 90.126 431.117 92.1514 429.675 92.9844 cv
428.231 93.8174 427.062 93.1426 427.062 91.4766 cv
427.062 89.8105 428.231 87.7861 429.675 86.9531 cv
431.117 86.1201 432.286 86.7949 432.286 88.4609 cv
cp
f
439.491 84.3008 mo
439.491 85.9668 438.322 87.9922 436.88 88.8242 cv
435.436 89.6572 434.267 88.9824 434.267 87.3164 cv
434.267 85.6514 435.436 83.626 436.88 82.793 cv
438.322 81.96 439.491 82.6348 439.491 84.3008 cv
cp
f
432.286 80.1416 mo
432.286 81.8066 431.117 83.832 429.675 84.665 cv
428.231 85.498 427.062 84.8223 427.062 83.1572 cv
427.062 81.4912 428.231 79.4658 429.675 78.6338 cv
431.117 77.8008 432.286 78.4756 432.286 80.1416 cv
cp
f
439.491 75.9814 mo
439.491 77.6465 438.322 79.6719 436.88 80.5049 cv
435.436 81.3379 434.267 80.6631 434.267 78.9971 cv
434.267 77.332 435.436 75.3066 436.88 74.4736 cv
438.322 73.6406 439.491 74.3154 439.491 75.9814 cv
cp
f
273.527 184.493 mo
268.303 187.509 li
268.303 181.478 li
273.527 178.462 li
273.527 184.493 li
cp
f
281.993 179.605 mo
276.769 182.621 li
276.769 176.59 li
281.993 173.574 li
281.993 179.605 li
cp
f
290.459 174.718 mo
285.235 177.733 li
285.235 171.702 li
290.459 168.686 li
290.459 174.718 li
cp
f
298.925 169.83 mo
293.701 172.846 li
293.701 166.813 li
298.925 163.798 li
298.925 169.83 li
cp
f
397.643 340.383 mo
392.42 343.398 li
392.42 337.367 li
397.643 334.351 li
397.643 340.383 li
cp
f
404.893 336.145 mo
399.67 339.16 li
399.67 333.129 li
404.893 330.113 li
404.893 336.145 li
cp
f
397.688 348.208 mo
392.465 351.224 li
392.465 345.192 li
397.688 342.177 li
397.688 348.208 li
cp
f
404.893 344.048 mo
399.67 347.064 li
399.67 341.032 li
404.893 338.017 li
404.893 344.048 li
cp
f
519.304 66.8145 mo
518.384 67.3457 517.517 68.1084 516.753 69.0068 cv
516.633 63.9766 513.023 61.9668 508.578 64.5332 cv
507.153 65.3555 505.815 66.5498 504.648 67.9619 cv
502.67 64.5029 498.569 63.6992 493.818 66.4424 cv
487.136 70.2998 481.72 79.6816 481.72 87.3965 cv
481.72 88.0332 481.77 88.627 481.842 89.1992 cv
480.888 88.9531 479.72 89.1523 478.454 89.8828 cv
475.258 91.7285 472.666 96.2178 472.666 99.9092 cv
472.666 103.601 475.258 105.097 478.454 103.251 cv
519.304 79.666 li
522.378 77.8916 524.869 73.5762 524.869 70.0273 cv
524.869 66.4785 522.378 65.04 519.304 66.8145 cv
cp
f
233.349 350.764 mo
231.339 350.764 229.958 349.161 229.958 346.389 cv
229.958 343.089 231.913 339.188 234.558 336.877 cv
243.215 341.875 li
243.491 342.035 li
273.667 324.612 li
273.668 324.612 li
276.8 326.421 li
236.087 349.927 li
235.103 350.495 234.173 350.764 233.349 350.764 cv
243.491 340.756 mo
235.501 336.143 li
235.694 336.01 235.889 335.887 236.087 335.772 cv
237.067 335.207 237.991 334.942 238.812 334.942 cv
239.114 334.942 239.403 334.978 239.675 335.048 cv
239.598 334.441 239.546 333.814 239.546 333.139 cv
239.546 325.408 244.682 316.097 251.23 311.658 cv
272.56 323.973 li
243.491 340.756 li
277.908 325.781 mo
274.775 323.973 li
284.55 318.329 li
283.561 321.053 281.6 323.65 279.342 324.953 cv
277.908 325.781 li
273.668 323.333 mo
252.289 310.99 li
252.311 310.977 252.334 310.964 252.356 310.951 cv
254.407 309.767 256.342 309.207 258.059 309.207 cv
260.552 309.207 262.583 310.39 263.824 312.56 cv
265.059 311.064 266.476 309.8 267.984 308.93 cv
269.374 308.127 270.686 307.747 271.85 307.747 cv
274.626 307.747 276.551 309.913 276.64 313.667 cv
277.451 312.716 278.368 311.908 279.342 311.346 cv
280.289 310.799 281.183 310.54 281.975 310.54 cv
283.908 310.54 285.235 312.082 285.235 314.747 cv
285.235 315.409 285.153 316.097 285 316.79 cv
283.817 317.473 li
273.668 323.333 li
.159609 .0111391 0 0 cmyk
f
273.668 324.612 mo
273.667 324.612 li
273.668 324.612 li
273.668 324.612 li
273.668 324.612 li
274.775 323.973 mo
274.775 323.973 li
284.55 318.329 li
284.55 318.329 li
274.775 323.973 li
273.668 323.333 mo
252.288 310.99 li
252.289 310.99 li
273.668 323.333 li
283.817 317.473 li
273.668 323.333 li
.0890516 .000823987 0 0 cmyk
f
276.8 326.421 mo
273.668 324.612 li
273.668 324.612 li
274.775 323.973 li
273.668 323.333 li
283.817 317.473 li
285 316.79 li
284.888 317.303 284.736 317.818 284.55 318.329 cv
274.775 323.973 li
277.908 325.781 li
276.8 326.421 li
f
243.491 342.035 mo
243.215 341.875 li
234.558 336.877 li
234.863 336.61 235.178 336.364 235.501 336.143 cv
243.491 340.756 li
272.56 323.973 li
251.23 311.658 li
251.579 311.421 251.932 311.198 252.288 310.99 cv
273.668 323.333 li
274.775 323.973 li
273.668 324.612 li
273.667 324.612 li
243.491 342.035 li
f
344.352 167.42 mo
404.439 132.729 li
410.944 128.973 410.128 122.413 402.617 118.076 cv
395.106 113.74 383.744 113.27 377.239 117.024 cv
317.152 151.716 li
310.648 155.471 311.464 162.031 318.974 166.367 cv
326.486 170.704 337.847 171.175 344.352 167.42 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
388.26 105.33 mo
384.394 105.33 380.716 106.104 377.975 107.687 cv
317.888 142.377 li
315.497 143.758 314.233 145.518 314.233 147.467 cv
314.233 149.914 316.229 152.471 319.711 154.48 cv
326.803 158.575 337.53 159.046 343.616 155.532 cv
403.703 120.841 li
406.094 119.46 407.358 117.701 407.359 115.752 cv
407.359 113.305 405.362 110.748 401.881 108.738 cv
397.981 106.486 392.981 105.33 388.26 105.33 cv
cp
333.303 160.84 mo
328.086 160.84 322.608 159.552 318.239 157.029 cv
313.822 154.479 311.29 150.994 311.29 147.467 cv
311.29 144.45 313.11 141.737 316.416 139.828 cv
376.503 105.138 li
383.524 101.085 395.316 101.548 403.353 106.189 cv
407.769 108.739 410.302 112.225 410.302 115.752 cv
410.302 118.769 408.481 121.481 405.175 123.39 cv
345.089 158.081 li
341.885 159.931 337.685 160.84 333.303 160.84 cv
cp
0 0 0 0 cmyk
f
377.385 114.059 mo
377.393 109.7 li
382.549 83.7295 li
377.457 80.584 li
367.257 86.2139 li
367.184 119.688 li
367.179 121.941 368.023 123.465 369.32 123.961 cv
369.32 123.963 li
373.855 126.813 li
374.426 124.658 li
375.205 120.731 li
376.517 118.796 377.38 116.323 377.385 114.059 cv
cp
.657221 .328313 0 0 cmyk
f
377.361 126.714 mo
377.361 126.714 li
374.544 128.269 372.267 126.531 372.275 122.834 cv
372.348 89.3594 li
382.549 83.7285 li
382.475 117.204 li
382.468 120.901 380.177 125.159 377.361 126.714 cv
cp
f
404.893 65.7031 mo
404.893 57.207 398.928 46.876 391.571 42.6279 cv
387.762 40.4297 384.331 40.2959 381.903 41.8516 cv
381.901 41.8477 li
341.509 65.1748 li
362.35 96.4834 li
400.936 74.3574 li
401.037 74.2998 li
401.122 74.251 li
401.12 74.2471 li
403.454 72.8232 404.893 69.874 404.893 65.7031 cv
cp
level3{
gsave
clp
[25.9767 33.9405 -33.9405 25.9767 364.836 52.3076 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9jI`!9sOa!9sOa!9sOa!9sOa
!:'Ub!:'Ub!:'Ub!:'Ub!:'Ub!:0[c!:0[c!:0[c!:0[c!:9ad!:9ad!:9ad!:9ad!:9ad!:Bge!:Bge
!:Kmf!:Kmf!:Tsg!:Tsg!:^$h!:^$h!V$-i!qH<k"7cEl"S2Tn"S2Tn"nVcp#4qlq#PA&s#k\/t$2+?!
$MFH"$hjW$%JTo'%ep#(&,?2*&c)J-')DS.'Dhb0(&It2(]+14)>jI7)uK[9*W5s<+T;?@+o_NB,l[lF
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.9767 33.9405 -33.9405 25.9767 364.836 52.3076 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3&!WiE*!s8W-!s8W."9\i2"U,&6"pP8:#6
tJ>#RC\B#mgnE$47+I$O[@O%1NaU%LrsY%hB3_&J5Te&eYfi',)&o'bqK"(Ddo*)&X>2)]Kb:*??1C+<
VdL+X&$S~>
<~kih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okih6okiq?rl07Hsl07Hsl07Hsl0@R!
lK[["lK[["lK[["lK[["lK[^$lg*m&lg*m&lg*m&lg*p(m-O**m-O**m-O**m-O**m-O-,mHs<.mHs?0
mdBN2mdBN3n*f`6n*f`7nF5r:nF5r:nF5r;naZ/>naZ/?o()ABo()ACoCMSFoCMSGo^qeJo^qeKp%A"N
p%A"Np@e4Rp\4FVp\4FVq"XXZq>'j^q>'j^qYL'bqYL'bqYL'bqtp9fqtp9fr;?KjrVc]nrr2ors8W-!
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
385.874 77.0498 mo
385.874 68.3115 379.738 57.6855 372.171 53.3164 cv
368.731 51.3301 365.591 50.9834 363.184 52.0107 cv
363.181 52.0049 li
363.132 52.0293 li
363.07 52.0596 li
362.965 52.1064 362.86 52.1582 362.758 52.2109 cv
348.449 59.2441 332.613 62.6055 316.677 61.9844 cv
312.163 61.8086 li
348.919 124.796 li
350.909 120.948 li
358.17 106.916 368.781 94.9004 381.792 85.9561 cv
384.311 84.541 385.874 81.458 385.874 77.0498 cv
cp
level3{
gsave
clp
[67.3489 33.4497 -33.4497 67.3489 310.074 63.9698 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[67.3489 33.4497 -33.4497 67.3489 310.074 63.9698 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pjrc-71&d-71&d-7:/g-RU8h-R^Ak-n$Jl-n$Jl-n-So
.4H\p.4H_r.Olnt.Olr!.k</%/1`A)/M/P+/M/S-/hSe10/#"50JG490ekF=1,:U?1,:XA1c.'I2)R9M
2E!HP2`EZT3&ilX3BB2_4$,Md4?P_h4[)%o5<qJ"5s[e'6:4+.6psF377Ka:7n?0B8P2TJ92&#R9hnGZ
:JXe`;,L4h;c?Xp<E3(#='&L+=^#!5>[1N=?!^iE?smDO@U`hWA7]=aB4kmlC2.O"Ci!s+Df9T6EH-#?
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tM?#RC\A#RC\A
#RC\B#mgnF$47+I$47+J$O[=N$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0^&.fBb&J5Tf&eYfj',)#n'GV>t
'bqGu()@Z$(Ddl((`4),)&X;0)B'M4)]K_8*#oq<*??.@*ZcCF+<VdL+X&!P+sJ6V,U=W\,palb-RU;j
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
353.206 110.563 mo
353.206 93.7988 341.436 73.415 326.919 65.0332 cv
319.679 60.8535 313.123 60.4482 308.369 63.1709 cv
308.37 63.1699 li
308.344 63.1855 li
308.308 63.2061 li
303.996 65.7324 li
305.503 65.418 li
302.436 68.6123 300.633 73.6465 300.633 80.209 cv
300.633 96.9727 312.401 117.356 326.919 125.738 cv
332.616 129.027 337.889 129.979 342.195 128.908 cv
341.512 129.913 li
345.483 127.592 li
345.545 127.556 li
345.688 127.473 li
345.682 127.473 li
350.335 124.684 353.206 118.839 353.206 110.563 cv
cp
.147219 .0154116 0 0 cmyk
f
350.129 112.356 mo
350.129 95.5938 338.36 75.21 323.843 66.8281 cv
316.7 62.7041 310.224 62.2568 305.487 64.8594 cv
304.827 65.2461 li
304.601 65.3887 304.382 65.54 304.165 65.6973 cv
305.503 65.418 li
302.436 68.6123 300.633 73.6465 300.633 80.209 cv
300.633 96.9727 312.401 117.356 326.919 125.738 cv
332.616 129.027 337.889 129.979 342.195 128.908 cv
341.572 129.824 li
346.831 127.311 350.129 121.23 350.129 112.356 cv
cp
0 0 0 0 cmyk
f
349.258 112.869 mo
349.258 129.633 337.489 136.427 322.971 128.045 cv
308.453 119.663 296.684 99.2793 296.684 82.5166 cv
296.684 65.7529 308.453 58.959 322.971 67.3408 cv
337.489 75.7227 349.258 96.1064 349.258 112.869 cv
cp
.657221 .328313 0 0 cmyk
f
346.034 111.008 mo
346.034 125.715 335.708 131.677 322.971 124.322 cv
310.234 116.969 299.908 99.085 299.908 84.3779 cv
299.908 69.6709 310.234 63.71 322.971 71.0635 cv
335.708 78.417 346.034 96.3008 346.034 111.008 cv
cp
1 .866484 .240818 .0951247 cmyk
f
324.048 123.861 mo
311.31 116.508 300.985 98.623 300.985 83.916 cv
300.985 76.1934 303.834 70.8838 308.383 68.6455 cv
303.211 70.543 299.908 76.0615 299.908 84.3779 cv
299.908 99.085 310.234 116.969 322.971 124.322 cv
329.019 127.814 334.523 128.303 338.636 126.278 cv
334.662 127.736 329.583 127.057 324.048 123.861 cv
cp
0 0 0 0 cmyk
f
gsave
346.034 111.008 mo
346.034 125.715 335.708 131.677 322.971 124.322 cv
310.234 116.969 299.908 99.085 299.908 84.378 cv
299.908 69.6709 310.234 63.7099 322.971 71.0635 cv
335.708 78.417 346.034 96.3008 346.034 111.008 cv
clp
319.519 92.1797 mo
352.982 66.3057 li
365.134 87.3877 li
325.857 103.504 li
319.519 92.1797 li
cp
.147219 .0154116 0 0 cmyk
f
327.577 100.352 mo
327.577 103.289 325.514 104.479 322.971 103.011 cv
320.427 101.542 318.365 97.9707 318.365 95.0342 cv
318.365 92.0967 320.427 90.9063 322.971 92.375 cv
325.514 93.8438 327.577 97.415 327.577 100.352 cv
cp
.657221 .328313 0 0 cmyk
f
grestore
369.816 114.346 mo
369.635 114.242 li
368.966 113.858 368.421 112.824 368.419 111.934 cv
368.4 105.478 li
368.397 104.587 368.937 104.176 369.607 104.56 cv
369.788 104.663 li
370.457 105.047 371.002 106.081 371.005 106.972 cv
371.023 113.428 li
371.026 114.318 370.485 114.729 369.816 114.346 cv
cp
f
443.799 217.799 mo
430.379 225.547 408.62 225.547 395.2 217.799 cv
381.779 210.051 381.779 197.488 395.199 189.74 cv
408.619 181.992 430.378 181.992 443.798 189.74 cv
457.219 197.488 457.219 210.051 443.799 217.799 cv
cp
1 .900999 .332372 .236912 cmyk
f
462.217 176.854 mo
462.217 164.861 li
459.953 164.861 li
457.919 161.36 454.533 158.063 449.705 155.276 cv
433.022 145.644 405.974 145.644 389.292 155.276 cv
384.463 158.063 381.077 161.36 379.044 164.861 cv
376.783 164.861 li
376.783 176.79 li
376.786 176.79 li
376.758 183.124 380.923 189.462 389.293 194.295 cv
405.975 203.927 433.023 203.927 449.706 194.296 cv
458.048 189.479 462.218 183.167 462.217 176.854 cv
cp
0 .912535 0 0 cmyk
f
449.705 155.275 mo
441.364 150.46 430.431 148.052 419.5 148.052 cv
419.5 201.519 li
430.432 201.519 441.365 199.111 449.706 194.296 cv
458.048 189.479 462.218 183.167 462.217 176.854 cv
462.217 164.861 li
459.953 164.861 li
457.919 161.36 454.533 158.063 449.705 155.275 cv
cp
.293065 1 .0738231 .00131228 cmyk
f
449.706 182.301 mo
433.023 191.933 405.975 191.932 389.293 182.3 cv
372.61 172.668 372.61 157.053 389.292 147.421 cv
405.974 137.789 433.022 137.79 449.705 147.422 cv
466.387 157.054 466.387 172.669 449.706 182.301 cv
cp
level3{
gsave
clp
[85.4363 0 0 85.4363 376.781 164.861 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[85.4363 0 0 85.4363 376.781 164.861 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
449.706 182.3 mo
433.023 191.933 405.975 191.933 389.293 182.3 cv
381.298 177.685 377.177 171.693 376.845 165.645 cv
376.485 172.217 380.605 178.854 389.293 183.87 cv
405.975 193.502 433.023 193.502 449.706 183.87 cv
458.392 178.854 462.512 172.218 462.152 165.646 cv
461.82 171.693 457.701 177.685 449.706 182.3 cv
cp
0 0 0 0 cmyk
f
402.469 165.94 mo
419.193 156.285 li
421.084 155.193 424.31 155.666 425.069 157.147 cv
432.1 170.862 li
432.894 172.411 430.399 173.852 427.718 173.393 cv
403.962 169.333 li
401.397 168.895 400.577 167.032 402.469 165.94 cv
cp
f
412.81 241.521 mo
344.609 202.146 li
346.419 201.101 li
414.62 240.477 li
412.81 241.521 li
cp
.501427 .182498 0 0 cmyk
f
366.612 215.988 mo
343.622 202.716 li
347.406 200.531 li
370.395 213.805 li
366.612 215.988 li
cp
.147219 .0154116 0 0 cmyk
f
365.708 216.711 mo
364.74 216.165 li
370.683 212.734 li
371.651 213.28 li
365.708 216.711 li
cp
0 0 0 0 cmyk
f
144.644 161.796 mo
143.564 161.796 142.685 162.675 142.685 163.755 cv
142.685 164.835 143.564 165.714 144.644 165.714 cv
145.724 165.714 146.603 164.835 146.603 163.755 cv
146.603 162.675 145.724 161.796 144.644 161.796 cv
cp
144.644 168.296 mo
142.14 168.296 140.103 166.259 140.103 163.755 cv
140.103 161.251 142.14 159.214 144.644 159.214 cv
147.148 159.214 149.185 161.251 149.185 163.755 cv
149.185 166.259 147.148 168.296 144.644 168.296 cv
cp
f
132.154 161.796 mo
131.074 161.796 130.195 162.675 130.195 163.755 cv
130.195 164.835 131.074 165.714 132.154 165.714 cv
133.234 165.714 134.113 164.835 134.113 163.755 cv
134.113 162.675 133.234 161.796 132.154 161.796 cv
cp
132.154 168.296 mo
129.65 168.296 127.613 166.259 127.613 163.755 cv
127.613 161.251 129.65 159.214 132.154 159.214 cv
134.658 159.214 136.695 161.251 136.695 163.755 cv
136.695 166.259 134.658 168.296 132.154 168.296 cv
cp
f
122.913 163.755 mo
122.913 165.55 121.458 167.005 119.663 167.005 cv
117.868 167.005 116.413 165.55 116.413 163.755 cv
116.413 161.96 117.868 160.505 119.663 160.505 cv
121.458 160.505 122.913 161.96 122.913 163.755 cv
cp
f
107.172 167.005 mo
105.377 167.005 103.922 165.55 103.922 163.755 cv
103.922 161.96 105.377 160.505 107.172 160.505 cv
108.967 160.505 110.422 161.96 110.422 163.755 cv
110.422 165.55 108.967 167.005 107.172 167.005 cv
.159609 .0111391 0 0 cmyk
f
190.691 312.196 mo
190.477 312.196 190.26 312.146 190.057 312.04 cv
189.387 311.689 189.128 310.862 189.478 310.191 cv
190.869 307.529 192.909 305.286 195.075 304.036 cv
196.437 303.248 197.753 302.885 199.019 302.945 cv
200.789 303.049 202.982 301.704 204.902 299.394 cv
205.993 298.079 207.19 297.041 208.462 296.307 cv
209.823 295.521 211.151 295.144 212.404 295.216 cv
214.207 295.304 216.37 293.977 218.289 291.664 cv
219.38 290.35 220.578 289.312 221.848 288.578 cv
223.21 287.792 224.535 287.416 225.791 287.487 cv
227.568 287.57 229.757 286.248 231.676 283.936 cv
232.764 282.622 233.963 281.584 235.235 280.85 cv
237.243 279.688 239.246 279.439 240.876 280.147 cv
241.57 280.449 241.887 281.256 241.587 281.95 cv
241.285 282.644 240.478 282.963 239.784 282.661 cv
238.972 282.308 237.843 282.508 236.605 283.223 cv
235.629 283.786 234.653 284.638 233.784 285.686 cv
231.28 288.702 228.348 290.363 225.655 290.224 cv
224.943 290.196 224.102 290.44 223.218 290.951 cv
222.243 291.514 221.267 292.365 220.396 293.414 cv
217.893 296.431 214.962 298.096 212.268 297.952 cv
211.562 297.926 210.715 298.169 209.831 298.68 cv
208.856 299.242 207.881 300.095 207.01 301.144 cv
204.506 304.16 201.569 305.817 198.882 305.682 cv
198.166 305.648 197.33 305.898 196.444 306.409 cv
194.718 307.406 193.063 309.247 191.906 311.461 cv
191.662 311.929 191.184 312.196 190.691 312.196 cv
cp
0 0 0 0 cmyk
f
544.18 107.579 mo
543.222 107.579 542.123 107.92 540.956 108.595 cv
536.532 111.148 532.932 117.382 532.932 122.49 cv
532.932 124.687 533.607 126.285 534.832 126.992 cv
536.054 127.699 537.777 127.484 539.68 126.385 cv
544.104 123.832 547.704 117.599 547.704 112.49 cv
547.704 110.294 547.029 108.694 545.804 107.987 cv
545.332 107.714 544.784 107.579 544.18 107.579 cv
cp
536.447 129.953 mo
535.403 129.953 534.427 129.703 533.556 129.2 cv
531.51 128.019 530.384 125.636 530.384 122.49 cv
530.384 116.47 534.468 109.396 539.68 106.386 cv
542.405 104.814 545.033 104.597 547.079 105.779 cv
549.126 106.961 550.253 109.344 550.253 112.49 cv
550.253 118.511 546.169 125.584 540.956 128.594 cv
539.39 129.497 537.856 129.953 536.447 129.953 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (banner_on_blue_bg_05.eps)
%%CreationDate: 1/17/2019 4:24 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KpOCo<oCqkJ]jCLVaJCo97(pMfQ2ma/:@+3<F"h!k(kY2dqqUqLIqE;N<^M?'huGsGVAN@7/[I8%.D'ro>1ad:S*fW0f_aR>
%P3k9+FktKQP-0.LC#/O^97L3Yp8%Yq2+V@2qmpB*DU\@'L9"O'M>5N^hr2Q)?=S*4l41<"]gcckW:W-arnq+^no)3GH<EI_?g=K&
%>+JFWT2O=@2icgbi2OC/[6(Lhf0?DK928Wb0?me6ptYqQJcbEts8H`Ad2=fG>B#"kq=GMQ+4)\/0)`-4)@iJ'E*"&q<-e;kF1!q#
%8m9oUI+Qa(KB)g>Dp\e!^4Qs1VH^K5>5S4$EdVkDkDO*nn8?(SrP`o%p28nh_p;\.ia%/6%]f&Al_NC@&)4cMe,u]NBaoMB<Eo@n
%;.mrg;MoP3a5P8U(3-tYq?4PNcrEh4UPkh34L+p.:OXJ8\rM8[[dd/gfdN77Mqr#]X,?X*=9_8G=Z61on-eln)rNYj<(S!oIdc@-
%hEMpKL+r,6S_!=&V`no/9mN=7[b.E;A97:hN:4]]5Tb*9jk+/%VC\&%PWcUQWO_MTm\oA(Pk),I)I%^#>Q<J/4_`H9XZe,DTKh4L
%ruVf="&f2s!WW#`W71%HlaDSq5_HfBg!IJ"2-V(j<W)Ed;b&lI]:3,PNh(LrTJ_DUeE`'4A>.QE0!@ab0C&SGq?'Tf^\dl'e_TK'
%Vi'1^37*.UaXEWR8U!n@jP.*[I@.Afh,)3['T6O1$)25P7sk\V`Tr!MT\[;jmQnCDU%8T^\DM2Do>NRZ*daS]PWe-mM^P\Z1jq?"
%F[b\?A%2"a/kOO70=Ua?Fq.$_Heiue]?]nRO@pWq.VqD!WqBd@HJ*mYKsCG\.K"B\P?ENnC#Z2Ri2c>,CS`5h2,/HW:&NNunQ41M
%^IAf@c7X/XbiUn[TAs<;a2)SP'1JWlho@jnO*Q,m!q?A)o6ni;TC<T%<@XB<;Sc!V(&Xn+_)tSJ^IF@Gd,e,X)5;pm`%'$3b\G)a
%aaV3%`UBZ1QfB#s_fjuhB#AeKf!=2;;>?#oYYk0fD&;$E0#i(n/,k<`_H/:GFVZJG)hkKFG5QktA%V65XA;t.0H2nZ?SP=jiHJaq
%W:I$f=^SJ;_H1n0CHZG5X$3R)]0B;%%$eoN*gdDkLp'np)bAP#p)>)5r.*J)NFJ\df<C1<NVJD2@07Afi%(unIYFtm%GQ]BCbQa;
%Yg-f;^j?DlTZRX7&js^>aSHsaZ-F#2_ckA)5a>t^@s;NrMd^*u_uoU=!sOZn"6jjWEqV;t&RR73UNLAtlPF_!^1&."+C$Ot>g+JE
%II&#6dKMW=U(MK;Q"MA[LdFcJ0t+1X=oDI[ZTGM=UWSLG&aa)Ya)'c7XE[bGqjflpjk3%5Pg.4>FV$&IU'Dq)GkSIZi,UQ!j*;t4
%/"R!)d`!2^.?Q6DWCb>3GdKnHa.n3.'&?-Ga'Bmh/#k/gbR.sKlFKFqI-7S/k7>I<5K3*X@9MsspmjS+Enb25`UE0P]'TIlSNT)r
%rU5%&mN-i\!W+<pB9+`Ws2XTp!LHlgm&ToP4_ckJJ,IS5RXB'<O(4!LCjaq9i]m-sD)A>OAI"?AL*p5TQHPTlErO1Qrf.&-7[@cW
%Gki41rLJ.>WI[.ob?&H:cN!=51N;N,q1!,6B>(Lu^n()Y.lD;/J+lq\32ig+hKN=pEVJkI`=s0PG5#PcpSjK\XJi-ZZ6(DU7GH/X
%`1DeRI\rfKQ_0[bB&#Q=i8"_KU]rK(=86ldG<]s=rBein^)T^EI:?K5.]a1UM4l*I11-cHh0Hbj?$Ne^6e7Xm"*SmH&I/pQ55e*V
%]8N7^R(s'%$dZ6`,;LH)^rri7_I1&cZ_$Y1k`pO>7h-2$ZN[2hO[ZP`)E@'fc,#((5qIV!+_j8onSAm^?HjQ:j6XBf+*c1,>$)Cl
%@0`BXD&6!W(+#=MlNb0+FAPnkQ)4sn@)biOm@R,UI);Itm,pquD@IqE%rM(!l.[PD\s5\dJN7oJ8YZ\Wi'qN$bpM/$;oF9mZ&pO+
%$+JNFaE/]TikXMSV]GS,0nJG-$LilR,%?cD-\,Om1+n?JB&&)[J_WXTBp_^Nf`@*Df$@`Ja#D#Kn>eRS$Xe`RnGm5cVgSqC+<H$F
%>pe)j=a-X@8+@jf4b$)O+Sl<lJ[O<C,EAO[?cJ=\b\PqRVg<g7oYc"T1BMnE.3XSQ4eh889<]pYh(@FnR8c,!p*U@jhV5/@S$D'G
%*(UV8%J>CF72(m<L!&`$IYV-q8/'MEXN.S]Lcnk!,YSI3R4NC<h&3hp!YdE)T7ZAG*O++)4ciM1Imu,.S8tAsFYr+($FW7K+@[5g
%L'b%mW5RL/_8OT_G>F:-pcn(k'J/Tl7cgOBTIFDmMK_&fj(&f6O9L&M17#c8"3_.A*teL,o9&1IR+^/:ae4@[KFOXu`CFNuN^V3c
%mE*@r!_WlpZ%;M..UjO:HQGb080^NS'XJof/ETS@RAdd>cJIU)P;S^_mRaW)AU^L;nBW*/`8o"3Oj&tr+3M4*4&*ne6kqs"lr#1N
%*So,q'NKI2d0U?qj#/7#;(qntg#>O\C]_jW)HSg_`?YW\/>m;PI6]DX4rbc)VkUh?2M"hgFH:8t)2f%.``N>Of[2KGa$Rm`n0bVL
%KqN23Lt??gm.pG&iq'LT5"RY2T34imOg#6[5e@Ud3`nCU4cDI4bDo?ii%Z-Hm`mhMa#T$t?;]jFZO&pkj*.,Q-029[:J<V5nYch1
%:M'4LGEitTbBIO!`P>>Hkh$j@SUF;!G;R]&QonX%&1Ml5R'QaSbGL%n199b=cCbDLnf:3k7-Aa!KoC9`Br4Q;rkC4"1+#GYo)-#=
%JAVWC$cFY!c7%_qU3qNX93T,6@J`r*V$UW>Ai6,&9r!OjVtH7+2gaPC>s:j*Va%N5j5V2E"QO=bJ'Y:M@1C82R3>hkWa`#[[<RWW
%OBi,InR80EJd/)RHGYn,mJ@T>0hM%:-aJj&^*!Zs*oL8\qgr+8[?<b.C!*K=^!;PKa@`]F"cu,WO3MKkde;ALDT930JrHdD-)C9_
%',F&%<+uC)0Nn`+^I!*k0<2nNBZO5d`<g$H;!f-2f.iIc7R:)86o"ReZE_daCK*`T3?5?]8OSU!alIQ/PLU2jP%;O`,/BSr<2nD?
%=Ks,k(dK&F(EL6,/A,*%_FM)$1%%&@jTM=l1Em'o@0R=p#?/Tn'N,!h=$]@c++m2,X'SH*"^)ri)]F']onfHkh;`kY+_)!jXho?>
%p:m+CO`)c"^tS52MIc7r,fsX9VjQqq]<"3eHQlUFo`MWC42IXml35R0r^<%qC^<FO0nNf(6AQ8-KHJ3TJX]s_P5ne%?GHT>.Dr]/
%jMF&c/P.-UP`7&gNdKV1p3[^'I+0OV"/EpS#9MtQKlC506j+9uL")MsK'i\0'>u@(;,f*37G(]fh$/c,A!UPJ0b#J`SrZ==n#(>G
%W'V[t<h("i-:_),UZ.?@:ih#r&d[njDOm$ai;LGnVTL"mYTf)TPH`)%*t3a]S%6fo-?;<uTLo7%Z<.=#&OICVReHhO<01+)Z.BMt
%-j9<UVaQ9c9]1j6=PMdbZjB5?9Oc<-Sp[0idRq`8'^=76UOc&P]u`aq&5rY_@hM5[5Wi7GJ1r/R+aDTbAI&X&ptdL<Rd7IZ\3/MD
%Pf::l?1:_`;GZ3#RH-Z&?qd;(+\;-S*j@"s4b5*3=G$@*@RWQOiPaQu53cdd=_4@#aWM!W9H#*f%q^EH,$or)'i0_u[&!LSDMW-H
%%'Yc@hg(3.eh^N</#X(4[Aj]god5A.XK&>+hEWg[OEhr)>[?:N1h0os#2WF]^^@5=<W4q9]/op)W/fXOS.DiJAu2='p%Wkgh\0/_
%ST0iJ*J4Yn8I\o2c1Zq;*mXSk10)j`V0;\D,)e\(je-0rrLA.)Ot&G_O%h(a33n8:,[K*n+ZqtDOWY5/5D'5!X?M)GdfP<)DN4fb
%0tP5eJ45HchB]QjchTar*T<S%gE.fgeGk>@Ht;"%0QLKdV)u^[TD?62'qHeM!EVl@\2Nmfh&41b\Cm7+S'Pe[!ZO#+`ipH^DcP<E
%WU37LW'MRW5^4";"#>^h@NgP$`iPIm&K@e1W@$sbbkL2rNlE>-[[]UW`N3[S7W*\ONFQ,rG9ofL[1$qkS&3CijoW$D`J.%^.Z=U%
%1%@u2K_(T"1$?Gm#QhSB[j?5^F(F<)&I.s/&;s+GWDGh]o:f_lZs=&m#MPKVcAu,J1eK_\GT\sW\m6/^:H$=TKiGu7)ee#TgT%9X
%J7_1pWPN*8hQm8lX(3e.H_okEL+$l'MT'[roDc[T([n7U5)=Q['8Fna660J&fF-b&\$0q81i1XC0j)5&IRMu-i_p&Z!ol)T%';'b
%V)f,d>CocK\W2"`/W:PQ/r>)rec\t]0Sp:SqQ<K9ZE[IFNo7lGB)WNkj](H-D6&nY$$W>1FY#[@F-H'V.:J1ihuFZ-"qCY;!1#KW
%S6:*8%Pt-#8OPh[OfT1l#p2?CNO+<8@a%.fGu6E7Tm$FdK.4qKMe=abliWatZ'm*9J5lc3mh*/sP2Yt1+W'+0U`qDL]3tD0pbG_W
%oQ5Fm6\\rE#J<`J';b^FG`IL'ON5q-0dQVs;[5/IH)a?pgF$RJ&Mnq@8B$%9(`X)Do#BmAHA1N;mPun$h-+'IM\m+OFIF"0o>bk"
%WlcfM>1/QF]=7r-V?>]HfqKWqMfDq1oNMDB'idh%>p-'_SgKBgTtjd#-ntX/49J]9S<*h4!tpr]Q_("eM)9]7j.8gMMP;L':6Fcl
%_N84X#m-*=,R+][J0\Dq*MIOoi%#_`'VAnifn#aPMXYEJ63ZGeh]Tp<b\7LEOOW1p1TRl(OH7Xr'7kk[EVF$4Y\ZuqW&-32%V-7=
%]Z,BZjhckNZ>Iu2%/5c\#I+XVD;_2'Y`K4CaJm!b8qEW>;09D4V[/3#4;h6"*39C-)WBY79j<2J$/5^k`&`R&:=:+B2'AKH.3MM2
%P<dW]7XYL4ODR5:aQHMhZgB_M$'!&ZNGZU"+Ch#pAm;WK5UMGBi\%@?"rZI@naT[r0fEGTd`=0:B-A2p(t)qN5(J5+4:VjTf+NF_
%UPjds_&q8Ua6u%9oT:&ZRAPdIpIQ\0:D3//q4n_:!L!ghGr5Ro#"&.6Sm\Hd>Q>Kb(jH[WaDSKNPBe[PR>W'5F\no.9"Od!/r6LC
%,,#jR:k`P6k2X(FL3Y1a5Kh^*+I`ec[%[g4BTsFapjJY:,_XMXX>7mCU5Z]qd7'MQ-:q_(W%s!Ae,`K8D:8S(dg$*!#*S+'&D!"6
%L8e[RVF]840UZ/m$BfZb,=sOW1(5se\JR<*UVuN9ZW275\h$I4q`$T0Al_L73*2U"fXRhm@Zh5EN)6d<R5DGL`dK&N8DS^>lsb#(
%9<1o&KMCS]EkiAF1aeb@o9*h,bog1])H4\*IUk6g9h^`I=h$)$S'H<RoQsUN^HCpE02K(p1J!:LT5F-sa.78j[<!_NIA4G:&S:kU
%'DKG-3;qZeCZi'Kc[*pIqcq-(cZ>iRi)FnrZ\u@prfg]4:1U[NGG!X"?]<2.1ZP(emOL/6kC!(t%GWu$IAI/9r%J)rN-gSsYLL@Y
%oAqJ[E9DWCPo@0iE-^/\2WLd(pWrD8lH>r;`-7m:MefKG\kUt]T7<s7Nq$?Xgo?u`jM076Fa=;jfD$HaD7_YFS_ssLg:R!rm].C6
%d-fn%!LNe1`I@E%[lPc/nSu<&3dKH8mp5d"/SOkO>,<&&DQC^)/CCX[95@m.?2J*b-@<>L(XpdjBttCr\)?MdG;d+G/enB<4DhOl
%nNeD]HMcdcN&tr"[>'[Y?b/0Hi_4QGheERHrV$9!R\eV_5N!Wp\"VYKB2?/VIV6QH/bn-[nFmRm_/f>^H@2E?s4d%V/Lh*=bPUD#
%>h#bI`MgS[oWNMcF+(I(%il5unAWlc<ZeE0X2T4fF_llQ)ZfDfk]s5Ib,TUaDKU7QG^ib1SdK:VlJ6bn):Z"Ms%g-A3nH70.01iI
%NIW<G7T5*+:Ui2]Uc&(;X3RjHhulNKrV+rtR$g89.G(]e_o#C)Bm#nt?gf#kAJ\7Ji4CT3@gBYs.^;(sRZmamn+Aa/_/VRNm:<t1
%%BPr4*J;ZR9idYs"WqGrPa%#uZ^T9!2ZBA9i]0K))Cu-%dGj':)Kp)55AW8>XmLTC_cAB&XOK>&p-HHBEnG8o_Z"4f=PE$43cjM'
%6QnETFJco6/C$&i\EJMe3Q9uB[MF(f9*;$AQ`>tObt1UH<knOCbG]09/N(b>_)\5Y>!1qG=qgO`X?us;VT>h#97'pn\-ARV#-00f
%=>XMC?Y^3aV&Q*9MGP-0rU7&'T[7*V&q%e6ClPok@ffa$0S;4q9'<[rLt1S8ZrChL!Rj^RQ;dBks&00\p7f5Z6Rq%[n$fo'k`bC2
%He;dM9i#qf-)<`n$78q-Kemf<m$b65EP^CL%I@B9f.)5U?bc5gBpQW=$EtWHlch?Go6X:M=5ug%!H2u:hK5!Qlgc:eD#PF`N=5Du
%*B_d\T9_IoNb*6iP-.(ck$).`.iG1fH0LC9Qi=LEkmt\"O^(N#s1LhkPnZK?5q7SQ.Rk/EprZKo&k/[c)C6De5m\VK-//Qf&Osoo
%;8VDaj?j7t<?P9je]aJY6.-noFKoE1PT36@F1?e"'gep*qST=9<Hpu6A8AVk)j"HNclkN3mFo(T-uPtcJQ0$mG%=)[M%%W6!ci*<
%+NnnT-ZDCC'rQ6>%juC:3Kjr<ZnD=IOSW"aE[=qeahQ3+:h&u7-h1=b=8BcuHh>F6GE4qoG@0s86slgA;@"_u.ZcuCX_>4<\Yc/n
%Mf]E"\ut;a(aK3H8Ztr\pgh8b@#);bFENY9T'jKPJCfl\Kq9$m$I>.^kqtiW,6JHQddd5\+9WNP_r`e5<9I^13:GT^5?=RJFq0e/
%Gh6NT1df"Bn;?\3Ho:[Lqa:`_jI^tV9^5iA]!lG!87k=H&kQ.;'O'$hW^Ju"GcFXS&%4&a5foqb6#nEj9WQO1A/i#9gddB&+Y"[n
%NC)E:VA<43(jlIJHq8&]&tH-`nc7SgaH_hs0qP?KWI!e>\nstCB_d2q\<*5r%Y/I#-?(^\kD(/T289J5$YamWmsDe742<L#j@R,h
%F^O_aYNAhJ?o23R"eP1.T'JCgFDI.H.@ccWA:bHm7.QT'b2gWSo47B%o#,c.bXEol?J0.u7[.YPfRjVNFE073jAUX7='\?,-/b7"
%SJX'[N$8B.LliK`cGj(I[2<UN).PS=Cij*50E&`-QUY'KD04K%D0gdHX-oqBQGQ#s'$61JPj$6Mb2gWSb@L-Rnmq6co;&VoUW"]5
%*c/&[.UnX:;MRjX0f<o2J.ajg+9bU!>,?#H@@pAK<jlrV8kCQ![VqTmI*ct#RQ_a"$DQ%e6VC]P[iPAHUi2ZG(9Xb?rm7kh4Jm5p
%(Q/S)=;0MB$pIs3>IqY2Ke7Y%,QQA/AY2T2X'DEYVt-,&qk)hV]PCW/@A,r7kDob*3?pg7N<GqGcia>&+;NI8"sUMb!9L_DGAKN.
%0O-$WM)oE+_f:\@KU"Yb9b-,0(f\@N^dJ1.+T4's<?^]Di-qJ`&<ehjAeA'"#e-K=64.7."6VjW4QNPrq>^hJ*![Z3KH"oqL_#4[
%&OV^@j)]qE1a/&4*/-.9)J#L@(!@q$mPkPsZg_uJ;%'f8V(qn"hqEa!&D]%96`>b`+HD1+*$&JY!AQ=ijDcFKW!Z@e9*i]BXC]7a
%N50Odb8<j(Ugc:B^C%OcGRo*%AQp?)d@rmf.]uI>bp448;eU:^c/qL31*mO?7"U(t;CTUGlrBCU!ZPkE2+CC69"6HB=S'@GF+0X'
%M$amf*8nIN@$gqu9Eg)3DI04AatX1j=>9Um5X6A5+iH_k+JUEBR>A3V*TiSXprN^cKm3qO0k@%(8dT?78Mik$Kh1Sj029;r2ISJO
%%in8e`,YQ;YYZX>#""V()&NhA5FgQN1N8O<L(Y(e0]\&"JtYbj//cSE%gH\Mn,cGs-,Q]JXH6C4Rmaei3&h!n-P<a/?.h-eZDqRU
%CR<Hn[5G$;U(sF%<-,.MXD_?*]I2\nL<L4(+]`*ON?L9o2<tHq(+^b^3Df1#o+%<=``!%Q'Gs_Uar"^0aA^'QIL<3SYj<(R3tWnh
%&[b$[U<[M%j-lujj>Bm$UY_,U"s?3lXpAeLlm8p(^h*YK$1&G&\JX:FbQg\c<Nr-J&Q@mJM(H]0VaR@1ZoS<Dk(1QE6p6P5F$ll\
%n9<S:);[FoA2N's*i!!:Fmp98ZoB=Ec5?qW2lWEZ,j<uF\NG/%Ht)OfZ1nZG&"G;)bp/uBl*Lb+o>'ES@e%7lJ`S*kl]Se'C\KgK
%A*b1<*b0C0Yr]na6=OaC0f2g&Cs1uji/&W#.\Y(T[-DARWlOIP0%on/XbML6CUcM7g@R#r6-'hDH62##J6DNS4jSZH[@pfQC_UjG
%.a2!8i1L6_d3FcUKpf"=VLh9HM[BJgM/UfX4\&]C"L`>2l=/rb/TO&619rtip,W%U,m7<230)\U(tN3J3FS=#leHMbbs^qaf3l_\
%aecq_&">Be*%@)E23&]#@7:%+8n/e!M&*?[!ZHm42%nD1F97e&*td4_:\ol7HAKQ5&.SDYNV&8C86T1:I4d7&N[4C)?q)92$pbrZ
%(5JB3KL(Df6JNtWAg*h9ci_3\du$gdF;BE2.ZT'6*sa"k\Pr`Y$]4;!f)lq5J.b^L1Ur`O")0C,SSDt6(tuuhCpCMsbMZhaK*qoa
%WmQNge<iPH,D-mQdqge:R:K"?\1t*8$u+`'_tG';F+C)*T&ToG7D<P&_hdbb]'_W#Ma>C:iCCngj2Oj0SK&<G5c1Wen6[i,#o-@^
%4QQCT+u#o!MO$`;$"f<N*t/6"#X;GN"*4NS8[c/D[lEnecWRp5BgW!e&2gFWkVP_q/n&b9j)CQ@M&i4c=MVmO728%S?tuuC&Ns9S
%+_ETo.]M[5:16/2\HoQARkC>Mgp/FW0qZ6t$F:%Tn-L)^"Kns8I-D/Q$6(EM90b%(0sO:@8shB9(m9H(0WtOq:3!c]7BeDa\Bn2a
%PB"P!jq'@t"D$/(aUDU0AC/EUJ5-uC)\m0E,j6XKc<Y8M>VW^uRgR,=Q!h!pAdsO>*[)pfkS?L_&FC0-k*m9>D1g%s%[i%QjpE@M
%TLE`_O2+&@huH(ES%JA*!7XPiT\('@]IF27Eo/U&%jQho-PQ8gI6p*L-\5VL\huK9nq!)D&2FLkiII\X>9UrmoidR3Ur2jgA=s'O
%\<\KbO%Z-9BVmYiJa0&M0b'.WDk>J1J3@jg/J>XT(bo_kW[OhrbtG'fM7j/l^OU"69c0DY8[Moi_9%fd-O[%ngur9hYb?,B8u+WW
%Qpf^0<FI4&TE/YN@S[%e"F?Gta\tl+/iOjY&/@P_PFHDGDR^;Yc'qJSYscR\6='!-:uFUha;^!P6B_\Iq*9B!W)q&m*g,(0+E+eb
%5'$:S#NQ])RP9.U&(S0SS4s=^K)=U6Y:pJHpO>!f\+"h+a^Eoq9dj0@]`Fn=^oDdBP,jD&am3g5M1^<foHV5r+lVN$9H]<KZUnAX
%Us)CQ%TJ'Yd[[*OPCtBA)3R+N@SFP88co^j(GO*M1*)?i(qQGM\5L?Qab3Pb9K/G:2)LBpX6#'J1"#&=,=`)^TigA@,F8_IbGs>h
%(6E<j3Q>n'&49Nd-CnNZ_IJ8=!-Pi*_upR.&Qi$o1jtCt*0._",?#_g.X,=tb_6A7f/+:U-s`4F'@TdJQiaGq0iiu?RtOf[?:D4>
%$Tf*.Em-!r$Oku=<S8#<l\+M4!QYhc8,?EsbtIL,m@qqS4:+CeNl&9@4U]\(.%G.k_'U.;d\/!nBu5]R*,)VSba"r@!t>OVR@u[d
%Usl\#.7#pee':kM.^c.`9!b%a%)$<4GNLY<"G2CH&ZMq^%-P,[oYZfY?D)W,,T#)sG*OkB?Qh!cOS$P_k3+^Ia;2STc6V+2l4`e;
%+I[gk0ZR'fbT#.S1uN?p_L)m8_:=7]#daRJJNeT/T3sUnI+Mk)g2Y<)A(h8Ns+Ne,[U@jea)qero*h1<"Mk9,"WFQ%HHj;;%[IDI
%=FM-`ACC>H$\^-,1[sP.)0fl5P@V?.k6/_JCGFiq)_SJS1<V7QCk\DqNO*Z"P;$uIK*Y#,6pQ.D(Z>@^U@>+EfO,!0OsVWJ)H@=b
%H6l$Z"sG"F_O3M8UdIRA1GKmXBd'?h4MXZe@;.leN-&G;2\j<o+cjui^s"s9/FF?L4%,JuPe08Y)mh)#T>JuIDG=hm&Xiu8bHWrL
%=RnF=*b36b//^[i6k:(rM9))qge8o,L5DDil2Rf1FkQDXj=Hg&M2X1a(18FF.0Iup2VFCE!6.!X29TLLDSTGiL"s]_1Y`3)B\Q[5
%K_^kA0QpmK3HipiMd8JgYR_-:WD]r1$d3O$^^]3%.$7=k6N2`cq)r1FY(H9SNqA^'O0P:[b&qb%RBc-?EIG-G._jgdjsRAWi_`)E
%<@R`,P4gNLH4q/1i`_N2LiZF^]7bW1H6XK^&/t_H@kua_\SO!'9JVu,?eT@NN%TXPRF+CO=IJ.MDq,,pKOfQ$Gq=`&Zt';0Kjlu'
%@SX@>9#.eBacn9F)26Ke@1a/1LnUQDT#F*j2AD<`lB>]BO>;^[f[Obq3)seMr4[DW$h$W@&%k\c#=FdsEcp!oV@SS&5=gLil7,Kp
%.`G%'qi)gD7(bmgMC'PY7&3+0.8$6I$%C+PH)tl$@r#4PLIH2(:."j]>^<M.+f'o;kQqh_b6='Pj0V63G(o7C2&Ufo@]r5][8$Ln
%,@[f)o#?`-iJR&ke34QB-_slE<&N$)#N],;`X5:31tG*L2Tk[>3#5_^dF_,G[4*0O-(fb7HoN7q:d^MB;FYQMdU-#AFc-/jf)'P[
%6rJe_'qZAqA#1M&FBKIs&I1eL?gsVQI9J"oW^.k,!!+CU.&7:#nO[P2GU\Lq-lk]<k4(P^&(.IYp0anc//tks)Ae[.?\s[SHhs8O
%SmDQb'nL["TO&5/QW7K,W)j,e'nL["TO&5/[sWaQ`gd/(TY/,A;A_Y+"%Zi#.1@>Q!G#mR+RYc=SspLB8q_rB+uDR[Un*/Sa,M.\
%M@:R>/gN9p0Hd)Q@%`2GI#d/8*0^?<,6Nq)0$-@u8K'%EA-G6#E(O6/=iF.X)F_bXaI%rROJ50+Y$Z]kJV''(b4?[k`5JY$[>1dG
%.;GTmh7>l.4IUi]mP4I6bp/IYgn-=-<EZH`!&_`JmHDAqQ,8nk._Bn,A8YlRG)/]h8ijs6+M5o$qk2f9D,RJ8WEcR18Rm@Y<L@<=
%&6E*^`<+.]KMb0q+bP[pd2U^OW9-NRbcma/i4.jbPrkCm\TO>1bi1pYL32W7;cuQ+#G8m=(=jqY<X-AGBIM@l,&ptT7OnKd4CP2J
%_I!c:@iumP9F6msO=(5#nT>-mI4N.8P?l8RM9K5GR82g&V?`n^,-".ikqT[[1?)]")'B#qJkYm/kWK&UdNos*h-HT9Y`8g:5r=J_
%-uEEEIiQ_*NfIS^W:hHoOQ,RJ`jNFb$]UBar8iOm&Pm>5A]NBal)9Y9>b"W\F6njJN1J@a>YI@3SD2(gGDOR3l/H^`T"8BdiO0TW
%"sUJtO]7E).W%k;i^@$VVcg%f`5MG],N3P`p1$Fl:4"ami_cQMnPUf4OpGpE'N+N\/s/g7(e;,iP=u;(J_KE8Nu/[&r[W7IEPq>-
%.*7d32jAQ!bV^&]'BVY6k*q<>:@(@,9Sl]h'+^f^rY>b;Ur%S"=0gJh_RQ,GQQ)``Y9]0!Cq?,m+`A!uS!$//2+Kc\'0&l4@lQKH
%cf.ThK*./*dm>@4K%t1uYgmDG".4q*+"Uj6);hQ+*bG9gA3UT2\I`((B=$+?nkfn#)7Xk3?lB$DY%9n.17TSV770'Ra:Z3k"Bbg:
%m&P0<#]3er\/C69:_I03KRUdu+D_A.P/)H`*6:`XhW;I8;ZJ-SQ@sC6ej&ZCVt'>oGk#0ViLn7B(\]p^\28g?&eL#f]"]6X"Tm%j
%961Of'1IcbFLI$n0nFeQTZ'Wu3P5(20c0lc3XmkeH6W"2P"W)C^+:e1V-/3?5@*GUTeOXb9`O);<M\M'[5$@11te@oqMtWZ5`&L?
%a/=>JWeX+;mNfJ,0)+IHrsc1_eT8X@1t(]qh!:hYQ3bC)\;@-Y"d3SIYI!<8B%VOYOgL``]RsALZ3k/77>6(&!kFQ4iOb.BT)uSZ
%1D\>VO+?<FPmJm5V=Bq83)7DWOWM$WUemRUWB:Q&5eo-BH$6aK>hI<CEmC@cQ)%6tUGY0>R+l.#2d#\R2[WQ*V/TlNOpO_p$e"'H
%kp!+*:TV"6AJ.'TE0SJV$]'SK*L&Fc&bco>]kW;&dI`"_Q"W<=[aegs6N^G^cFe<oen"Rp:O=N>S;>+*e/?=dM&5J1G76NK'mSm?
%Dl:3`@FE/aYHY9hh*-_P53=J-:/sokgIJO'8#b/.@i9IeYi`Sh#Kf\rQ],V>5`&OMA@/Y>`%$Pbc52M"<CWXX8KGI`[I?.R=cHA2
%a'pc$1!6csm*ZuTkiDBY\XF.pSApe-<(Z-n[k)aP0um4eN"$h>/21^:3c*;/)DYc\Bm0bOfp<l=Mnp6g0<V0W3N?LCi7l&RNT&Ed
%i],r89uIVk@u7N9Lh5'iO##":'qQ6_Co!eXFW"1'@Y<3Ui'_C#@^G\e4as"gbo>2Kn]c+&q^&1&-E)8<G^/jh,,."o,'oIC]Umo[
%,Vt`FNd1f]OVRWUVrDpNf\K)Tg.b*';Qs8(KPmlNB1CpYCM([l-0mB'Mi5um]I"g8f95"^F<#0R$9.[X#_+o0U$rMuNC<-8SIs6f
%a4t8sg.G!DPaE%e)tuon'WmXXU-1pR/WZXNMP*\`c_dIM;j"CYgam>j4ruRC.:+pGh0N[4lm-)\]J_<"9gB<E4JG^5P"rQ)q-9Y6
%(P=:$]O<gb#OO9BK.P5?ADq1&?8pO%FfnWB/"dk"G$q.I57)O>(96<YS]Dt@N@>^=W$]A@-6W^L#B%md\051J'I;6V\NG2fiN&.^
%Z<UPfG"&>qmb:]>0LI.;).F=\.'J"5&eMN&PEV-W(dVG-F?3B/VGMi+5R#7E6h22,8(>t\K%%egB>P]]a^((j5"QmgV0,8\.u?iF
%S*u[(.T/,Un+F%e"dqSHg7L^_kE>&nHcPkThGo^$r4&/7H(H>,_h9jBb&V&6%EQF<R@9GBhK14G)s)3_]h:P'SQOjfj`QljT!54@
%;cY9B0etJd,,o3c$0(-'&()G'ZDU$3[?0C7R>6H>ar!Z6%gam^iY(*k4O[\Y)?c=ee%u+CMZS:2c]EY_SmOtAO"0^M[Aa*8k-4"7
%RDf6V_8kOtUoO&^`?)&?AmP\H+DI\to:4IO9:Tl'du9dYe2+8eD7iR,f])$R3A!p9rChT&;nfBRimYJLmFY=Ze>Z^<\QnZ]>eJqY
%Pbh@j,*WmF5"'GQ"5A4MOo\r32s8B20-9hP=T(MNDV0,cZW9>!Z#Q_0#\k**X_oV)9+BN/Gta#8LM_$(M%"^,[4g(KC@'SV&gZ%8
%PEeNC[+X1D:>^/tU2Dp2"1)hjTKV?t?:?X'`_ti6`Yg%F4@WMa'Q_+RYfTuOb\Z]V/,Ll&.>&"uYlJZ`F`!cE=7^eKpa!UX)FcTq
%$4A5sbcX]C=jM3giY^(52c7$'2Gl*Pm4?QM/C*WfR4TA8F$#;$4,\/AMfUs]o\<3f.N>8QbiA%b;:L*^r(bG'1Epor2UBpMOr<h)
%l0ufN;c2@@S4.Q[Zr$m7W]K%n\]XYg7Sb1;V5Sg]4#eH8:$gZ:llrTe)"OU\AaQN.1T*j(eajd,_WVeb8-XuuEV\Q1BnJT2)?UQk
%NroH`#;uXR.O;CAp',/6RYab`1hEutZ!@I3Rj*`K8!PMR>c%7#*a2D##4U:7?0/8gpo.$[pt_;3b`df"W5`d<jY2a*`KJ7[E%/QG
%Qq:G_)K0knSi;`pEBl[.+MH<VK&0pH6[o#"PrN#:?,posf^ci;0k(XMpqW.lA3?kc=d(m`PCrKV"n=JUnOWo.%aQ`so"5$@m,/dP
%DL172(pP1q6Rh"C+Xnp;'jj)\N7sp1X4T0l_%Y/.h$NC,J?-e@q!gMS<85'kGLjDc@*#XZcDs@I-i4ck_o@WT^KAha`QPpMXj5Q"
%d0ZnLll&:5`^i'.%0!B3lm,P1E",AM3^,o=)R0K34[^MmCml*!=?Yb"NRYcNKN??n<AP4(3NfPZdokn*+3;9<m?uAeN/(;?Q"*Y/
%R#!!sL)6g2`GSA#Z?!f[H;-DCJeeHdZ+_S_^=mpRO(IR$''hn\."*C)dN8-NP7O+pcP:"m+_=.e/kX*?#Z%UXd$$e-*hqnCQ7.*s
%iob%+BWibTn#40NJ@.W$:dXf)a&du5q^<m7DDE,hm@6#JHI(V+TdLIb6H)J4n$&UT$'fq)>fB5NE.7p7g<loE4UX.0>p-)>N@d"(
%^dAqMR0caW\\o9sd+N+Vhg_WB9d@dA"<(Y-D/blZQ52/QUAuhtpJ1d.!RS]r'^2G#Q$ob]-1B??]F.>R7@o_YJWWK"ihQj>r$f\C
%YPA]^b'+g>5c;^/67%YEiZN!u;,G'cAp\++ZsRF6<sH1Gig7dVa8j2kjA9h&9e_>0+q'V!Zj^Hc,@JMS11r+fT2snNA+J9X-em4"
%]L4-#6OTSqh@TMqbLeCemu7'RI\i:JJL,fk=NMXh^FLXo,H"(YX#qV8fq#t=J%&OEdoN"%'qaTa'*=-eWU]*/Q/W3*>cFK2XOI8F
%S_,2C9h3U`iugI:qe.3CGHXTmFXU0"-[lK$T:MbnLoY1*e5;\n[jYX/+DR@eKa6m$l'O;=71nrg_A47n\Q'g6U;`l:+d3kCZf"--
%$RmstEIngKBOOq>/Gs!$52uZ-ambmDE0$=o_bD_55&GO?`[8+BnZanV9b(<%CdU?o'C%PjSVO?=A,eqFS&^l9MX@?0%em#Eo4B'#
%-3M:GWDN2^Cfd0ij=UsG1+[eDD'@$N4V?^[&c':9ODLf\!tiQ9MXZ$dX?T#me5tUa+BEdVYbW,@q1;9l4,q?.VYk0i57PlWr>CF-
%]BJNM0(,sG)9*uNkq?VR8Ah"Y8CR<P:EKFAl434<$R1>m6QqM$K+B50->XLrlX_YA0%k;PN+J'@R.Pa%aM^Sh00W>-D+aT%"pkZ?
%.U@%Xpq8-pjSi&N>VR59r-/H4!r3t*$u(c]f+:"h$%,oJ*/n#H8^8Wj?tInZ>#WWsO-)P(R+WMUeuH"rPCa27<#V)DQD3Ta=:$D'
%V,aZl,)1-q`!VQqLomkL<,4noKK's>"^7VdNZ8mEZFa:F@QJQ$=?J:JQ=jQ]jC=AF)"Z3BM3GSoj8QT/cWnmG8#$M>Wr=us(P``%
%FsP4*H7DLS+Y+n88l\#d;u/QX/s3f":Kots;caab.a)SU?>\W`a\<*UgD%d9ZjHXo8@^\pR3A@sI'BMh\0p[h48FD&6h.KQdQJj\
%6c.TLn@&K(&0CT,-Ao0;;TA7!BB8DhHIFM_,kdbL/*aFLSiH]!Mj$eT[Op6DVWD7tMII*RI#h_IMII*Re*TH+XSY.3j6dbB&MJ4^
%)qQ,m='GHufSLEg1W<+"'0CBBFcIZA,PK;_ge24AVb3R/'1t#*Pq=FU\XGdu.dH]Hp0G"';.hZ@N:u>^11JM.1F!\`CtZj<(F>9;
%j*JkX2s+JA)CV(lg.rX]A+P.sN^+F'2U2bOA;'!cKeU8QlnkZ.foh)t#q%kj1/R$[3uX1Ibij(]*H7FJ*gi\i:7p=F?Q>A0e"L$W
%:U3:`eZ/qP`9RZXPlf'M!MMVHKdYZ=0<QreJmi,ZT^eBeSKALh@V8+,N5^"IYdp`,7+6*;8-VFWM66<5(n3KrD3-\b90M'V0Cu!@
%gj@D93\Z';540s`fYpqThS_%ahNmo)`GtW44'SAjffKTWkFi[STbcgbc:Mcro22$5>+C@OS;1:<LV!!H:m^Kqdf78R%!,_Uj,>uW
%e$AVI.8t!]@NpIZ[Ld[eb)4da7U)99@gmu(+pns^P":J3O?4Kh`2-kGG]*^j=8#:CpJ3JR11fH,/b#UU,*<mGi_/m-ae"U(=-RlJ
%+&D<,R^*Vk\HEsG**7<IMrEcLGT#nKaU4MoGZV0sK/R+YD8;JGiaoJIf,qr)9!s=>30&%pDI6VZI6HigAM+>_^q;Y,'ogZ(R$3+R
%]a<dA)o*Lceg)$f.!o1BIT.YiC+=eAJeD#P3"mKVdN2QaUa.#(b5`76SgoI8*Z:Qu>>cf7^^0.dh#*;N%d7?3AQ24@-s#G\P8_Es
%M^'U'=ABcmWa,2]Ej#uF7^N%S*.C6"0-<BGjb$VTo[sU]:S5/h:-%O9Vf5+'6da?(cV.Y7EmlJBBOuRbDK<:*Em\cFl)kF3i(%<.
%bBTjt27])U26s5of!4>pJBn9#<t_Bo4r3mWadJ`n6ouX<g*U4ep&LL""H77C1qr<'81_CCq'=3eEl1%.@RDCs&W@;,?_dcW68ds.
%(ebom&I2X@Tbf9T6C.]c+rioP6LZ*'&HDjCi)fu4oI8)@RYCVOZVih"+35*tYom&GX=/^&Obl#S01-#T1"G=ICq;a+eKHTBXfRj`
%7c.s;[Bkf3.aeUB"H8[&L&j(L1P\ESV^]hum.<>]MbI=n^s_D719hd;;c\:GW@8<g;,/p47s(R<0UGNT^>OasjCTFLOpj,9*"?>_
%l+)gS@O>;d*/WeH3;1RhP1*^X"!;[P/lWlccSd0O`'c`6Y/[$g0YSW/#1KESiKH--2>jYE[4oj5c6l)B*>gq_E+8sA-M@L6i`StV
%]+K7lBF74@CV%r;b2eRk+sg*2$D1tjG]b<n2fhL><19OsS5G'0WXkXle&p+lPk41jTSkej63QQMP-M!f9P9:`;_3lE*`\=2/<DF,
%jX;%2ac@2QJb^4nlUQh<^D\38#rl6nq0e:dfig:(Z0oXJIRBQKUP+V6Z1B><[E:\NC6k\\RI!Uq8ApTbd\WgU?s,PFSCba236VdW
%+@N`[Yd3b<X!`hECQ$_a`Gg5V>9/X!1q#:Xf>Y&OE'h9_UX.O*]4:/9PuY'rX@_i&"Mf`bDtFZN/_Rp.KeHS+V34[U'983[C.V+b
%:6Te$Yt(,*VCj<c]E<SJ'f/=el6A44nSj,FSM=hq<%X,%]49Rk81>4mO.lMGSKM-`R&"MV>:mnE"<D-T5'/,G.mms-cR_"1Q\gMe
%,%?Cb=<(5&B0BoJko/jHRFLeqaU;e3jYO09Y,^Y_*N*s%<0)e'BuDL3lIcFgr?f2sMMHh&;4?:J@[`WnQ?U6le;%Z":t%;+ELgrY
%%#9YsL_$LC;t1fX'"\atW""plRomU`bKX.?gp<-%;LI`:fU:,f%aF[2/R.>6XWZ'OA^s7Z3H_tRUF2$p@L707_pH=<:XdGn1LY<5
%bGQA[PBbLUj\+DukVBDd,DV&BVKc"p'PV)78]Mau`l</0/<@VMnb'Dhn7r2Ibos!rOh!mFeCQ<J1RRcs.!P$*WYG$&E4!Hc#/_<6
%/l1p2*"ZG\#T9:T"-J*A<,0G=!dQc/cd/MLc\4(K):kJS.L4b@I%Q4>:L[%TJ:JRf#Loe*JM@:Nm&iqH^kirSfTo4rG"f7\;k-ol
%T0L%VT3UX@PN(q!3*UjbG"m$1#JA)gnWiLVHJEXX^<WXhKh\7$8(W&s3tZ*/f/ecHg5$!cZB-(BQ89RgCW_:Ac8A"#r7<_0h.DGu
%Wg7,E3]tY:4F,].+<>Pc3@&gVJoN1<3^$"m\H@W>K1#"BOVt#HHnViOLG9RClR9o.)T7_jqjHCLF<JOjDp;8>VaA-h69bMMZGUl(
%a+q9i/sQq)2&35WNqIHl50id)hkB&kS?VX*/j[/g@D/$,OA!:,6[OHj2#.RH6r<@5PdT*@]Rt)t',$f=f$8=/_IUo]@suDk<@N+)
%06Y#^G.h7N^t`DNqdS1S@b:KdfD?<=ofd'opn_I!A%URok+%!qRBbNF\7ImA_&"U+4LnW<53J&BE`.ai"1BcBj@,b7$BH"gOj[8Q
%PoNIU?[H]_"c"N_aDg0F^JV0;3'jY!,(C'uC'%l'<SFXN#%.Y']U@EUU-^CV6N9Ye\,(3VXU&Z\31@)Yc\S@CQkG6jA<h*B7aFJU
%@%[e@/-`Y5/WO(hU<%:-_n::J/<eqr2LP_/RT-7=&7dQC3VJM)("DkSa]"?QPJ`TT>&:)h\"flHBR=d1ST)7M=$&FnQ/1N]'Zq-Z
%'^m?1gdf4Z%O4a8+`Z`W*mh^^[GlT>j^LW$0X9Cb5(3d>f],P>b*04bO.O$:&$;gR'gQ.P!<IfToA3?\EQb5I;KCr#@UT8^@\.X)
%N"3u\<o=`DE/PI@`<tCZ&rRL7`<tC0"`CRH[oe3nHn0173A85Aa4K7@X),n*k_`6iQ:`Di*WZd4:jf@?5+?p?W_;LQ$6&N().0\"
%.?=*)$d-A-J-eJtacKYj'r['VAHKuqTA!$i[;S-rb]7`1#fd#U=.TkU-Z:<$1j5n]:$>,'D'h2<'BVq4&RJf(7k^\@bT1tB'f/(K
%gE;Xa<e^I].X"dV(%3J1aiU+[peM+m-e/Q*;'B`sim6*UP?(6E2,^eR.O)\Z'EbdE8mO"pek7;5FeHdo+[uB`2,j7I45,rVfkI(!
%mmDpt+ojk;$uhIWXDDlaJI"+E7Np>g\A9j,9[NQPQkA3fPI;J1Q(>\07DNUjc+W:Ap?obp\8605B$ST2TY-NFiA^>%QmWWsVN<]i
%Zmhfq01q_k`qt8#>am$VG$jpR>Q&_hf^9ecqW$*4rMFAsa6iV^UNU;&Jo8.M5F:fSIii%3Gh$T<k]=/f(q+eIHN2k?5AcY9rcd/^
%_N4$UiNV4r)\$#(S#&3.1$JAtkrasCG,O#3FX`)C])/irN.8d4iP-`lqJiXHpS67UL:pHn$1/"Fs1;FF]+&uJ*[Ira]A=Fq9D5>>
%n%.oF?pa!nrKu]#3[Jh(=\pW$Vn6;0:&ADRjqlLS^6fBm/T"R]h:d$.7jBb;U=uJMS)&mMF0so`j_hp\_Gm#o^Vr&2\42KJ*4FQ+
%LVk)`&K-qI3WHIU_o!IriVDp&X7<L#87Qg5F@XBT)oMO0XZRS#c+L"F*KKuCZ^]K`%7ZmNj=2o;N.I3NHZjK(l@W-eDuCZ`\rAfl
%0pR5cNU-;HL[AM[dR7"P31tX\m7o8p9]TM*+c\V1_6)D8@opokQRr&9C9::4ok]H6g6pJDV8h!]IYmkf]/tj.-GU5U=qlC%pI>*N
%$h4&8@CqZ"7Ca>D\FrUtT[JYQ8ZQ2?pA-e<&nbM>I&Zau:O7Ze0]-t4Vco1^1:mU3X0)?K7\SKeZY!hbRU)W?'q3r]S+GOaluFe:
%6F0n'As^D)="&78VqCD2lS'&7YBoS%U"V(3djnD06FA=C]9QFaCoq5`H.BI7\R^GXG>\#4?W'u8<)Q"b7E&8:T5>PH2rI3\ARF/Q
%ajK';Rq]?rdH)0*4O;f2R&c&'qlQ&W4c]cWhJBWUmD&6XNB$7`j?^,[hsO6OS-_<-d]*hYUHF,oah'6G3.j#d6RM7!MOH5GglhIL
%Ve5+*>;OlU2&A8Nh-N%d]P98ma.lBmO,QkF?J+b3oF4/<kr-1h-$X=CB6`<a+%ilo9-<b]*0G5<m2VX<g3En,;=?>J_H/ad'PC^=
%9d%L+g;>>?4Ji+EDc'6.GQ+TAS"i"BemMVKk;:hqS;V,[^NJ>$-t/=lXcj:&FV_'qe@Y,.>c_cK[='upEN*)XrS=VdI<&JWeEi)n
%re&M<@Jp8+rd12m8730l[eZ@JDlr*5lkb`KUVWU/mtR$1[G3n&e:t9*2uVh`Y[sI#k@sHj8:qhteG"8GM,4'o5?f-qk-AuX*-S'O
%4;7a.Jb)'\dIV$L3tlJX(T;ZBBS2_N%H_\l_^+DkU(,\r+NUCGM5TCI9.q7MrV#aM\2DK_=B8Hlk26FC=Wt>5NegVom:dp+,00=e
%X+/L5c<R.MQdqi"+W!?'_M:6l+**AfDM8U(!0b9T>kjBg+*-=--4,Q9A4,+m.8<m`DiA#_H4CU(iAWCe`eE;p&k=JM`eE;p$2e1b
%hfo0crrVtTF',Z8mJ["2TN16!6$dYEd+Htc$\N@X38CII%m&Z-5aOS=-^fB[mJ=<Bl1FtCh7*rt6\Ps7NF"!!kraC1_UP<m*&$cj
%-#tY!mossl`2E>5&k]]=<*73K$e\E\aDu:q$Xb<f$T$HKS&lKgff83)>29XLEife<Ep\M9`o$/iV`!8n\!e8LI_@hj[o_5.$N!t7
%5Kb4A$iAWJJ0cRu2k\]Ps)M;hPe7BfZX/YMec2h$4Nb'SONb7C1JP8OL56ZAp2@N`SeWD;irqqi.nTI27CB,q9"D_aPm_&K(n@rO
%J9LhQ[eaAt@/r=M'Q<dr%'eiZ/5Cc>hn[tG:-_N7<<M8S$H#MFGUX%SL#M..@<gaC(1qgM<Z&-W'S_skn5:*0$H#MFGkoZ)?5<d,
%/l%q_dMS(S\\b]$(8Qks/GE+%M5@\c>dte)cJ<$<8C"Tr)cl%QA74(LXN7a$_m42_O_5Yk%4d_n&8h6>i^MV6rPIu'd:j-#lKsH%
%p-L_kZ!^^XiE5I/<!^MJWEDkI+S53\68gHBN/Co20%MXMV\n#p#H)#9VaZa4Ir);5gYl?R3G_nEh!<%)i((t"RipZ28!_!JER,l!
%Di!IL_I$sJ2(YOBf(BDi)Jm,W/Gj^sp;K''2HOsWo3d9DZ+?E2>T@N`Z0fL=&[b0.\anK]jPU*a4>NqI5TuDj%=,`UF+J#`Jh0OX
%mI(Qh6_"Va<\nAn_of29f!pXU]O"BLcZ6@orD'QJA.e#!p,_ldd7/t@eN9`hg;AF/C#rUpk21QeZ<4h0d9Y&5qN[I=3SUkidjRQ"
%>KL#i(2geemY&7F[Htd&_Sr-QBQPpfX>bM+<%\r)]C9eB`L_NO\,-#p_d(A1=*FOfZ)-=jbM6Q"^U_I^AWm>D"^ETijq%Tp[TI8F
%kHgZpHs2uh;AWcRSHA8]-Jl9UaP_[<\!(<"Xn6cuVq=f/^UW)p!K'n['G[!KmM.0OOA?Lp`<u1QK"iE><#E6n3]+e_o&Wt!=0*NO
%N^\!-$M*;DM\gi->Tk)R9/m\;aHo7R(+[Im6T>i3a:$\2]OUT+Q&VhX5sAKaC&U]6aFQM19(HO4RIajEX"tg[>)SZALl6BuGTPaK
%GBEbo0s(DGCHm##o:d/21[=Fg3j!:k,;<0<b?WV=\E*AKK3$K?r>\,`o.8Kdj^2!A]"RK>He=_H8k^cp_L+H4:+g!LjBbgGpA9!"
%&=ln9Frj9p]5D6(AFYQl,r=`;EcZ97V"']B8U`IBbZ<l1MpjB"V&*EuiTe7D.(*&co#Gl$0#t[gX2H;t3R>l_%9m^.ENqIu\0sW9
%r)^fgEXo5L*Z=8[@?ZZC*!grVGKDg//(6hRoD1DJLL'!-?f=^+c8%L4i%$ekp0@G3FQ!;fd$9+qLYC%m@g4G)6r;18"DJV0o]`;l
%l+)E"S/eR9=)A_T4J9DZ&dW4=j*n$N[JT,tbZRB4YYiR%Ri0fO3j&.%m>m+ZM]-H4`5OKO7AFb\m7O[HZ<PaL"duJ&R6=kN1=HVC
%[RsL7/i5P@<#f-U][O'.#Q&dA?s#aa5P9V\V71c@%]:mAm(AF7%n:]"7FHnS,AVBLj=TS;$4Z1"oNHoMSkk1(3Rsc^4D?Y`:XWNt
%BTg?\7`'eAEkqF-^A2&EcKDeS!P`[pR<,Z104o'+*Z%B[kke]poNg1-Fj\lkY5,TbmiCR'ns"!2SAi`=Qb>L\fiq]3qQ5rV4\l3%
%^"I34gOJCSAT?;?)'bTPrH:-O2O;\lXno8ja)e6B>u];Da=;>b`8+ct1M2\R1B4(PBhsmjC2dR`+_r]NYe%McSuL7RN/gE!H6-!Y
%,4hOteS053oc.272X6jQb?c77?-0[V7b'U#eGmcZG(=7]omT[&bAo4q\KCPmEpTT>4ireO;Q;ghJ]ISR60d;"ENXS-IYO4i?`8+p
%2JC<gWgDP'E1YpMeT!>YVUO4_6:OBG%p[/Qb7'<3q8IFaG3HMKj,r^UbM\cS1j47Mg2;pn,8XVdr='.](-1>K*K""D\T=?`3NN?"
%IEps<Jn!"?F)LQ=_l;^3Cp#c:F/7KtS9pGXkkblbYoI&rY;b424SF8eED^-=U2;O;Ceq>'X>n"Fg$>7Mp,]m>*.G5Go?Eit3<eTh
%d00^:.l^nPq,W4@!QVMU(,Y-Q*7&4:d<0Z$i['%mXkc+E7&OFFMqJWYd&tW27\9+6"bri6CIFbr8J\flM/MEh`*k1RJPe2_E]<0R
%Fu.b7@m&Y+Jq[\2WE"HXq$uUn[07?s^InJLloLE0%ElKMe-.kI2VtA1im%-2hIJ*]9(T`dLHuH*s5lE%RcR`fc!AgD].XF_^f+Wu
%j/d;5?#cD-MC9I;&Ar"$+8oQ,:AMX.lLfJ;Ah:Q>_Tp\hr:Yt9@Z7Eq]/[40#`AO;6+Z]Mi54k3ENU-kOo/n#2j>^#jAai0*6<En
%j0/jqEaG!J3%p_)]f;/G^FL:*;$fFGV>"G:9=/L[;Ok[NNjU:pJVn<=:*'"LXoV7t-o>rqlRY@[((Nck:lV<9mmX0E&ZTh'!5:E/
%llrKCkAumDlDOm02DXH/\6>Fh.<Msa='K9BD9faS/h"HO^:*mc*P!)nm#+Z`@e%RYeu\T)P8l)Q$]E$AFe-CDZ'8);])WV+4DcJt
%)G@.&Y1fC!//j42A(a>KY\4^dNP_EpN"ulV[Li2fd+N'dN3+([_fd#?h0JIs[[?j6e[K[+KP`WSMe2.oeXZYoV'CbiZZ=)q%7gB1
%$a_Tf.r3,G==\YPeo949"%r1;<AWAU$XY060$[H6_ao\j1m*jV/\RjU3*Ds%pBl?;m.t#uOAP.fbL(u0hcmhWr&=8]*20rt^:.d(
%0?51MlJD*2Hfo_eEhVt;$=BLr'ae<An6KjacXn-]UQUE$QGpb.nc'!%H[`+Wdj8)deh9Afncdc1?SAcKfb``i9-%("XIY7^[=$gY
%m4;kAUC3lIk97,kn*"^s8G&,o*u/U.d<&ABY=/T:?QeKra"C1BYMZ,<>_Fs[(P$/cjj9GtB7;LA^T$gni%'3I9!2T)p5+nV?sr)D
%JU;YRj/Pdr/J%h44G!Mi:Z0YrXAoip/+1^,Z*7l&pIqXl+,6&9W0Z<_HQgbO?4O8E)9J;E0h^saH^hpl<&q%(]<0A%X4(hEZaYm#
%ZDdI#3S]._Dr:=9$^N^$p>D`FDmYO/h;QQRa\%F1XX$eYm%^0I3."?`@id$G1+kEt=aINJ_[Nq.D#LjR`T7C)=:IZh@q8UD;-35i
%g6^8XB=[hBT#3coEPntb1q*$-/;Kp6AQW'+`a&-<"*2VorI42p:Y["&>LZd;(s68?Nu[F:Xpt=FJ^`:(WAg=6@JfLUE]).RW)i"f
%enW[Pc!O<mB"'F]IpqCs#t1g8`]T^rZ<W<&7^q!o6[k$7k]ep1qB.LX9'/Q"X4-LFl8^c\CXbG*Qb>NY;(5WaeL3!SamHJGE^:&(
%Dc'6.GQ+TAS"htD(l%^4:2%Ia/uhM?rDr7aEm1BYG,LNW.)*#qc(a'3+6T*`GL!5n(LTV]oaA$okljmo)Aah8,u8#O`I+r-OXRbp
%@G*#_T#5BWEhOn@M\V+ICdM1@U+D/_4O;5T("'AIYp_W*jbh!Nj<CVcO%$SjGbB&=@Su\QVMIYi@SqT0[(2:'./JE9(*sb1=aIM_
%`1ee5U+TnPQA3.[e6%r?1q*$-llsECjCui<bkcU2BiZsc-J)@k@Wj>D/6D`,XBZ?D`CR)eNZ5#T&Ed5T7FpB`m:o2hrL#Rugn"08
%F3j1AY#U^"H#/#3ZM2[**i?H/p9a[[=j`,qhKm=]B*q-&CQ'md;<o$hdH0SDK$b<lY$c@ekcP(bF`"V=D+]OQhq@eTm]0Z<$VD:'
%60mk7q[fN]eR's-n`kdVo@RtcSIrNKVB)Or=#G>OX]!dn%1Z#aleVC<Ygh;'-Id%dO!XL8V;CID&(h$C=a,2*c<YZ82%DEk^3d1c
%jqWJ;,cbtr9q+sDCr)ncic"$`0s$P@C%T>S0MfmiX7*CPK)T_9pi!&fJD'G)g\[mAs5B2E$bF#h8Tu-r-jLPsd#?Xq+.mXY16Yab
%NA&-fK]ute^X;k$+90=[T#%<HnD-=UY0tMAkHA'gGmSqIbHcS56HNGSW$.=2/9%pFA@S3kZU/6LE"0i<Bk?&,4U9h$=8+Nn5A7WG
%i!7.RD>IXs%h:eYo59*CS$O('4*qYkA1_#>m$/W$gUC4q!M2HdrkFX@4F\]3_S+-aj&hn,rFTc8Na8^][Vjai6.:8KAAe$K*C!Z/
%B:6N.k';9YlpE@!>PQ^k\nfq6%C`LPNd^nlFB4i8IG7j>ErGpTe_Mm]m?G>pNX6dYr!/h_fmt4r%6iP9KQl&DHBr;UL!#GE)4HIH
%lro^-2"-g'UEQVKVJhmtPAUF>iA\?AgQ#&OOK:VMVeWn/\b1V#!.-+B@Q#4ZWcqXa@>d!\CCaY0>/"e9e/D]gWAUg_hr2f+FN\iQ
%?*S_cSb8pmYhld\2dMufMk7=mkZJh3s'oQ%pS(<1Cc/MEII2rnM<lpZ/rm"cErXj$YgNuIQ0rVfR.hUN%q&Muq%l/c56,dSMq2]3
%dnH:=E"R(ZR(JZ$Q5EtL*QsE[&^LBcd'jModjdM0!4OJ4%s6!Oqlag$olRj^YVdAf1,1\#T1^0X@Jj4A"8.CX@-"!uf88etKj`G)
%&$!Go('qeO1tDcEA$B?D(BY%b$n*B=So'r<US"ipH%sU.8oYtHo,Z.3gpem`$4@7a(mZZ[1E9],YoT:,HQJeFAJ`N6q85UX/kXMs
%+,_kX=jTQ>N,AY^''Ib]9BQl$m$TPZfNOnn=I*F[#$&Z7PlbFuD2$DS5a3PSFOS6=EKn!2E!7\8Z*_E+Z!m7&@YPVA(/-W=BZW%]
%hr>HXJ21hZqNalS2,tL;>U[g=;h[4s.Q",!".R:<1G,CJ+s`g4l89gn;j?FT=I;O2Be^oaaFSgY?25fVJSquF?nF[7%^_O4P6W>,
%H*W/COdF<"ojsi3.aju'S#Qk*6GaI:V\<KQ^5r(adt!9Ha91Q@IaC(568*,)7YncA-si-p6t>1hqf,Va969<+QpDk_n7#bF@>*Vk
%O&;+$`DVI!U:(q4i8pD00T[PZeT@(VSeX/?Glk>`72eX#=c\On0IC/uLnf3:Ymp&XfU+"3;\MN2=@iFc>R--DTi=N6'P^&L_'=D,
%2Kd9L9H#-[EtbcL[sX23Q-gF%e3]lgEN&f&YWUP2?*&S>6Qn@c;E=*rP:"O"'-E'>LE;%jHSKm:*F$!8L>ZlPo1c4lVfuFn],Z8X
%Y=.K66tpIrR-fMCE3[M;n380p2M7+29u]=5[3p6dO42KKE@r%sfV4OJYXM,IZ==d_5/hq>O`K;d;)E(TR%kS6WPOZn;d9tAQd$>1
%OXCq^37oL<A6Bt:MFPN#2c)G]BHo$#1P#?V:<9JgKeSs]XAB^e=E,LQj87=7#=ue<"?R>CB>I,``276LLnY<J%D'j):alg_W^jAs
%`.fdE]S@NOV&:"[Z`]LG+i-2b^2-0!JiRe`'Rpn1>`jKH_7P7)5/AguR#4.ZENe"5;59Nn&E=m&g^.>OZ:)#MNH$JnF^6=)JX80$
%iq(jaJfsfDotV,SZ1,1mmWpiDQ8&Wt>uF,o7[uN`!![9pfr1CQ>%0h/]RG0YMdl&c;]p.e4Jbu-FGT_o/g0]FROF5"OfW2(]GWZF
%g;BhUBPbNh6o;V:+*k#rG(('0.<HV?==J.U1/jK%5H,N%2ocn/:n);uhccUcR3_/nh/PSI)Zj@#Jns)!f1?T%HF"&iE@MXs'dtVK
%[hZooQ.2I%BB+Ef*XpAfU5l:"XIq?fSop%k\Gbmd?E\uMrBJioOSX.K*I-&5]uC?0=]F]Ske:iEGJtAs60#]d(D_ClppW#-T'RqY
%bgKYd]8E$*>p_RsY3eu,b?`k.]A=Rpra"t'2J,#5+>a!NdsEQ[1J%MWnm/ZTVINP;a-B"ukgJkL0[Dpb<$O9tSY^"9Y2,lr?`2L8
%C<[/<TUL\<o-B3#mtdrlf5&"o`k#I5bH[9PX-%%:(I%VlB+"D4cHd7[mrAt"[^.\,%"$#f_#DWE7.1TMBR*&b$B-;rV>cL#ZTWZY
%R,;2AM`$b)qu82JIBNVu+*?4rMo3QdFl1`m2EXTUhmVg@.1Mme\jY*DG=hT'\mq%3*u(VUc'l1^O]>j^R\fnq=13M$S_:/nLP\r0
%PiK[uha6(:d<&d@-HKHTMc3@0'?1jG52\\7Y;`RhHbCSqN>J_qiTkqSa8VZ0RIQ3$#$;GWAAP9SDq&VV#I4>\[hSKpD@Po+J6[/o
%N;q(d\^KP^P?]rBjJK+;0kJ6tX49UAI'46%C@_,WWF's7)P2nBV76-6Ygm[l+"`j4]kn4)SWR/=%K1&i/pc1h*6u-+mIM.Ccrg@]
%A]*!n@bNa?CmXo-)N0OjR9]`O)/]6J<U#+nWNMS`8I;WYkbJo8?p_94XaXubh\rkV,t0WA4['K](VZhl%n?5E<b\UY1--"g1!PJI
%.Ci4=c"<Dg$r2+@VmGjWSb=3)h/Rj^`4rX'Po@>2?QBaTZ?akNa5\(#/HqnX:Ngj(ROob%R9uugLO6^\^KG=02?5%uZkne3X9*Nq
%+I(;O(DQcgN;GoU-Q>:Vgk1&kCrVHIj;ApV>qH^_dn>+'@$m?^C!b'r`l/ig[UHr-*LtXV\Eb3CUYRI1iXVN)J$n5KHF+.B?QZ_L
%W\#thNT^".-hS.Gdm9JskuK-4U-p3crnjj+:@!DI;Q\Unf([mhp.ukmh(_&k<`TcSV;D0_51inl7*t>]:2d>mH.t@tFU%A!P<@hV
%!Y:Pf,_+\8SZ"bb$#=8NKqIearccfV%oGP!"u%>.cWgE]1t=0pO%rHC[=cn___uVmlb?[&'=99J-?ug7>HRn_Ut*7$p)h31m35K0
%rGU?2PF!2SaD<;8c1qV8QT([#p2fIelgIk%UV^2K?SWRf41O$jBe\oJNhe(1e#foV<]Att$D'_^:.KEPH`.nU*;l6k9j-QgJI!TF
%HO;`K[lR=M6b!f:Xjqo)*RN-c+@G:>d;.5na>+F>eJpY1Nd0k`dKg0JUe""aaAH,?mge(ukhu;FN.^?6mP]#^[Ym_\3<ml/IFIDe
%:LIq3OlV!Gh%-/S7%%pTN>%ZNM1r,49j:M\?p<(SpVEi<3=uq0-g3<dUS/&6]md<<bSZesh,h9unon/3g^C&N^q%Y;C6h6l%T(p6
%0"o':LRc_.9u[L:b@H(T@pBFrlj,7S;EB5/nnpo'Us,fV7T\]]fBEICY4BbR0CJ^8]1ZYj)mkA5-[gHsC:6XQb)K>=JLW\i+sa-&
%,qb?pJ7KQSEKsEVcg*DRW$Fbk.S-9K:82YSOsh8+-K":+B>bZ_,Yj[&2<PD&$-o<BCETqM`!f&I1Zb$Jj(-3gNO*q#Rohi8^3[B,
%ZhlDfOgE)tPs9-$B2)A,`U:`lg>*ja^%,KVG[*b)OJHhU/(FJE#KK?r4_0VerV\KM#mJhGR/a\Q58oLBf/'Fj/:KEh_8IO04A_sN
%fOb(E.JLmJT2e'cD"P:m7RJNY<#1R\q&jm\0ItFE4%S2/S!`88)QAPF#oS(;NS^`Vc-c/'./rMRa^\lE*,nmL%t^P4afHEl1).>'
%[1(31_g8Z>=*_bE9gPr5&;=I-DEU-m7n6$RT@R_<$[R"fNlc"'\ugUr4>pnG;9.02dg6F<m^7%@:FU+p4,!Uh)i2(p'3_=W^e)L%
%4"("*?Hg<-bj<&Qhofa8/+tql5WQt,WY@4H'r_qh;0E1@G$NisdRm@F:2:kO\iVm*:&&,$jmP*TG$Hr%`Um^L0!_?-kZt]F.#bX8
%c"H\$@+Zne>Pn(jB1N*#-#e!M\X8rN;qT!P]I-DnND;E^/P_`j94`"b3+jSgTCdECBbV)GpjIE?cdL"NOZ?I(2dp+>-5XbR4pFi\
%NkOi7jb[QK2Vf6>`hYZ'7$^t%e`j2Fq%HYI%B'hpc:nW_Or^DD6VsX&Om46Y5mSJM,a2fDN+)kogR:C/=GN]V)6[Zt='%9M%2-k8
%is0hQ\nN?qQH2@66^(u?>D4F;,o&t:PUW$)\7TO'53T")NpNpd]JJWUXBfbZh8tqe5%%K0>!k@LZGL3$AWb-U?DlX>R[1MA/GK">
%%+UQo0XFj^Y!D(`*GJ:tPgl6A,so%g!*4lgrr5]h#--]L=\tc_%2U];D+e6-:9(t6^Se:`<`GhEV<uK2r]R$IK>pK\naF\J619!^
%-SnC7[Q=diApS0H;bA:>g$5<.A30UcN/Xsd+D8hW_!oY&"Tmp!gV_^`&IoA?b(`%k!J"!4ode"cZ3s)'%-S#(#bSN;58DLBSeL&E
%mI#FAg:/D*N?YALh\g9(HhI@\J$HnjFmV-bK@GuYbdKb$2Q#F]QAI,oK=$%X6'0,u@?tXJs#ZJl`Ar:_6]$^J'WNk)[<La"Ep5r,
%Y>jc:LS,E4=kirFHL&c!dbi%i\;'`Uq/_jhJP6?^@e4J\=k"8\DRYrW>65qX=ZdBTUnk866X&0jVA+iV-,mY[DK;.Sc'`-<aQi4r
%;KY%;eM*BE>.OdE?E&,ZVXjo6.EYV2:Qh*$[-PV4\HYRk'9Ie$UFB0<[VA9OI8I-DK3"&AOi\N.B>)!V^]H8]A\2/2q/?VH<peN=
%8_E6)^VB.6%6s:k=pJ__bV58!>&9AWCB(KffkU3S>>st"%72Pb*C2PHbdcJPrU8<1JEgtoUEDG\CYTh;0[0khWb_.\Fge:^EqnM5
%OO7@^^'S(FHHgn:c!7F7.CRi=2T8=2(2I$aHdioAJT=5#.Z;]$g-$qE@Y*%E8S:]=!dmo7N]UFmmMkLu;;8<,C)UniSj)i6.b(mu
%lh.GaO'Z2nI/Enu#<+R++7D<JYJ4BS2uAYs&+:N\00b@Ihc[QgC"LO\X3S=)2<W,qc$,3j^9es;Hh$4;bK^$biC5]bV0>YCX=K_t
%W;`_:gsN9BDL<tlg:VpuA?\(=DVTs#Ci6nqg_[Mm%E!fGDdI8:[p%OOp4J-[C:S`P@-h2QRX`-_h.h'!T)7dBYkmBqBRO(!'--aQ
%%"KsbLUS?d=%6';])!TJdCJcJDH#BCT'^*TG1H9[h=khOIgL9JjnFu-WogqfFn>T0oQBc^TR;.!HKX!1>'o&[LYGXT7Gi;rO/i(a
%5Ib-7Zh*_DIX!iR*4hd77#u`1?>\mZIW""lFQ3HR#V&!9Hoq,SK2:*K<hD:B?4PT#+'4*^oda<KM3%>l#]A]&=M*Cf2=*8;Ps]>2
%j*ksl]RDqiFm&Yhc,u#i;5H.]p$hpd.u,('7f<TW[;X[j?Q?@Ule:1+gM^HtI]r_;=YoDLHZWc2J,@D;Gd2\q-T9oFk/O_p'5liH
%]`5P\F;m0!Da/KWES!AQnt>B]G6e"Wcu2%sD]dfaAW_u;Zb_"P3VQ"drEsBbHgSu33Xi=no"j&VSQ=B_[uOT1rd&R$Zh!bfPn18a
%^5Z>H<1eV_XupeV]l1CK^MeS8BC&q"9'&8'?@sRfFDbC#@JT8;E8G]AWud!c2k>(dT^S@'2#Za*Qdr_@qq%Ud[m0QU2@f`UNColq
%E#WZ_c_hQWF8KBfT7=HPU%Y#<YM?+*B;HJq),Gg85AIYL5-3QpWfIW2n:Ehd\A-Ghn`h'QVQ;M:pH#\#D'2pT9NL+f>QoQC_->.6
%ZKOCIE`h.om]Nu&O"BIXo:loa<.E]+mb`HlZW=9e\/IDTn)!hDf06nV?<>"GlMbu(kN:*opC?+>U%R$_0'gk[:@hD$=24\tZp"\t
%U[!mN]9W(#kO-@hn[4"JZ@>N&5(*.]Fl,*(nI<2!T?#91f.V#)O/b..cWT^m^1L:D8RQd@IWPD6qta+>Ukat3hqZj%rYb&b)ihoW
%Qg.hP-cBD?lsCMsD8Qd.?,<pL[85%_#KHN8O/cCUA^_nc\GuMV<!=2NFm!r#o=q-B/(qJui/5?YjR_SS0VX$5eu2mIm)A!mpR+cu
%F8tsU`qO.`s*6WOmdGNYDI39bT@G4?,L5MThhp!fTA6Lf3cC'o[pPApQsO2Br7*$(ZX%>jTl.a63kc)`]5k5uE*+'h)i]&["8A#L
%+[$<>:HIqXL&^tY[XMl8cPdT!W:de)[g@4a2K&](H0A>I(OmH:eX*Qkq&]Rtm_e+b)4L*JH9"_a_l`.b<bEYWg7O>Y%j-;AeS&sO
%TO!QUW)g=^crkksSp4%6J+ERKh6hS'qoPu0a09h/G.R-h_9V#[X&-h-gTl?ng7@(N,J(VWILb6&+5VOk^0V>@gFj$slb$BV^[]6n
%qXtC:9<>i,pdB(C\ARpA4(bjFnDGP^qsW&ulgR:2mTO+^b]c3p]CWSnrTL??-ghbn"h[R"U%_6m+!.PT[%mMZoehHRIsQIBY'(2o
%(56nsg>8d:p>G+h=Rr8:7=nhb\d)'Jf(N2Mn,)L3Vh9EUhi0.0W/j!3KC/-R.f<@4pqD%R8Ylhu^:so%nD\bmIi@\YgS5c>rfo5`
%:P3SG2uAS]f@c7b'D;=o`n.BMES]gN/,J,]PIGjJrV2N3\99CNT)J>tLOW)XiSQTKHD>k_b(%*Nn.<<\"duQ"Y0\Q+%:,c9=h\&O
%=k=b5bEFOSQ[[JV*AsnOo:,^pJ'iaFi2%=,b<ZCeohFiLg;f!Hhj`R_I>=q5KjR""<,Y,=A2Sl9L>R-%&5WPL%:@nG,3o7_D=-p>
%G\Mp1fAZ&mOQG:CGki>t\"P.R0%ek9\"SP@hdGbgeDSg;&7.Qen/G9fnu$]+!:2"4*W1J"TmFH+At;D>;gYY?S@Fo!+l7e(V;-P`
%8rNl''.T\=qfLj5]56qD:o1e0gJ"_5<?fgt;"u/,g]:d)YMQ3\&ri[@,hb3.\5/GuLb"U*=MJ<fihjW'dV["&n*1EQQL$La'iI?1
%k+_V-]M2X+eYb1,E'])MSp6[O<idj:(DCoG)K@dP@=4Pa8fsg+l@5Y/'@os$)g3NemrP=TcT"E-h+TWqad-V"W%ZG,2J&iMW0tcT
%=6P@i8YtA?MRX<B$Yp20/LK>B>qjiYTLb=bfW?m#\3Fb'(0*qP<:31\&@^Wn;1+)]iC@h>ga@QdH?ef[.1P-`L^`fj'FM]0M!='U
%eS:fh-P:WUTeM'ndWmqUE\O.#D(>HKEZlQ%L!muNEIsTWIpol[n&GOV\H)2g01gtG/(f.I]F23*2K,sG5Vq(P</K`B?'+4S0;@ng
%s10"P^/[AH>'p!+!D(eF!kbNSD19"cm\&#-[VI9PTC.=QoK755!78@RL&_h@L1-gIB;=4FZG$EkChG8?.Z/QAWVW]Gl[)6$_^=2/
%S;,`)WigP24oBCdJKhHOS*t9sL"0eu`E/5)WS=p%T3ap:]m9?XouUD39(;b^m;Cq8qA6(0jp@3dk5BGscg%jk=6tTp$JI26do1cd
%\9Cbdh5\.Z[.S8MmG>L'88S@OC$0-5p%7A_CeZ81#ks_'If&)hN=W+.W;G8#mb<ghg=%0l_J*Waq56RSE18Y8HtjX&D=f2_WqGf?
%&"ite4,Rc6W3+g7DeOIc]&k&?Bg#sFd((Hfq1leH;88Oa.\S7N@<B9XV(>W_noRkcmMOepP>sn"c#qolD*>)j^DUkFD/Xh,2Hfo[
%@BDGI5<hrqDQ.,$a!ReAIe[>lZ?UT\Lr7j"H4]Nm,\ZPElG<>A7uU:$Qp5r6o+)qH_DJk&F0+Q=KeIEO4AC=>f8M3(j1gE>a(s+L
%?&aGNM^CGnBUIt$q1qkNIX&(<:PH/jUT-T%O?O.9cGA[GX,63VpRW8gCL$C+ap$_ZgTRshD5Xt[rcu\sH0+9(b]9'-2:+P=RU5"n
%Lm@fMj86iu/c8V\f0&J7g9\ir1Lagmq1Z:TVq@$A\afU$59HNqH$EJT^cg1J?3f5GRm2GO*qYH:GF*_9;=7]&qt\(^aCp9'G-:;?
%+!f*XST=aeIV5eBO/]Y:B"rijcFWc@_]pXE6[Q31*S%KR[dR:hEdPjjYA:u?POM.WNC$@So55Zun(0<KdEg\OJ)g@9r*]i4K0RQH
%J=@9sDRHia:]B."4tkgMfXl@kcKEbtS#j4t\2BnpC"&16l0(b$nB9p?TSi1*-JDIK*Zi#-I?h=Xf"RChLMu.6n_eHcK9V'Z[<;;i
%X0C%[oh,,Pk8V3B_`(T_l=!M)*<!NF,NAaeqbd!&^NLh/hE1sRs7jj-e>*O$\B]Bma(HQ0q0-2[r=WMsAo+@bkKAE/nqh(N.#L`/
%'EkaSnrn2F'k^3M^D$;6Z_fHdJ^d@o.g%U'n^4`[9SGG"d0OLPO"8O<kp"O=Th`)/@CpRT\H:79H21aG\8&QGqnuiKDt.$rr-8^P
%i8F1gcUWt\(s!Yk^tUq2?ks(lL)lX##CfbJbEm(sV%90j#MRYQO7*_ui%h?Vmob(B/F5!m1q;/_m3`FY==S,ASp\'\lr7;0=3GNO
%l^RWT*OTAh(/l;2#@DuOp1*$0D13h'epBCar4AM(EG=3_8S3\.h&U+^W-A!m6/`7VB^pIY%h24ppZhA5]oC2/UX0'miOl<WD;9RB
%hsDNmE/;<1E2R_q(p+%tUU<>"m>[<*[Cs3+!PEephg9LMdB;m(>lU4F2^DcpHTTi_DF_<?Y.os>[t5clg\9^=$\INk3k0>9_s%,W
%k--40ABbTGm[Mr<jC,pI\\GT+?h[(,Rp4GAE;a,/,^%^c\p*sMFRu]<+b2&UWFCDp[i[_^eZ:ZirB'POTnR8t+?6NRJE_I=9)NYg
%nEs`NgNQL[9DK=BnF:(WT$;2C5=6H8qZZ+m?E(&6/j&=&8S!6oDa/LGHtntFcHj*A``SPPp,*bX,FF^"T:^P22'-&4X3[DEhY+F]
%rJ3?:cX-OBXIRt&do*%@k>d;`a*T\B7!N`"9d&Y95q[+qkO.<kqu(^^NqA0c*-l8-++JEOh@8g!?_8\(.j'2C*S,#`,3)tuB&gcd
%"Wd2coT?%OT+/6?0[H<\j(j^jliu:dn*3Jk)D@'^?FdW2++=MW0UJgnK=<q35?1h2.s;_Jm>G2"qdlP.H1/Ys2Vc=N@%+3*-g6Q7
%)oFl9);7$?:I4`sXe4#>W%h-4jl$<^jQ0i_!Bo])0*tO%oMhNk,b[2!re,U)%Q9m7eW8[YCHZ=DHY5iXX9U)N7urZgmlrp['th0U
%r-iMOL-797HR+/\q_na.*s9WTYX>$fM(6?n"*du+NN-29NU\b.G;ag64&98TC`LmqR+PGMST/_IG=*tGF7fn@%Jpl^pVXmnW.76"
%hl.UL__#<F4`7<SIs>@P^j%r>h7i!4dn9`1n?RMK)h-OhIs!_EbhMS2J*YdcY=aG0-(EL)a%kFA%*eD3GbkSu_p@`8rq.WZ<!r$l
%`Wu&dD7%#o*G3ZXK+dQ#n=Ek9UIsb-63-`e!+4*Ve\?T?;hq`b3N=-*q=5?c->STE_mt%WclPA47`^^fgPscGUJZI5o%cgoX\[N!
%Zp-cM:8<.i^HQ"9\?#/ieNVL\nISO[a7%Pk%nrblmIf>flMaPf*#Ask\c8J:qhPq_&.SB*EG$?V'&sDl]-"]R2,='Np?j^RQL7rW
%Ts^H,p"pf9-fkjCNSr8/iN?9-E3:/ak3uD/Gh[XLXmPNE4rD$DA?j_`f-";)2mpY\9eSZY[)&;/A/bbuF5pa]0N8P\g%dFMGoar!
%;LN_6?d$*ArFtmb<JFDe_fo-5YTN8ILt8.^p1)X1[jF7Ro1\i\p"omso3JCSlCV7Fp4GjVeEM6=G/'1>B)V:_b^U"^`F-CUoI0j:
%]4%Vk])V0D@-c(8<reQ'Q`:JdK4BE>+0KWYK=b2L"l"AOqbabrLRRb+'rjmbB@U6q5PX;%]_C,$;t\2m3#$i)+P>AXp-Bnh(JK.\
%+5Zr]c1KSC>4Z>+,d[=,7C5.hZ6'1I\E:'/U"]RTIeaJ?5</b5ru$h?OIbb`kUPmJE1npTdC7s_<'4oBlbPQZ&ZEKjGgcKqm<X(i
%.aZgsEol[U%mXOoH<*5j![?q?c:8ml$f/kTWibj1>PkTgQlhH`,72^qGQ"&#IHXm68bVZcVbDjRR+g"j$Ek^1^-4SlOTqRD"#Uh#
%5cq/!3F;<'@AdArKKjp%D-!8eh[HR3f%)%j"eKVGhg&CdJkhkmk>lGErTRm5lXqGn0Rk&k<X(msIn&6$GM:*M[st6bH2j"L#KCAb
%&QKaiH3uo#)\!,Fnr'<?L5;b\D!]r(okeU]IK*n!"5JB::+'Op)&ekj/-.imRWe<@eVH(jga?0niUc#\BX^pSX5mnM=rlC=msVg]
%9fOk%AEM.>$#IP[#M+kR4^\6Yr,1FUVN!T=:rM+ZHM@F!:)>tjW7fD-df-:KpY89(-V.'`6>tHSgq<[,r!&C,s%hlEB6D(RGR1>*
%aW5K2]dMXbeZp&D2l8]VS=fZXVsR3J2*%[PiU;frIqW1"$q<rkjXg;_84Nqr%L.Tr@'4A%C:0aPSSm5G9_cg.gYZ1]c?cLN,U.-Y
%!R3Z$<b:BsEt<'T*:MAFlJMQl\,YF#kBG8Oo=](Wr9j0cJ,Ip_s6eY5YKXRZ6"Mg/`7$!\Pj\%i?al*qmEa\*N8$;@^FoOes(hGs
%jkYE6mqIh0aA;j$YQ+>YhuBM?kM857I.+Q??iG+R`h.`63</b$5PYM22W'"b[f%U[^AYh!Gl$=tnEYR3F!o3-^O5Q5cq_:UPO5":
%F6T=rr8%C#mi2;srEhehpt(9kid%a'8:9U<5C5aK&U_k$gtfR=d7<YTqcc;[#L_muIspk\?i<\9^5md:ikp2*r7qm5nBl0gr?HB)
%dP1]95JhpMfC++^l"f?b[pSLf7NJHb?GBb&rUd5bUEBEFJ+SYC5(%eYDg:@;O#l5^qXHP-$2R=Zo4Qt!8pgT-+$BGTqMUtpo%e^1
%ro-#GpU0F$fDC%--h#s-p[@#7qnI`ar7ugJen<leFn`3a^\9D]natYTO8D_%n/q+dYkds=n+XTo2>Nrl*aX?g]6Abuc<o(Fo4P7A
%CENNSP7onK55WO\IcL=O^\D0JNq)Q#?gL"&lZHG65PsV.hp9\o4(R&@Ie<#7Ji`OE?UirJr:!%"cu7e?pNPMBj.4fjr;/G5Emk9,
%o94\&dJ)OJmpkpEh`LlhD1BRGhtrlbrT*Qu\UEXB7lB5nlHaYPo>g<Lis1)0rXXM*J+CGMMgg0JYIfa$)tc:rJ%`FP`8"%)hm_RV
%.>aslr1CdG"7s5'ooo-bh`q%4qe,p%4(#Ypnb_5Akg-urIeiQ0J"dsgT*B64;s`>SOi9EW2t`M5s*fAD^%m>r`mi&Di2>t:!t*iT
%r,2Jio;D+_gPac,rq.oc=D.EV0CRcrS+iQRjdZ75?iSfgQ@JqZ><i,TO8o$ji)PP9r"&V0r;'L`hu1a-^U*[uB5d0Es)292bPnu#
%rKh:ks*+L(nXI;mrf@)*m#(PLs06Lghgb10s8)V2rLa,Yn!l0n1DAZ@!^%.fn43e3L]7+u:S5<]b>^*T1-31/m79gJ85p6PVBr9C
%:'W7:c[><"Vk8E(N;(qBSoBk?s,2!.1[68WQ9TfdrSLGJKQj!3I`BFYh]Ah5>Wd5JDa/R>m.\8En]Bfec1n-4*'Zojf,e$3U9F&t
%+2)sqn71N$52HP0mE\"Hp?IiSDn^N>hYjb(C*-eX3.9u7k>'B0-(A^X!PCfSdC"Y/Yqi4)o+/1*PYpl%EW+rmIRT<%GR^>MXh^YV
%i,;IGhL#8/5F^NeI'L(1WRCQcji7'iCJUa9Mm$nhBj5FKJ$!kkFT9nf-(QIVY&DG7;+c&XiB`WQ7t:=)rdEsd,icup;NJ(/>7-RV
%<uE"&*A9I21)O/D*&_qG1tu9A";gG_hQ<#Y]>o3gg#;*g'<DkIWJAtKKf,$)JkK>Qhg+4oDdG<L6$k\A"o%=S)"d/:(Oo$tU[Lc0
%WF)W'2*IB!*ppKr#s))[W$V(Fs2>5HhL!)p6j=c.)h!c>;uCjiol-GJ\=V]MdNh&clJoh812Z3d0C2W,BKRMXLU!WiqXd*bWsj=C
%`FmNS]_q_p<J6aXd"c[okG8mhnAT=@."(BZmm$^9o3]6,q#A!SnV=='NK5.*Dpk9Wo\".iI,O6kO%E'3o.M31'!]JLDGo*i.!;qY
%oA-b1F2=oD0-7<0To]'?lW:9^s6e.tLDTEmrkg6=SpXInjto0`lP0`;4GUG"*i^j+qY[7]#DI6sVlr=5Buu7e^'h,/i<O:mrQdu)
%0_*AGM_BOlU=,gso^a_"rp7Ven%X>Eq1hMlq[/O?DY]\!kiJkc1>T[WJCRf-Km;VF]p^FA4[*JR"!%U5Z&^nL-K1.@Wb6_(&rD\D
%p6##n>)g?t3(i.YJ+*9;OSn)1S,`E/M@=+dcDtSKKsSf=IX.?fa#8QdJ.GsLh`(9.b%VYS/k[kkd2t540&3o&@dBZ2b6OslnBT(X
%s8/ju.$\604Fcu!j(G"A5Pq&hVNL&FZkC:+KVeHgO6975[5pu'Hat-1b2h?kIe=!nUjqmU5"RF-rM:h0ID+m%8)WDHBE$]@?2*Gr
%plTT:?RfF.-g:SMnKL'EXY_2fZ&5qcb,)KA.^`D$4n-!G$8dg)]P)/2FHWl&^]'\W_D%`/_Mu)#H>>!4R#`o^%ln.uJ%h_eb_:iY
%leo&:g(hM2S"]BP)BplBqSt6>:iilt^EgSoBP@G:`EX)?Wu`Qo4q-3R>O^>/00]6g(CqV&HM6pY0@=CrMgk3L$X/6+*==W.X1u;G
%4pj_b4Yq6\!UlXBF0ci-q9B6BY'KWn(S<hcaiFFds5F?B:d4ELV;ZW6k%o"4Kn'*U.`L8ANh9q\^@UTe5C\5JKY)AEh,*&WkJN!W
%Iu,\dO?39:iE@lqGPGM.<N_J(J%"lXh>.er,je/(HN,_f2C?O7-5Th;:Y'GI\UR')Z+ZW>pEKOpKD1tMrT'j7Dt\qP_cqSr\,:rF
%ZUFP;K<*Se?L(ts!F:'8pNCQPf=A9_lWf@]pA/m497HH_R`9T`[=,%rrq'"/$%*iR&^^$/$[@!=^L%K*&btLpQZ'XPcgp8F?N'TH
%GZb^Lqj7?]ioe('pA5YE^\u&_Y<MdS`LEoSKsX?U;4Sd)p=m=jjZ:-O_5mUm&,/j0Y6r%YHi7R6RLo"-^R`)ZWt/&PB`A1D>Q2]e
%aZ%f8QZ1hGI.k\*00]!:jNB4ViG$Q47j#>AO^6lDVucn_Di:``YOt>6>gKjRkW8\Y=+U>/V,\E"]kk=t0)G2Ag;C,naO+;.jGVpS
%mIN2)7@2_1CZ19M=MOn#@&b8soYISpW8b>Qbp]_,WZN4hnP>djH1pa\`Lgctq8K!*$!7^rLreT[RHp<MVe^.]jMAU><(O%Vs's"_
%a]7i,Q&R*?K%k:s%XcO2iH?nMO29//;4k"Y5D!ZsR`i:qcVk?=TAI`]DLM's]d5htT@;e(*Y-G\Vk`SkS_pa4im;fH(@G.KReiuR
%%C]-r[t"8k3a1adde5E2`RosN=YfDXmHHS7iV2pdSA4Obq/I+7]KL*lD9#M@g;RL1R%('^@3!RaIl7f&Z9B;=F8%9AcMOu7^@?%+
%Gf03eN8k+fIN@5b]MeLTVZk[shs4eKi*f8S91ldkp2@.2$=65c@7t=l:cY.3kKoc6fGXn6(pVo7Z!DjJ>1]U_5$c=0O7kO(#i8oN
%s)cn,p!IU*p2oQb)Ks\(YH.Q*^F^\ShU^epQ<blJfd_!IG<"c]UU/r8A`%L^HN';22n(lO[Fjj)d&]@s4!&QM9945H=7kb+:NtU*
%m[YHN4NiK6iO*SVN&#hIkR6j%?,*GAGBum5D7GQ&fQ'3'Bc*8c2r$ONi_(=&XY;><Q'YasL<uj<&%k,Vq!#<L'mF=M>OlWp:>gTr
%eX(/kdL6)'ghIWup[n:1Q<LbqV:HXDo5JN$/_*h[S;Vos?ZA`04TAS/VfLQkER\]N[<a?3_recp/A7+6c#^To:Z$LFWV-3#a*)J"
%>jV-A'B/TZf92S`gRb%'-&j%HEu-t#'Ld.M72G!dp;iMt,Z.8`.e&UU$6tAlP0]aVpZG"F6NDja&'&i"f7^,JfgU$hb+nq.,N8:j
%O,.QKDSr5gjgiQL&j3rK52GC_--tG_??<[iZ>mHI<p(b'DMX;qX4)CbR&N0V_Re@Ombuf9H!58>6!EmR\E^6#lI3eGN7o]Wc<7G+
%<gM=3i7@\;*ej8Jp8'oW0_-(M6^$\-,-1gC7Y2!:<_%F'?Cpg8MXYKO"sVR'#bP;2#er?!VN(ieIe)j3Z0M2poZ\1#$ZNo);I"ih
%gkG^a"94t3+[9L["_ud+/u?,X[,o>]l<.3J@.!+.[]Uj`H8r9hP5b@^R^rhl^[h;n4T&(fW4"=F25gPt1aa8R2IY9mW=&[+'Db[o
%T"OYa$Xaup'(F``qgI]f9#+GfI$pQhqcX;6jbe_jRKGAMRg[2(%umX-q,Ac656"XiBK<fiiReXW3pC'rI^iW2)lM#s<WZsl:;WGi
%ICPM7l1XTV;ONf#U!hYko""NWIIF9NOOs:,LL[qEPqNW0$YAAjq:A4=D:NJ>\g`[YPQ9,tJZjKd0MbD,C[4\jJVu=OFF^7+PBteI
%%QXTHS!3$Zh7;&:ee-Y"*8C/b**Mp\Je##N8,MV``p*)uFT=ICp(dM4[=(QU%R<nsGhrBU9OI59^ZK.]kn-T=5Y6S%7773X!&UZ6
%:RV*#WrS7&OB)n4<b4KieA.sAT/O\h:OP6q4SrZrqUjDYT=9Y&!PmKRRq_g"?M9SbAj9,Fi2&qS4lP"hk=<hHg\6E\kkk,)2HkLE
%_penM5Hg-H+gEg_g`)eWB+I0fgpd7X>B>?rC#];uA^,D.Zgk;i*W*.pr5<,OS0,Vj=?PBJII7kO&]<RVEKHdb,S&>VQZ?e#^A?g8
%M@PNaP`XNn5M=@(IAo"<QYh,We#_o.Bh'<3fiK(1Pf(5FoiALkcI&t"hC+.jMm%Rh[.:!j6J&_D5gQ$MW>m7O>^Wc^E`h.2gUb^(
%5FdlQqAJURh$pg,5'GMKp#JS$gdZ,QE+ft$J9/]j6305rpnPDD9<H'(R-(7?=fQ-7Kmn2kP+Ff4VuhiHHog,t&`e?l5m9AJ7aABb
%ZU\A<J@&2L-l"*Mn5S"M-[RMe$/hRSh&ht%gZ_R\qVDV)d,+A5CptMFFf:%9Wc;8lTVmjc<Xd(X_5HF!9E?A>Kq@4<ni9=#SVp-_
%Qf%(DUb@b)h]1Tf#Nf`5DRIHhL6k+ES)Fe5@bg(DD-X$8B+Mc.'PZTFAO#'A;2l=^e"uBBN)e-\66d_7Yj2:*Bi1E+)Bh+tq)MZ,
%cMZC#NGoj,r=?qlE+DG9&?kZZfA%dGViSSl#TFd?gHNo*eZ]9-KKSIX]t-BpACbR.5JW23&[&JrdKjV$]G?V@X:b$Yh)slISYJri
%pS#TM&'&k*4@nb\K3"A+mEtpEmWn[,1X0l'W7*.bh6;mT!ARHJ.bjChlg4$]ecGkRmPDJ)=Q!HJ@qW!(>0jnmdT3gOlA%_W<tMRB
%e_&9B+eCgnCf'CLBj1'PO#9>@gSjQ>&Ii_!]9)?]H*K!@&)#b:_dX$nce[DACh@$&A7n&^@tgO-gPDsQ%]rDl][12eIR6D4EH(X8
%9?Uep'=*VJ9oJA@+'ulJ=iJoG<j5=VIgjE(<=bJ%\UC0HSTNn*EV-*H7LsR8o!Ai9LgDL=V^B[AK.eg:*_o<d3-a@Q@:[3odq!@&
%SA^b?Y4\E&@4*_@Yq(-\Dg45uJsrqJ_r=.:4Z?Zl*dqa(R.FaqP.LI`e$;/7s#p65GXb_8cIer-deV#?=PZc[N(9,@Z_#s>)g..D
%IQ4]dc;BIg)`MO!Kh6@Zm)RA1W($9a\F*GB\U:R7TB]s"cb;+Vde&]X6`[.5T'NQr<m'+5Y76<,%ldQ&ah=5#dDPN4be^)$Su_fO
%g6d`63b"(JMk`U^g6H`CA'ts!X.U\Dl*G#'c,l`a/WS[]<Kfre>9"o'J<S$nB.USGVS:V39)pn(Y3,`;[BdTQ\CJu%qf?P0oGlUK
%*8<c%N3:JG7JF[U3IUb3+i:jZ<&G-:_[o[%>>0G'ZX!/QNT"5J!iL@skt>q(Nk37)4<3*A5AZICEi[Mm(cJ;<^G\,tb4h*6nVD*f
%)bici:O=%C8YF5lB]_B@2[.88)+FD+>A1$P_\/Yn$pUW0a2G^Ig*,OM\!K<!>IFE/=]BHs+i90;p+85scKXr(%1tA=e$>TseY;o-
%+gRFhApI7ffp0QQ(.ZhNa<O0JH/e$BCOFA(g092^6@\_*LL[s5,1R,4EmUGkkJj_dIK$(Z;=-%ONKF[1e[;PXDet-#*0S.C\k=cU
%8(=fM=5Fc6Fc3GP34*`!n4JI!2epX0I;*Z]E(%:NdDf$L,^X$'TMBU1$`0K>NStqtB%lp7Sp&PC)f$[Xf]_;@aS!O\4ncae3ICIr
%\Zm1I7Q*2_o0.C*o2J^ka0p)s'uIVH^!WABnVE'GdYf&[A$*#`_qZZ=N9@e>\NP$-j@aQ(pj(M\gDe8jN\%qiT!E-KU.JZn!u0ZA
%3[1P]Qht$U46t"J+Yn(Sol+RJm6b>Wk8NfgWH7do0<mn.E*S:@2`B:3bcj',qTi-IZR=Y_'l=Cu31(GV6`bhuGuSK2/=2PJ?Q'[4
%cT"r>_[r$KZrg;e7,R08KfN%:)*D!4c<bd)CZrAP%]t=0GcnP_fJ@0d^,@iL5MD(*#udV/$aKN7OEd0N_(0r+N/cs@`(cN^;bcVc
%2`K=->%=moA$_gN?7N,@7a9WHY>#L5"g/rQ_83EhdLU'KZKkc\XM7U,akh"8YXG)@N@&hsQWms0UtFtkfIH*?(V8se9lp1+CMSPr
%ERrT*RK,,O!2jCdp;Z60R*p[@li7NBCcXJso"WPs:4%%tL9rhHHT8Gabk#j2jAsC90R$9aIr0qe\WaJ?QAun.]aN]*'%fmYoWE+u
%]5V<g^u1lrj59%pqt[A'-3nggm6)!#G2(IQ1$p:m/cV%/*"8=cVdCA_A:5il]>YUTQj^3XdJGMN>_H%8T+$ao$(eFn#du_j0p.T=
%GjVWL61,kBrPPnrZ6**cQQh'7<r0pbD@E#`k?f,Ic%Bon,N%JYODnQ:U5rkIA93/m]_3/]!8/OTIT<676;'E+a,Lh^f(e6[6`YnU
%[7=3NF%b]_fp>`1n^E]p7^=sXmG]F=V=_[\.->)@p$b9g4+#qG]of3o59*k;H?c.(SsqQLO1mM2r+opBOR8%mY".?Q4=SPJ[!jhI
%>\dkkUV#]o"Ffo=HTUQ5NPVmMd-0H8-n(:W]'[$sF7S6>F!E8c+E@aMc&M'R8"l9s1_nWt7)useq9Lq-ZWA48MRqm$lJ^*)@n5\[
%V:'^.\stq[d]dD6gssXYMr[1Ze8C5!W:upa?t[g"0eN5?hskZ!"b!'K2YN+CHXXXY4o<[=i8oXP/?t7k),f:]L0Y4U`H3FMP+=*$
%A8cEFafGrC.pckZ\?Ru5O0=!l[+[BjU03ZBMX,snF8#*=K4FMJ9rVZjPbq&P)O_:_V:q,EdG7_<BdG^Le`g:V%#_7-[m(k%"dSOS
%6Tqncc5qIL=CaHb-B4'\$^*$H`^_ga>dr-,\h!HFC^YqKYOb*F3pk4PFjZNIjIciTm=Hg4Y+V@i0W3722D*#@ArWnD?s7@Jn*;`a
%M+b!jeOWWMea;%s83/SnQ?JsXSTa2I[cgKsqVfp4F[8K-E8R\%(FIAZj"JqMo2`4J:/+Us2^>"fU(aS_a\U6+UY5ktmI^09Hf9r*
%f[oVILI3;V&51qrhe4"mRc__U09s?<&oGh[M]U\LF*;<&DQ'>;DF,#Jd*P<D>hri<SVqlBUn2_i7QE"E^A?g8$:dSn/FFIZj$Ec0
%HhO:ZQs@Gs+jZA#rC@[RpfnnN7<#b<BFS5-S!3R4PrG.>Wq"UMLK<C#5M&@W[*>piIu-'#c@2@8lK>(8oG9"1q>#=0ll3?N9sN57
%m0cG\M:usP<LuAI;W[3sL,<`ZS<iQ!\olSQ*;XU[?7BSVBh@aABn;%eF-<,;j?c'>a8=AdE;ok8V(-MZK:Y7';Eq8N<Y>0=l%d0)
%3C<c!7rVW/W8,VoI'0E=Ss<rl][6pVO"Yc<[)1d-UAOaUf=4X;cQ7P;%46:tKWIV"f')q3\gOAPqg#+XP?3&KBo2!5nuVE2F7Q[s
%2d0[jna-k-AddA'O")+3b37O=02M&ql]<>^I!R/+ZQu:7iLSd,^4k&5p1u&4%a,t-bY+W,h2&nRNng/i@srA/bcqoVHO2gVgCrXQ
%F#\O?jh]fta,"R^#A.-T2p0dMi.HG6R4$tgMpq?(6Ctm\johkN^>n2!$6-S^>3*p/EhOeL4o=a_4N_I]s5?:?oTtJGoN^UN4o=B?
%c8E>riQs'1iUc[#66/%4p>o/b\k/*t4)Top=;"@&$(0fC`T^!7@RVmCqcjc*Fl`I*T7h9%jhgiQ\2[P1c5qCZ[L]iX>4o3b*T]'$
%<H^ssBlI\i/=l1]NN+QArbgfS=\!ATp9?fLL%<a9Ab*e@EhP^f4o7PiP7'W[0>f*AU.Ml+/<S,!=K#;1OX+se25m[=XS/u\*$qn0
%NT:"rXY<C`TT\)&KQF,Bp?YG/gg):Ip-._t])VR'Ar5k)e^FiMUuhE`5'u=L6uG0%j5J>l)_D<SaGiHpOSWV9^6H^l[18nqA,J=l
%N>J36$(OU\ZDl:3Ra0J+=i"aS]FiYi`)f/C=tNDg]&*?$LV_ZM0DEtbO+TcGb1/g*2=mE>gMs/E(,kQZlJcIDO*'`i,<'sa?&q>f
%>PV*$c0>&<4aXUJeM!k'im[g9H*URuf_rQLq9qR-:VQY,-boLh.'<99(8&8hY;d>cX]a'WhHJO5EWkE2L=^/M`L7_rM:_6_X_^DM
%q`8F:+thhh6'JXHbj2(m-Yohh;JCc9K4D]>QfWie\cr8[S0,$'Ns3uBd)%DW@$Gm5*3Js8bGR>X'q@Tu-$'^KhXQ22p4O`8hVE0m
%KAkGC[5Ge;(7<scMa,_?Ln37De_$M1S[.\PBN`s\,^q&p3(S(N"/6X?:/@&fhm$N8<&!.j-g%=2h:g,c1CO#XS,$c.2Ptt`6h9&W
%gfRDkV#)%;i='Y0@J:7+1ZWuYag=k9.DK./c[F^AT;t(B/H_Zjec_[s]#9qd_,pq#R^C@6d?U:T`S_5U,VUsg#h.1.I=G'R8SKfA
%.iK5&pqW[:c45u58C5L.L-%lX-dm<6X$1Vmr?0+[^771Y':.;>J#CNphN+e@aAbkf,o&2TFWI1H[f)hO_7@Z)M-B;r-<%EpDDLrn
%edds4i=@$Lf$f(kl$.1C&&8X.2@8EV#@Os_jD49`@,#SEfk_@VWQnHp8cRt&G47U$O`Eg:Hf#%RGnh`+(bgD)/#+]Ma1SeH8R+Ua
%8ScH0Spm)+Z.>oFDA@p6@7(jYAqfNsca*+fgGnkV^/3Fj<h.+lPhNP@R]DEZbP]OX+#nEQL`rI>d(D44E+)GfbV&hYAJC]O<0hjK
%BW^'0CP.g>e0d4s*].A4G7&WMpuPYF5@r>JT8'N7"Ksh8OY1G!X5_H#qS9D[%Vo=UMAkL#'/jYsP!VM<S;Nk>?u=S%<.j-XTP7mg
%2mtp:/"59?kn=:/bXcM$2?V&%g,pqs/e'X/R"Hf5I]F%Ik,F)eVNX$U]@>,fg,/$<lLnN!['E2#=?/P!U:k<R"QSUS5CqBe/R8ZN
%FDQ&]4M/>"X*5_joZJH?.rjchS["bZMjQ=;An1W#Y!r4R#-S+ph;1jfLDHGu=PX?tY0]NPg[./Ob]UA\"^?$-I^1390`@e)gFcs7
%]mot6ocWV/D_t"^CV],-!b=5_315Q1(JF=IN7XjBD1XGZ/!FT6%W`?VTp,::kX2r`gP,24oqAs;+bY)"_I2&-]bahj4%B4!3Gs'4
%Nk]-Zf1M>VFu$9_ls.Y',FYjD0Bdi'ao!!g5&J!V64C(,*5<pQ7Pi8Z)S-PNC:rWSIn>JDr<:4AI:ns*+rZV%7?!\):F?!]hjM"o
%<d+i[bXsVW/%]F0$T2'i[N2MmXR;JN'PY0EK%Eh&*8:h#K/BbO3sJCP'!S76Y`PX\dd1%G?qKCMMCP"3![k(l.\mdP,;f*G7'dKa
%c16WE9H,?=>bHFN#(%V-FC-]o#t$0T(MnRfP3OX+D4YOt@PFT3@<L,\JO0m#[:D$7<=Q;q1J^Q_,HDTIGRb#F<A;N[K%.h\.*[qe
%ocX#GGuKk]\%lb?ccIAm+SA`0!LC#!JG\8sdc/a)+:6Wd,;F#_=u&q\mBf%gSM6<<KWM[k"d8O.`kDCkZb1'=3,E;3QY%=l_C!^"
%1@/O2&-sVa]4-Wa2aaBPh+;C9';#C$\rsMo(qd&+Q2U@\=GC-S6*OajROkh(FG^E,@*fA';)/bcKtk%>gARH;M]2W&aL+4ooQcpk
%bF2fi&Z38^i2&![',t6t+k.7N6rpBidI!sq&b8+-/9dE)p,UZ-TeBP<NL6f@1/^@9<,/ee,N7g]7:#:[U5EcuIB8p7jsP.>G$+kO
%p^GPn\iUqE';*PKRJRa2h(tuX!KO_sEo-`L^OV(RUB/$^R3qI_:oUiO=V05oRt?;"%G``7p21)Es0QQR2a*>jcoRmQ5pZs'qsjD[
%VOocVU6b%<^`$k[:2b'4e@j*kh'Xgdm5u=*E2XO.lKaN@%(8qjqgT_'':@/0rNMfs^+V)'I"[,=Z1h68+.)JCK>>oKSN^"O6F#l"
%msq6P#$:5eK*,Eg-HA?1*J\hF,6b8:o3C\X:O61SG4>nJ^'ZPTN9*cnV"QK8H!uT#9O'iFgImWg&TQ_H=m]98l&17Nb6N"7[TP]@
%[5/ED;3,Z5hL0g\,hCTO]\Xbll8qJI3K?-S228uHn$"J[IFNJ"[TOUC*S]A]@tS*i>.G/i[0l:XkYV,mAjn(eR,-#6Gl#Kcq/B/=
%>Hs'Gl`Ph@VADsGgGKC:79\0A]1Z6IEe"()IXCucPZtCY&5`#oF<f'44Dh"NB-4n!A'+7%lb):"AiRN%A$`L%HjqU6'6'%'AVH]d
%`eM\^'OAZ+J>kRNp#Ni%"Hd,K]tQp<`d0BaG<o#*"1[BM2Yi5L$6UqA">uVD@tdDQOd[DPBn,[$@dA<[Zp1#s#)%tN-7q?4e3%FS
%??Q[XG^6Th1h>.q#R%Rnh;pIndbJ)LX#MMXeQ'pb.VF"A8oB#_7Q>D@M#.:eCI_d)&XH,FUlm%Rq:<c,O``c"Y)G/RPB8u,&p#h0
%>t23%oidsLASaE%FVM7E.%u^!8B!u*%kZ&gB"lokg'8sR28;2?>$)ms``3E4Egt(MK`O*pVYq384gR*Ql7Bo.$k4ns'cBm%,PUA*
%-cBWdc6^Zh(9;I@?)_:@$V[%a$ra'JF,Ma3RgZZJrK(jX8r*/+TOuIsG*QGPQEC`DLUa]DfaK*_%MC,Z$7c*:!eb]#.7>3)jsY<J
%QIo1kTWiXjBpZ=4m/_"lV;6._lMeKP\IcRXL23,_,^.R!>`]DJ[Al,2/HG0:0kHW?iIn2H!r%V#;O5L`k_/@NA$W^Cl8lG#lDB8t
%V,,a,h,i@4\TsRIrT-cAn0GRf/VV/+W0B"0SC^bJX>Ru)JW\fi#:_RT\Ge`.);EEAg_YUI^%htHXc]'4(Wj'6EQoMjkF(A6,7rH!
%0K$>b%d2*rA$Vd`]2E0,FaA+@kpO(a!eS.6?WHC;/l1G-!>MY0po>QYq?Ys0?09u5b89^B-PjhuN69[C=L55Z!GNicMJ8/ogO#Mm
%gFcKQ<8s&_R=oq?s5(sYRL.@[lJsPQA._kN?N_]3BZE$c]jNSqd9Juk]]/)0@BKE^%O!!ZY[W'8ML.2dbLqhd7%Ucr'[jsE0.SuZ
%;cH5"Ofn#(F^*iBJWAid[M?=^ms0@uC$iq$<dB"X&6pdYd-Tqc=JR^c9AA5Q>^:e-ia,sdhe@3aAjWmX?7%5!@LcKak+SDF?dbKW
%Qjku`>]6Rgq^at6H;pu_i30g_k?c&C*7T;dUpcMiT8A'OP$qpuPI'Y>`Qm>Z`j>4F$6nQ2ppbP#idhJe.BeL<Q5SK(+=S^R,HJ.`
%\%T%qBm%#COS:Pt0QZiCMQVka2;`HqZ6%5`ZuF!a"%E<1BeF[",`^hgV)N+a#9GDD"tF!1`#.dYbD8]<&(XWmX"6!$bB@*8jHS?&
%D9:oIKGP)b8R?'L>LdH1M`H/FBRm'd(C^DIQ"SD':YHNkT4IPA,sFM,6KMAW\<&-F$r$#:$6c=Ac1Qf&ln8]\p#(eTSDnb.W9C`L
%GBg@e6`-*%RhI1Vo]b@DJFI@f-c=#B-9TtL8&Cr@jRKA9SgAdO6g/Xi"/\EdQ$QL9"'`B[KiDAd[T9XKLNK`;8$(u_-7,>niL.'k
%KbSffi0"b']q`uf(^oL^?,ILbiDpt,M?=HV9Yk12*'(tZ2sXUg,f#T,9a:]@Z%9ULSl0:YgmL:93(jHXO1dr+[o%CraGV1[JE<p0
%pN%06T[S[6r1n*fg3iG<(N>cHE@g5WV2IHL[%%e>$fJ6g%VocLjgO[4LDc][?8PUH&_PlW.",n[Hf'"fa?St>)U83ZdJpVlI4;N&
%CNM.bi%DDX$R'N]^?r/cDhjqpes+&sgTkLEH$h\]aUO_g=s_gthD\hPeP<.9D4cN[.jm-Ao*ne]8ZBl<9\hrI*7r'cRU(uilOBS+
%+CH83A2hl>;?2n"BZPEi:WX'QA&2a#DP/`>2f)fn+nnJ49O=C>m;=Cp^$V2_jA!@t"3au`/'Zu-DnqfEp$-uNe5UL4^Ccb_Ju]oL
%R(D0!*!a!bqKN%E2i*IjNd3`_`Z8fR`LhS6CLB]TYZIqD*eqB)Go6j9f3BnR+QHdq=J4[amp"GFdJF^<pl2cB@J3+V)Sjgkn1d0W
%[VkSP2u',#iP'4F?s+LUKjA,oI>S\jp6,`hd=Eme>TT-@1h"#8MYg!5\@KGV<U)c`+;FlSD?9u2'l1WkbENY-POXWgNr^e"r3ot,
%i(ls'^3$KP1b[P!^Ef4\7,4b2WXH&iB*m[34I6*1HtQ?;)of36oA0%M@+?!(<NZ"D@Ql@CBsXM20_N;M7bkA^pDl1OfGU1UZJ9#a
%YXm'uY[l`\Y$fn&>k8hPE@$>*3r02)K$.C>(LN!SiV+,@/?F1]0PnH*JUu?f(+X+G;pRkZ3"-#%*gi$M4TSc(a:Pu-bfBkF:79TW
%9P.t[C!8fDH:&LN3"-%#mX*Rieu$WcXX5B@mlWMY1k!O-SY7Sc^5++Z:>O60AeH.NXaAR2F!o^OA1>(t9KSISD,/Y+@GN?%<)8ss
%a5b3>&kAC[:BL-MGWta4gGj,l.6d9VZupGaBTQ-X\gpWD4+`]#EC6WV8)f@,>./8(7H%G;j/lH"`]aR'!G3LS7`[$n&Tu*37"lgH
%]g\<qYsX(a)nN3Eh"ZT3n\\a&)6kOMNJF,M!Zr78oZ1jU_Wg/bdn)nkZPMm8h\.^,r(aJ[IOEbP1q^rMh)dJgOn[aGe%a?ZrH<TW
%6%V>52b\M3JDE=3'Tckn)t+TqE6jg?IaO3fFe:@09u<njKt>Q\`?1WE95ldq$Fs7FF5eAUIgL1S9o6UfGMCtBr$?.rZ\4.L'B[6j
%$$P=s!@HeZ^WB$\`6_pDWQ.;]^YIF!&V'VGoRnOPMEfpBG/F/'fL)8RrmH%k6X#;\KW1$XM8).nVGn/tQY*B7B38_O.XJ_gk3QH,
%eI*Pe?WnOURAdjK;KDUei9WaSql*o?YR18pYgj'!6eBc+<#FjJ4qH<2oZX?$4:n3Or_'K,nsTIbBQ7=B>U>'Fj_BAH9<]&]RK(IW
%U7)j[Et4T.Ij`nE^Cr0r?cJ8J0j8@E%G_62s5gC%/XZ=Jr(5^f7i;^qUK@i<1`i\<<($^5bV]MI!#%7QAOQm?4<(_iL]C+N\)85d
%^M,HUImO40Zkem5/du,q7.<:ZR\NhC4o:*u^"gDaE)b]F`Y"eX3%AhocTYG9RpLq0+2#Md2D0X\Jg-Q3QD-6poc>.OEWU?\3S?t9
%Y^#jG3$,ds&uFZr$?*4Kbr[d'JDl)+4"Eh^(%I^W,8*dZd`9S:+hueCDtAJJ"1O9U7ipNHCr>NX%I,9&Z)N`IF!;A0h[#"T2o7VO
%nP)(:Ti5rs]_aUZi@Ad%Dc]IlHLY(I[jN61'H\=dfaBg*/MPC]0BCVpS5;:o2nS_;cX(XS>9p36%'65gH#.+H`14,Lo^(B\Q7AN?
%^oF7)f\&p<TS<7;m+qU-(HZsg(=(bBLU22Zq<TDD1&<l#^%@@p,R$>XWNX3+6?MqL2cYbdd,@XTDDmIp^499`;u-(Am,AmII=Yt9
%C$bJg$/++DY2"EpoJ\s^2lTYn3.87^')24oV<CH+K8bi?\=1;!X+$JS:NJI;JkobMUU-iioYm-N4D[Kb0AHTrJZHB1K*T4fh^q[g
%jn&`;?6;@ZJX'YpF?P$QkAGQF$bq$'\r<2o1M3P'KZ!$n@6K#F1Hgsu?g<iQO6Pn%YVH+PoED*5+ZXu8_sR6+dhfp/RRtSu0<i+S
%p>FC9Qq*##oVL6FS]%EZY\%EX5(,/<DQDITM]).8%A1A%_53W3;/((c9P:9,dbPG3Dh*H^]g7$P@@O1O1l^6D/0-2[om"YYD]0n$
%qi\OHT?2">R5_qRmWqU*!S3%:mks\@n-B79rtO;t:P41a&t!^86L%9u2c%,\V\VA1kh#o*<Rq=@1_EjS';V7"N<Lf;]*?0(neYtq
%L?\<IU^,?7Mc3S)s3q+bP^)6[i)r"!"eFjf`Xb+-g,sm*PTnntRG2fr!g?57`m"K!(a-uGBLkrAk.*`r&l?"V3hg3d$<[j2c+l,n
%)PbU&BPEGu'p1;&2;=\?c(LZ?,-0K-I&@,dKpr+eo&tn!!Q;=GQ'q`\"<SWei"!0F,CBdE"7'C%$TA0le>+s>#%=XG7g_9i@:k-B
%2hU$t?3fJ%d+_L.%+n"[T(IhYD?bj5*2$'P^sKPs2+gX)%%<l%L+l'9#j\&e-KGSeLRj1XB$cc$(B^mPBQ\PZ9=YqIO?DJ4_%`?G
%6^e[:;8#PLU1%qLekT/L*#dpN!3=Do'P[j!iGL5f_=*i6^,lcKC'HA5juG:$bsRf$;DS;+cFBSZjlPD*2!LN4?R`T)?0mc`OI?O^
%%5#ldRD#8*cm#'kdk[BhiGZrC6.:SSF5;WV1#md50n\E@e^$NIApR6/oo4@*eFd&t%??8_2"9d?Eaf5\WRPe'%%<5fGq)5+!+m2X
%-Y<A05dBf6B\lWca"XqCVT<;/o.ju;Fh7u6K4Zp/j-,*7^m'00]F;SI-(jZ^#]$S[aNGT%<lU(.Q@%:`_hF=@hm]%"<Dj$/\NA#+
%)(ZLR$7LN$<b=Q\8G-F!FC:e<Yg^kka7$lO1B/t7Vjj;AS'R>oQ`+90#!nTkj!>6*!feY]ag7$URFn/f.U6m!B[u20b+9;TEXrUB
%$d;UYVI^N-N`1.OBd*<h+D%?9oqBICN`B(7$Q%lieg55mopL8B;+J2>JWSD^^FV[8e0?]3K&qZRTh+kQAdBm+S[<P6?`p[^S)(Do
%!Dh0PcaZ4ZVpF/Aa:"'o$4bD'$eM&`L8XJ86`sfFqckW=!0bYqQt@RUg&%^]PE"<j]Y*F_LQI-aH'?$7f6AgEn0j4)(la\f7aaC%
%m\h<JYjP1/18s]=bu-/cc+9)>BYM>>;o.^(adH,(.\ND[ek2prPN@:U$!A5i#>K,lMe;El,Vp6d4uU:_/6f:1-C#>1S&+N2-Jj!g
%1*<6j*5VS-@g,&"Bc^[Q&JM%P"#pQ9@i!`j*5%U"7\EF[CB^891a,&>d?KRFV1GsC<Jatjr#WauU"Llr\hSr/k?G)?'H*W+k1$uR
%pAkLY'TjB&Zl9t%^pH5>-<JF<HoJ[7NkA:eluKFk4CIZa!Rd@ib02MQ*T30Y2VSZ/MhiI:>o/$2618u;D=(?CUS2@Pl#kW%k^<^k
%F"B=5ECqr'OL1g,r9<JLO,YKb\jr4t%c228b?J6)R=$XqA69\'r-g"II4$.IN^Cd]`OROc/H@@of;q#XjPFUjP$t:QG/TKXIOEBu
%.pNe4`^26=i1V@U=@rC>X(6'7F9HEiDN^:7P?c?9BI[l%<e2E/^\\`,1qRRTnV(1@Sq+hD]=E,NT#fn/_ekRiGWD!&!K=OPW^"?[
%NS)C]1%)Q^_9d:'FAFSr&ODeiXFu6.b\UKD_dt:[eUjH;ipUhWih:W#(-)=nfn;&?I"L@Pqnq[jUntH"'!:a&<&P-FCe$?`=iF;X
%>ihTH5?"to'6tLe`HY(^#S5_trP3A(D2U)D[23QA[%IKX!l_#pgRoH%'ZqqSWE5Xa/%$`Z!"%EFNR0p?Q-_tnG=h<_d]HqH@lLQ[
%C;H]39c.tg(P;acA/2sRi6SPgL,!@qqnH*f\i5U,&IB)RZY"i3*7$D_(M^4seYuCN%<,9-:rbBB)]a$TPsPhfM$I6FU^b:bKN`9C
%9GD&A/.($4S0^<U0:Vkn=h_Z!65p:)CS_#DO91a&Mo&6tJ)Kt?M>c`.Xqk^ET2r:?N'Y$bAAl/=;b.;;JCt-[.&8p_Q=_#C6m8*U
%UQ@r)m-mn4h<>Mr]g7=o#gD)&@LWDahO>KM6=hEeo`T*Zb=^/$^5^<l0co#k[g8<4YhiTs$(2Bm13,;sOTLa$-R+E>#\0tmAr1'V
%O>:AGplY4!lc^Ida?jUpRu#b%#<7b4VUm;&_WqY?__+B)Vd\Jq(/GqDi%_HE&"/hDls"FhqPXW_P`>O^;&UJJ?Co*K\iGIdK&`PF
%.io14A6iFt$>OUt@9[c*)p0o2BuHV@*QuRWU0<0TYa""R)FTQW03Q(W^*[5oK4okM#13R3&"2<cgcsJXSWbI4qaq;Al@4n..-<hQ
%\Lk-4%RX-0NnACoWN7C'_bWYF2s")LCA0*]I_msu!5!s,a#hFrA9/&R#pNcNcB=J9!Z[B(W<<g;M'@RH=guHPf-3TcpV=1j$AdC_
%?JgVSa;NDM6keqKL+mdrQrEYlp+f#@R,%=m))D@!%n"Au6pQYNOQ=>laB[.mL5<(adp&UV&]((-8"#!_KbC)m$J);EO-Uq5f^%M$
%G7Wf>2N,m[)'Zqt7Coi7&RbK(.RHOZ"t6;R&MQ$.X9]E3_eCU],29A)b7_g6=L">1+TcE+B)c<5nrsi0";[1MV$I[Lp1DnPl_6#o
%NCsi-LfPXUW)jn3<OA.6rY5&-6jK(a*=G&6APZc@d2m>.K,,SE<<":\TEYRUBWpQdZ$[nsU/F(VE%O?i^X%i(7+;SUbpW`0ilFaf
%+bBjDg-[\uB#h3a_MgN%L:fnG#piAr/mUJDjG8:X2;ClS;X#@A4T/,M&(-hAG&WS!?lBKR5'4TIr6X-4S^\`r[Ffp$_1u1"B?R4a
%ZY!!#;'0DpOaq73bSlX^`J7Tm?p@$F_k_<i<nPfIQmd!O#)bGqG=X>oE]5>Lc1dO80i:3=g!41g-5De%O!jfZB1s>6&Im%#]!2s_
%L8-LG*c_DhV^9U'HK4"DE-t39!Nn5'lC^B&$4aeo).m5&YSr0+PbM>*dFN]541l;LEO%7((:U[$QW[`,HVJ;KA_%J_1A`hH>Abi>
%7nWkh)_:)Z^<?if?Y1nX3Dj-1qC/:qq(clt_82J;pZ1<=NJlOUn8!f.?OMIanHmO&)jSuioCVb!M)E)Mg7`$n4Qkj</D@`JQO>[/
%Wqe3uSshBTDkQN"]!ZQ&/1*Eo?"9WGW2/JocmmMlgk(*P..L@Za6IO`c'E8\UbJ6Sh]_;/DlRYTaGY?GRrQK+;IKs2L1&XPil]5R
%U1>_21;`<lR`qXb,p)_@DB?q%)#5u)MtiUuRoJJYSVen8keF+0iB'bp%7:b.hT!`fqIQq#@H>aMN9te>'a.]nMU\X>!#K7k!t.PZ
%kmEa`>FDL8a3=][RaXFoM6<=m'M`[aq#l>p2%k=Rm=m?hW<M0,:@+e6?UC_V'\EJQ!XTkKJqgIu9h3iW?;[KK_bWWNPVZ&7[;;,C
%W)eb^Y"k^bQo6';c:rN?c;7*L.1'\IFMI\jc!54L?fIn/;=KbF;d:Ic_nMuqe!N.N&7='A'q4`Gia@";&<3/KEPkRFEb757<15f>
%7)U8W=diEq[8*%I1qAeLFMPt5GB[-oM64\m_]$.;1Df)bKdi@Z(AV_(d1$7eYoft^k+rDFoEfK\RVKZF-1%ikAiolX4rqq$L*Cot
%Urni'lb#]bLUF$L%q[#)CHfOb1;(MuGX&NmGAQLr[)i[lYs@Z9E$0<o=IIP+:!/h5SVlKClb0R-_`,/#o&5t3f:X$YnWt8t/Gg_X
%YmZuen7pGu.dlc#?;c?R1jr&J!inDUJ^b]:*R4?p*VIdQ3'j8,5*tu"52itd,FUI]kD?kM^hC"T'[/hqU#=U48p?ckCSPtRp/DO!
%FRN=S*bs;PZ>,2HdbU!*D_r*(F9=%72AI@<4)Bjn^g;>S);Tr`bF9C*&IXQc#R<in$o=ZjM3!BGAon]p=JhuO\m$]n+H147,ca%&
%KPj&s$o0&L"87[O-?NbaS8ZE#DICbX1.!ooL\Zgpcj_NfjX]qQKIhT4Es#`2fZ>TRp5bhu7+)PQ.F>W[<8Ci/g%d7@_2-CM@m)f9
%Q-KikM;q:m7a8GP&H\hN\#D-qdCFJ2G,M9*70HTgr.iB%W+7.K.@V8q2@Y8jgjkQA?(&r#A&dYkE+!`W=P;L%,"j"g2E,'9'<#_b
%lDjYRRE\H5A3)$-5s:g!7cq]5/OlRI1,go%?po+/c<_UKW\sZYR.8/H'/4LMYQl#OX)@CAji0Vh>ob9TjGmC.7h@H]H#shal5QoQ
%(2=WI$?3@BHX[W.27uM'!.qOWbGA#K'GH`+b'DR#WSCXkd?2$\jjR#+naFg*dVDZgbDR1clD<W#(9^)20gN.7L.Mu/"%K!H4)SnS
%0Xag09hFpmnB)L9O74@`=:B^,lq)/O0U;VK2tHq6Xcsiae7_+PoG3iXI>TKlLSAFi+U%4iRr@!Yg2Q`/;qJU"^`si6o6.M]U)na8
%h#UB(U@M!aLTktU/#Orf*@#%!k]b/N8*)8)KhcGTeC%M:h_9bhm!L4VJbL38!>l37W]QW'bUd^4Mt5j59ERf24ep\Di2AqAk7W3Y
%N:G"Hn/hMaJHt%O3Yb`a423.J$-#C&4uoEu#X7tDChGHn^j!j^'?UD!MZj.a%32<R,/Z6V]R+nZbXK*\LKL4#A(L8h$8c^$&Q90l
%d_Mj;RIP6P"V)qbGthe"""nYO5+6QA#akk1^K^#Q72@koPUt8$2"6NhEN[;OPHitDkbHPti&CZMFgm7]h+Ro@Of`5\I>nIq6Iq^u
%^iq>ThDFi>;=\J8.FEpKVLDI<&$YS_Pm:'b_:-=n9uT&6%qI.#*0[kV-2N./_d&j&"32VZ,V:6mA'#7&Hnu?SQkOr$BV$q'JeP5U
%DruW2h4%tS1Cq-Z8@)28pfJa!gN_XdZ#]?R"!99PN%kij/FJQ/4E(uMdnF*pJe(^#)'^@#=C(h-+ui;p3L6%H"`0RZb77KFZ-ocW
%&U^Yq@T+=-TZu$N-8,ms0u7LiWSg."AL\3,*fX"ce>V:B\A^i`a14_pbUGP"@f'ONO6lU("Mm:[q3\;NOk`a2dHn-KZjkFLYur>A
%K@pA$7B"S-:pqSlOR6E]@lpVTm,<4LlHhn"MBsR<6P$kR-%m:boPq3H6K<#hMeM0R?!Mh]/H+$afV=+7-5OEeRAt)FCE124TT<9\
%RmYg1"Z`oi1u^_d7ClrjD%:!LDH8V%-&8^KbgN:R#TI_)<k!ZIfE5^NXi_tNdq6ZffF\Uul@%m-=3<XZ6O8$n3J:+o?^?EX2F5U[
%H];GICul9hL^e1.0G4VqLU3dc&0#T0#cAe'Yi:O)"gNV9MkF8cHf2j79@O`&PJpHXL^gGR0lB;DO^7_10K-.I$"+am7a84qgd<d&
%ok$$Eg"lF.]7YokdppNI):gXqOlW.Bc1EBD@1R?4aHpQK)t5P:*=&i>p)HAT@aC-iYp14ielYQ1@q^[-:T+\JFmW4^fVfOo=D"-.
%Yt&eKV?F/JaR2SU8TlWUU;pnQitfRn?PfHh&Ir79)<No%**j"aO6lfE&Bc,?.Y,TL.slDZNDSY6Wp*Ftbf6[*DC*A"9bH^(PK%5.
%KuL=enSX5'*'4Xd`j'1#in,VgG8A4gJO\18ii1D?#`VPZpPW!-U4d9NTnL-LPX]/<^778!;;*br+_sIp@NhH[i=JkDYXXl:S*U.G
%:/(tTpYQK(s%YdZHq;*\ZqFLo[8=A3C!Y=%HU@Se-=pcfL6*$RYe4+Q*""+qZ^a_r.8?1bPRaq;N]NFK*FAk`883Z5UpPX=#c7+6
%XTE;n<E;IZA$AdpV+`$YPQLOD<&m^,nJ`5XZB,^AIek@3p="/R,"ed9RSD\JLskLQ5&T(/Y[gThN[`5?"dL8OU.Q$KYgRL.`kk@3
%P`qmpX>EDJGJIW5Ht>6"N+5:r5XJQZV,c=e\"EA1GJpc:MqRTW?Q)oG3fK%mC>1S[&lgu#)HE56%j+NhliQmZdK-5D'!HAOSC!5T
%ARej-\HJ12o/*M%5b9CXA9MaLLn.`V2/CLLQugYj>TBEt-kd;5m7S"J_SlOfg$6l%!Go7<0c()Ak4a"^1D3f_M^fO@0,p,&)$Un4
%T[aB&&Jk[SYC6YIE,c.iXUHBo5JSf\>du`u9Xm%qlJr\qk.s$4K?#]1j9g(Y%F'DKeQfr\+b`k$Y2Q@4rfAY_\Msh]\2_:0/!+:6
%!jhD3+qA%4+p1sQ/9nG@Pmf2hqC<-_rAUI^&935S]3[P#K49*lJVZ+u:;iiMH.d+VKE/@VCa%f.m"+1Dl(%?(+7pQg;q6FG0X,,h
%<^$Sul6tZV'c>H7"Dk7V!u"cbImbXGKXm4*_/<j[YS`i,-Kh/aT^PiKe=>'8cr9t.X^+!Oq)dp'K]4/[]!["6GH2S>5K0m<Fa2$X
%";V9qC23lO&sCt;^q*T1+BoL]W*Q.+k.^;Z]8Q;u@%0[:aOVW<H2Shi2$"Yc?>N?QWho7EQp!]LCJM)QPo)WCs.,p&C!J+Uh?'Z^
%#=F[ubKEmQP@7rjPG(R8F$Iam,ckPb/r?8nYZk^MBEGNg[pj"`[Y6fHW\q7@S7;($er<6kL*eUdj2)7"Jub_gOY2BrA@FLRTh/@1
%2G+julIKE2MC_J0TjlZIII:n%9hh:X"oAgGo=?:g8Yb_J)nN-X\GL[\,[(K>k3pU&""-WVbmAQoP*_=D#u4p<2@hJP4a)Fsgr8'E
%NT?@&e_Hr`\(\qd8<Xm^+_u\s<X&bLF'e!DD,0!OL=?@<[<[;Eg76/aXA,8n$U1Ptag8GP:*2$a_AtLU!7I3eMOn9odaB$iURIK[
%2IT3)-`uZK`e^(R1]W8n`>Q]a%*f_gHh1e;:<^tsVC=Z,<&IWKm0?XNb+O&H,Z<0kSu(rn9iXPLbf0?AUoI;J:%QN5WeRgMRhb<E
%<=Qp-=1b2d<4*aPN!<;4f%"h<K;o,8*E4n(b<]-t0icaJ)KZotC+cuq>(EC)'HV8u#Fu8Z+<g>,3'JVB2:r`7e3ST*'c^2\).lkX
%AX59eG+2L>26^;;[^O(sc&laV.s).tX[lS^1$@[kRHSD_#6_T]]%WUdQ@e=8CQ@"kS$!OcTW>1D-;UqML0bXj,dXXs]*StYg02/i
%UL2R#;)`WcY@Ra3*qW10l2dcu[EYo?!Gn%ijK9P3X5DAsfuXoi\+N.6=pid_f`f%aFZfts8-srpO]tGi"P2VKYG*":05VlaolLnb
%M.[nfa44'g8OW%5!Go4L$Oj+_\<a-Q!:(eZVt9Yl^aSpF*7NH\-ZFn%`s863,s5Z*D!k?N#-fj#QF5h""l(_r_fDIRk#gstTX!OH
%f7^kg2m4X^WU>MmkX*o4=S9j\khl]Ca^AFQY]!Qg>:U$^U'^mZd:!L.DjSh&Jj@k5&q:cCaJ9&b\t$QBXT\kQ]Qle/HC'i..;Al7
%Ph1]fJ@`9p*j$1l"M>/,gZ6rK:\TcTiF;p)8poARL3TeGaJGUR0Iu<\'a:M7n=kLJ*7i^.gs=#]V4o44Ji&k9LRXf1ks/@kJE`e)
%,l<M/5(VmP]>:I7#bUuBehlIa=O^rF`Oj"q/50GtDb1Rjf)aXEZSoWJR8NdH6>P@"](#li(3&*79lBPg8HZM92PEf:iN@*U=%92`
%b,\JBVCSP?!+=Vm4%sZ9K<u=V7<XWn?)23N/@JGf-dZoUcRc>o"G1dYk,K]&_G$&[]95Z^i>R8kBFTrncbrf8iWb^Eia.fEP(YP%
%#*>eC1V,8_2hIHg2["u(0kJ'1QJO1djGqUtIkDb)E^!HWNShE?C^1M$`S_,(03:gO6cfQ&Vcr$a0;9EJ$"Fj=j>t@DDS?R'"t+C#
%h95)FiW4QGehn!-eocD#@2Q([>+8u[Vo#irFid6M*5K(#Q_<[I8h4Vq:tbhC>*hqg"^5FGV)=Fk-im"7=ekO/C]1Wn`2eWuKliYi
%p6uUjZOj/NQkl8k9]i:2$dX=fji6g]:j%>gM[;&gq]^5dDp+g-ICP\#%oY>>8QhK$<g\M`a3>(]/.Crb@&i6RQm=hgMAlnme?YIJ
%#sngG<FdQE<V$R@@P7ZGK_QCg/Aqt<R[*a,RCgOYVg6f%;QMn+[!7;.-Gaqq)W/`^)"H*d3@d%W3].QKP[$F=I\+[2?tZc)(cF3A
%@X2?`O!KF)`^Q><,(e28',qH^l]PM4N6bVZE^ZT^q#9N!-,NGXl>i:<a53OC2j0rAr4;&4l&Denp4n9gp>jA="*Wp$nYlU[lt@7h
%K0'l#,>9)OkRquc>3_jK;:W@&Qm@sF`;'$p"L5NgitreloD,NQ=],&_ZAmm1=#LiBEW/eJ6?GOn-);JZ;5Q[I/m'G.QUM"X9EJ09
%`88LsenZH!NM%^p=Q;pq`]_1moAK%Ti!hkF_Sj-PUimEb>uGniaS"D/l4dH"&4R3U^pFY4Q/gX*;?I=/$CaFelfG_i'B!C'du1\4
%8/,5-0MOohLah&&k]TL5b%$5d.=u@+WVC&o;3[asO!n63e)Va7#Ri>f/4n%b;\tXVVP=DEb0B=M=Q&]V%MC*NisMVLiI[q9O!$@g
%I=\2@S)SOqoV+Gra`pKYZ>uRm#DP0AepMlh$5:O80;Lqnrq"LE:9*tq,U=KVrO(d6*7J++,*ilb]eW58R2`7mlTb(=``._[B3X[1
%lI#-,[pRP6FC#P+'pK>8g_3YC1jCC-'l@25iVj#c".LEQQL2RUL*:!B]n7<iEZ7,KEEQ_>Am(EW-2f9TS`q(^>>O(&N\h_kbr-Bn
%HFUo!.6C;mWH>0,mDI7.5+*H%nA=pmd>)q@<aNW5OSeW^ZOnni799<UXbj`?qKTR?i!PKKk4[I5dt9.Cn-EX?p#BIMj'1eXNn%p4
%r29b%b/G[SKM,]'4E\oFcot5%JS+SPU(jVsh'l+gY$_=[S8f0X\6XR(HB:fNkOR,k/:0>_b8$BI[Zcq3!2Lnqd.KhFs5%09WJ7.j
%A?&H4"R?V+;iEaI_J>q6R$'@/,pK\<$qMn_i08a3-VOk7_CP[%>$@us%Rh?@<sY"cj.mJPce'SrTguJ0aeASN\;_sK'hTeG,X.g2
%5)*s^KHs"bU24QIZBBJqWldUWF[4t6OY>pAA[CpR45M*kYuYOi>TV@jS33-40d=$H;Q)mH6WOdQ/Lb9]!u2a>>K!-)3c%H]J%8aN
%>'^d@Zabkt]2nC_`@W%ircHoMLVj6pA`TGp,iP="L,I@N@Hs@B"I&>JJG$L`'"Y7B*L_FB1(^H*Y[Na26`?S9b[7[ge-\Fe3,q=d
%;E<:<jr+]%`'%Q"G;85o>alZ'<-43UOg9ti@*T<0a50Bt600$9q]i\FIP&=2W,fg';"\&,E&_:golI_DP032)<&QnnMY'E&>&Xb)
%LPLU8SBI1NaD,69*22kAcn)\d9V`>-9gZXk9)(5\X/4\S9/8;lY`Z61\H"-;#;E)L^bf7!Dh=<b>)es=XuWT',cO3VCA"GiXI)am
%B,/>D@QUa9ZZE?_Nb'<X_$GeuY?&ij^Oj?`Gk,Z2#NK1.3>g_"k#Cro?,>J>4F-YZ*3AX02O+P[RFHYP-4i_j-;K@h>Z"$[ZHCWM
%[N49UCh?5UPnrJ!B8p>H)f//TPd79/Qtq`?9t?(WfJlasSma3j:"g>hqs'$0AF70;W1@W(Z;_UMRsg&d]C2IImiT:`Q`@eY`'n?)
%>R1pIi]3&uOUFhh-F#_$,UaMtecF?::tTmc6QP'ko2PW!QsN3O3acf`XeoW-f`Z.E53sQ6>NkHPOr_H)8X9mrE#V;PA45feYFL2e
%ch#XEZh,Xr%@BtqiSGLF:bO/Sj'"+J#:sEiZ$YH!TUD,rQE]X0*I,ij:?$Su1*:3NWY1HkJ6&6%24+Q%q,h6&7msimp<s5k8p48O
%'Ss3%O&=f[6lEd4_G4"%UGfm7MsL`ip2+@K=MA&G[/"Q?ORAM3H\Rg<#[tBR,RYfcWmiu!-?kBN;F-*cD`.KKY!</fM;]_=Booqg
%Lb]WjAO)M4!m-iCs0S8&[D3qF6Y+/Mj(.U%a#:V8Efn<\U5jHhnuD_^#%$RT_JQu,q/*p91'Pu6Ht"oSlE`_^A[o#!@d1D%o%h,;
%7p7kp8J,R'2bDIh;T9$18YO-m,cUTSPW8#`<Mi\fOhcN9Y(Yrh_r:NZRe$Z_=,Epd!7AE"-nm?pN-2k%>oEs8[OJmOR@]+T7pRKs
%\I)/n&-LLZ*KmhDLh)lY745Bf51XK?%"Kb^>ImfY;=g`rh[-pt?qTg;C09QW2@FK@^PVUgN$P\W=pY"#=Q;N<4)SqTEL04LKnV=r
%.C2K#odO#Zn^MudnNVH!abVVp6(Cb;RC1=)/]J/j_S-2N0fk,S,#0eUZSAeCFs/!A/dT''dX/iaZ$=<k"'j<p#9JckW,q_HVBEYd
%##bQc)lip;gXY3n!\,g!.,HE1Dh8KF#69(P&ug45F>^6&HHp<Jr9F-rA0pr4,c)/$pV3\6-`sGrfM+[5P>^L=ISkoF_VdN!m&?%b
%@qY')!Cg1A,Y)l\F[(2lr_MgD`l@jR.90]Res*RS%kPH#kY]UMPrKcO>bQ^al1dn_MjWeWZB[kO=8/l"G72gj"HpZBB#TH\@H-so
%4"Q!')(506"a12N9'[)W<)sdXIRqH2,c:]\Kk:qM<-:Y<]<anKObCt[!mAR-X^jK8Y3'0ATT)H$W81ErA%C",,94)\P@oe3*rck[
%nH]B-)irSn`s!HinWRT-[.1jIHT8`&_VmA#oao4k9WiMi6+5,)0I!%pR%:l>p3L[]":<bF&_,i:Q-+jld),5HWUSa&CoX"i"]R-Z
%KjtEm)DJ#56+Xu-S0>JYq2SYu*6,='mT$lL1Y!AQ74FZ/aRiXc/O0Et%V3`)H-VC,';'AP39<shUKLt"aQm49/ujP,-lPIf<)]'E
%/<<pHiXI>Vn-$[db>oj#K&^M#Y*J$^g,54u*ZW>"Ipc5Y@1!+3S92_.`g"sR%).;Ugg',C&=P>6eQ@dGa:d.1-JhI)=dD@]qQF&C
%Mnns[EF:b;;$b/\f?d]BcN06KK/tceBJ7Ka!_.9\_6On/]pLl5,C'RK3NCP!q,CbK;1N5gMD;:cbbTNI;Oi#D_\JQiAD8g_CD+).
%B__QUG&%f[E'aU\@4Q73\cE0;P8PUbKf4.B*MM!1X;YZ(,tha49dcb6SaYXo(\80!Z\q#G>*PO4UA6%'*D>_\hnE8VB]E5K`n,u/
%:.,TaW#JU2$TF[7DWY^Z9kq^*pR'`JPo#Fj]n6(6"2CP7g-h"'C,/Uk(Re!r=96l;f5%W*p/G&Y't<]ZS+M6m@V`t[@I)BhFQ5qL
%'0Xk7<+6.X$W_0tThrPEqkCTET;6.IRb(bhgYF5k^[-.,'qX#jqfJkM$d"9kGK7tQ\WHS1UDcaN5W2Qb$H5+!J\KWBTBZHoZSbEi
%TJqZo<@W*#TnW`.r#I^;;BH_,&hYAX;%#g,2Mhl)JbA$?,anZ(KOOE(hAF[MG=b^"V5%#O:8S)hQfs@=9b3!dW>8+6:uSuh="OcB
%R?g7umQjDgHk<19Zcj:1qY$_9#l9fk9)o\a[<-pIP>L!KZXMg0`cO(L)`=M2d(3m3\c=&Y=D<Z_VflZ2Q)i0#&^ZNXVJB)uCBQ1D
%6Y1BQf,ZPD6rArCb>t^Yp)DV!!2c+.^b/*XLp1dbZDE@t$s9YgL)a@WVjbUu1cu>?d.^_fYF";mgi_6!>]\tcUsY:(&\qK[1ohuk
%WkL*O]d&Gh@bF&!RT*#q+m(Ogc,-tY$'?7Y2j8H-C=!#S`U3S_QYISeb)l6$>/@6,;J<+(KV"mco*"%?624$IBn5Hsk]*XDmR2lj
%AQnKZWm-t_(Q=C!_G[/1G&Wi^E)7>p;#l(\2[MNr:OS<j'm?=g1k9U?03f+sOI!l(<J<lsU/Z*3ka)l;V=ndrCL/8CmT$u?psj63
%es^3(HOVJFB#$<GP<e'q[jKQF[r0B?bYUGc)o$#+6QOkaap(%7X%WL\YXN_%Qg6rr\g^<RVU]MOVc5k61TPN6W01&sn3tJ%S7+FZ
%l;R5-!ud/!-EXG(@B6Ed</YP?I?6.0Z+%]/Q5<\8or23pJEc%b)qnNUP9dO\nX$<V`96i;)=T+!E@%u5\EijF;g#DRF^JQb?1KH'
%n70E@IdNrf^78-19e3WI_1'X]-:s,Bj7HYm3b$%jf%(1@:6=B]#,c.cQWkGg3%Ha4h2DB?M<Xo^AtU,^qXA<V$Xl)jh6_J)l/JKP
%W\I#mOmI:fD*1%a0+FER>Knt@hTq"s0;%/X[Osd]Wo?i3O"cR:'eWC^c&HU4QVm=i0m%jnA4`.ePLEuUcWF4X0kWLVL/X:-((f'a
%G?Ve7&$BY$W9A&?fU9hi*Xo9![jk;]Uq+TX*,LJX'.o4Y(ZBAISco9p9r=?E_d'.=fV7YiqD;$=7ig05%I8lQ/%VfN+%I\UHqGib
%U;-f9Fk$4ba9cYK&%^f`"rH.\pBN\Lq7po(ruCo4WDc8`0ct-Y/n@.FqG+q1%Ab4&(T_>P_b5=P:TN<ZB$?M`IXcXf-HG_VQDmEd
%.#hPCZ4(523<<`^=XgmVc("=`U_4V#MnDkk%#C4H-hb)eFMQ]pQIteZWfeir]ffkIp=sY'K.G]GpH0LT#Mi/%`g%?Y:oa!(OK!MI
%65/Ebf?,E+(bQ0E2Btm+S^**8@EqXnENdVc<eY*0Kouci=hHno75.;C-]3kQiPS;!,[ikMQ8Xf?da05.dHGGSJ>E#'=W$5]-ENY.
%8E1+0-$R0XU''b$G,dKV8q;&B$<%DYC!?u3c1Q+`pf"a`;Vk/%LO['Ahkc2;_=#5fi]YGl,n'#/R1Z^DH%:+o3l(*/V5:Pq7kh54
%Nj+LiLrjhC.L^-9e":;GdW_f(SYR)2m8hE.&Xdemrh<F1ensABf#-IiMUbNa^ai:fO0HQhVif6*FOa21O$X,sVU-mMXATE441<DU
%^n`V\)R3\u4Cnnig/"KS8ATa_X-%>-(afcCkn<'*$:Bt:C-RalD5OqoYrg'2Y,Du`gPnic_G2Y"bMlFh!Y-j$P@r3IfTub[8c6Gr
%n.Y0Fp4abKR]pi6]=7b*g&1R.0E030m/ClbhN[^AfK\fjfuJ$6nJJ1J"+#=!WlYC=Idg7:>R*"U:r6us<Z!oTOnP<7lO?<[%^;1J
%Xkjl.$@=3sWumj`7*W'9Rgl6k!MeC5A[g.3Z^(3]:m9[G%=$Y"1uOP+W8o_X8qr[FJf<NAHcN5tQ7[.'n=n^Z$TLmOGfU'$P$r_k
%;kOB23>s!epl=N-i7Pa4O:,1g"Lg)@*s=,Tq3i9j^aNPi#.Vdooh2^I(A5lR(0EqGKfLj0c;[JLXkB8eKVF_/db)eq(pASS.<V0h
%^t`pNK*Q=:q4p2*d,1Of;a8OFKk($s'0JKqPA[pQj<ef)[n4&6O1]`94T&B=)h;qs&MTKkYYC6G!iulI:7g5'gg%O_41mlD"/b-J
%GY<!#:;fIg<srS8-<Umf8Ot%M:mq#m'K9'QEBmqBo5kDA*C<&Cb+EerXLia;OlDs\>/\_=`CC@9&.EA,St?3:?:1]C`RlJ;p^Zs)
%MC"Y;!<u4JqC!'hf[:SrSI$#ADq^H#k#=IY=pnW8GehN<.o\Xr]W3GQ`<32CP%Zrt(tH#*71<-X)A6EC9#UlP2*mbX^p7UI&/>_C
%W@grb")Np8U#H)gBlhTEp&m'F]hg1"_5aFInU]O[/E`A:;SX&J2a*<i1Y44X9o4*3rF4.[.Ls4N@3d>?TP*\[>^.!.GQaAXoq0Gm
%2:&Z!n:2D:g3IqmV.>,YEfC1-lkH_cBJS-Ve'Uj1"F33DXkKfGn:9d&%m2tiD)'0SYln5Y[%KOoL-c9nBssK>:mIb:b?B.8JBc+d
%4?QpZeISpEB5*Wh:BD,h-;V1D6H$d'(h$6sGdNKd*Ipc#UK+K=0-T<e-C86ncfK[+'oudM'-6rAG3*6j'p&3olA\a40R1TnFt+P@
%^#r7lGVg^E:0jiD^h?4lVGo[nHJO<RnUP?P;5N7Q1F_Ba4J'qpGKn/+hm$T@?Tpn5bLrU49#UnFWXKRs*aqrn7*0Zek%)+,9\p8*
%]=VXYp]rCp`2]!jB]qQKQRkgr%5W@m9Rn3[9[nnt]/5E?_<Yf]=LWX8e<L.fH'X8tOoWro1&Q<=9&c&HB=3mQBu8Yj1r8TPRUC+]
%nXD'[JZioUVi$0Wm8B"QHVd4;8c5-##!!-L'\J@B"]b7Y%uGdn$F,NN+d":S;$@>kF6ZA4W)hkF?o%2$Bjhp&,luJ1l@USnYZ??S
%<t_`Dc&G3<,[b`;VJL!e-4rA!q+!C.U+Fi,'c4B9qi%L1BnG/XKRq:(\^=2]G:+D=ng?/(Y!g!HJhU-ueY,D#C;)(0Q@LYp;<1Ls
%BJVM2rCI-=$8VF@#kOi@14]bt`kGB$&n%cpcrF$S]CA_r8VG2k42INlR&[gADGM5O[(>R[L)O1;`c>"-;PUP>(/L1NNa6@um!L0R
%>e'2t_LeRk:AcQs7V'(Fr(2Ej\Y/pIJj"3H[j\"f>-^Onng@/!qi_LDbC-CGB!L#F9`7NrXQ,=@TC'g9X#2BeBSNVbP8[^3P0K=Y
%=3j\XjZ5EDc\,\F-qu5D4\F24\[1>sX%-lUjc#eN<]j!-H2<`\`eFfk>U:.lR+PFe2\CI1SIJt064ueJ^GPeH30\+T\guKPGG1M0
%9[JmP3XpuAPR[el:8P;e47Of.c-+AOUBkEC&'<f?AVot_O8rDJ2['KfYH'ZnW?;5-eS'"iJdM%#";C,*#nAYcA)L)Dns4k1KXl_2
%$PIEVCd=sB!F]If83ifC_(dT6!8+#6;NLmGjbcYrJjst$*"!>*E,K__!ao6%$PG;0O6UrsAj8iQVo;/4$5*?f3l.L6_#t!Mi7@6q
%_CIU5aRLF?YSJOXh@0jBZXlYY@*V1IcB_fO![n;O.^0^8TVoE&+)%F=5-mn%>U0sZAlT-aeB8Iu%hQ`-^W/>)`#rf@c"On7MRL&J
%6)4"J;dBGi[GTI[i*i#=&eLA,\c`[WFU9DElOk1F\etuS[?O3SPAT'm5M*ILeBrEA90cUKlOqQ'esj5RJ9s$&(^tF'Tg%'S31Jfh
%d-GS3gXRrS8F<YWjA\[HTUr-E9&P>&/"E;".]la-eV)G4l!7F=U`pS-<.omcRUHt0E*[?N(>tGgXC[G0Llb5EA=]ue8ul6GW'Ui`
%jHWA38>Xj*ZjJ7@aD-u>=@f:5,O6\P0V!^J:-r^9m''I2P;Wpe"<g2B_3r[VbXPom'K#'cRKGg/<.ol\_U(oge13LLU\KpDfRst/
%+e'Qe&5q6,.&9V(?PHBTe^C=KrP3Bo`h;Gd:6]r5>s_*$^:B>_BFn(8]uhaLN?*O#GZ#pr'4_eh<LCi+;njPBAJC7a\#J_[/.]ps
%:`4t`i&QcBUE\bS.\]3ubqR8<[(4O_)+>4#be?mk"k`K^Q;K*\LJ\qS]WuI?;-9Y<'"m^AC<cK4B?07"Pu6A<"\'B[XTGlQW9+Bg
%K;heb<ibo$l*Z/c8R!n5H1+dX"F&uj:0?O[&pN-d@(oM0rdZ0n@dlbP78WsJgnhs`_GHRck92m*<D36\g\P>@U6M%f^WB9*ZPO\i
%MOSBip3*1+NA:)>N;;gq-[ee/pri-9[@o?LpBOej1qlLN55$F#;WthhBD>/ip=g<;M36):GZe[(\h'NB/p?ruiOCA'#Y+4h]J7pL
%TUHG?3D+W3(hjM6<DPX(3AB^Rq3#H+^:A5We:5?8mDb-'jT=#'ju\IF[Sa8uh#9p^9Ht%294idUM@9^tB3F"3;=[f[9=eS[<AIu0
%eu8)Np8<V'TIaG[,)k/]r7,uK<cRm:h+W3^[E25T9>SnFk'enJ&"f;8+)*'\,*;$"02.h'=cg@WQc\a8lqPC;'\Kf-=:0i1g'G)C
%kjm96N!,@,HGN;QBm0LjQ(97<22oWBdbJ(DRH)o72Wn*d?/qD%<u#SaGsX!9`ZW9jWQXYM-+AUX8U7T0enYdNP?@O;=c*F@`]@V:
%?LG2rP/H"b^Hj=+L9[Ol0k-;"Ag(=b4D:?Lj--c)pkue^+l#VAH"9([/R1+TX7OY=DS<T]CWK'C(*1r'@5SQ.KoAqhZ8_TdA2(;$
%Q^X.lU,B1.d7U2V@!+=ZQ\h'(,W\$W%b5jt`'Z]C=sl$0b]7XOMk-\lVasbZ@cqRZ6^SZOB-se(fTI%4@_msCiS_\8Y^3Qqp7-L&
%@V<g&Q=EFuf][gj9M0I2j^M;rg.@#B\P8K..)iaBAppGkP/XhGGd1+6dZYp#Mk-?nCMR6m<:1c-8;t773Q))Q(HZ^+/u.dO7Uac-
%LI`p=9A)qj]'@5Zh'8ZR`!59P*]pW>bad;t%c1q7CsMFf[iOGc`1CC\@M@mlAE:Z5(3[)HYmE>B*':D3Z^o3ECg__QRhm#_\)"i+
%Cg^[]P8>1gSXiqo?>RFFKOA^JY\%$[m);G"lcf]kk/@O0rVRuqG-8X`cVA:A_73Mn2QBD_.s/p/ls.48RsLsl\d_F$*O`J4rNtrq
%Z\@tlM2gW!XHDGZc7S1sO:rR01]<c5fF\KdlkpR-c**/<^s%WU@2nq.ah-iV7`F*>^JZF;[bP=%CNa0^6EJbp0u8#`"/AU-=)Mtd
%a);>\lkq]/G(eD&*QM3OfJF&7GF0$_'36^$=C`6-Y^LOoe#+ag/uMH\XK8'?kYFS1DY@OL9tMHX?>S=Y<Z-k0fPsm?M`m,cH*L-L
%nB?f]AaJrn^eTi-THTWOlUkHuJXq&VCge^2^BA^hKEDYmO3b<%`!?U7`Q>Fsm)0MDBu!Z`98i)b>!&C-Q>5`OWY@DA%Ft$\OueHQ
%U+2q(Tg\Ps)HA">?8gI\#E6s54)SB<Z@IF6[S&]bi(eK]hkIV2!0H%fO1-:'OKdq*H-T,9"PpW:+L&ol9%(-PYG5X/!&e[ti)[YY
%2)2ra^mDou60Sk9;Yp.ga02S1hLCQ?8WSqBK]DiAG'fCRD]4p>O4/S\-O2Or).'U4k]):arBt@$HK:AHhlQH@/2P"Cl&ff-I'_7u
%ZAuj^/'Vt,:4[=aR)Z-R^<k,T%Qd=ODH;MX<_>;<f:>uTFL-S?[;4+Lmjkmr0::@uhN0GTNZk6gQ,,DR.1E1WQ[Rh]$]=1\3u4-_
%dEUqhJelQg"6@E0R;E/PC98H.%&d2a;S!b&S^$E:F>M.;WpYFU<^Kfi5W?S+.60a%B:'qpm)=?.5f4R2`]#D"q?`R.7V-hHQoEF;
%YWuH;2S*&USoCBFZP!NtW[F-02D(lW)!$-b9NU2:l6B`Re^]kU"5OBn+e>aPF>FVd$s-%4h$euh]l9.^c1X*LAI!d(<gS&31>Rmi
%6^c*2d/lsA7E"D%-*S&IDMIg%U/IC`kA1V0A"0/9CGoN$Zct1s_]6\?2OcF2Rh9HH'-`q)7@MOSA2Ej_Y>bg=Zb"d`MNM^U(Zp`6
%bXr^!7,r)U2FI/_A-=_6S(1>s:!%"73+__2frV>/JcaVak0nthPKg+l$Xo!H+i&hJRS#J*S^X<..J?Tf2.$=">dK4iY1X4>f*iZ<
%FuHPB28_BLM/-?PPW:=%`fh*\OpnZinO.I@KKDd2cSnrgb\/u#C3C-<,tpnF!`RH=FrP0mZs(!5K'Z*=@TUom]qQE!qSLAY`hoA/
%B1F4e`7E(/=[e5CF\jj#bWgb*Vq1Zph:Y9fh0mFWjIZpR4Sa6mYLTkROARI@1mA"5;NbnU?Wmn6od.g!h;rUrXUPbqI-p>n]RWj'
%>=)CI>Sd<>1NPu9!&J*oi^4D+.bAD<ig''@C("U/L]S(-X?s)5,`U&gOh$-#0Iqc)-'0g#HKS7jW_.Itmh$mXN\EC)(>>b</"L:T
%2'L.T/=pO/Ra-k[iD[6V'BXohi&JkMR-lnQ_[+<!T3r^f";qW2_(VDN)@+$epWj&Y`%oXoqUr(0#c"$*e:ETCX?A5P9(&soBqYT@
%ferkk+*o.X%`S^Q.W0[_"s4\j$[u&%[FJ2h2&nrZ2(`'KOV8H!oO&[E=\oFRdm/1o7kB>&,4+9jLh\mt^.?.2YtlO['YCQbW;)d\
%Cr?nlH:\KeipEX(8k"#9Nc?b&HZj+9*R.BnLn]9X6QY%j?jLWRe:ocl`.gFqJ<eGWkdjK#pdCVDg[u0W+S`:J.P.sW2D0Rn?p'qh
%E5<s0eI]2"FVmQ"Crs(R%;c.;C@W@u6M8[TXu*H2(1=Te3OAr@q!d8-"4TKQ73c#9;UcG%MJV[I?L_p,XVoU?<^];oCPFj\7G)@[
%%Z5/Ob=u;HFGjNO(K,@55KG)eRD1<VZou"N_T`6&h#b#!="._SK:g2Y>:mhP(e;%hD^MJD\:s/f(?DaY(?!G9o]Ye`l>ZR>&Z`-r
%6>W^AnpU5L\sP+rTrf)JAI5'4*=h?kLUMA"n*%.*(,.,Q(N#YS%L7ct:oi.]C"=4(FXr/aTrkcB$q(SB&S;ipEG0.-/@6.#%rKQ>
%LUIK[_FtZt!nJp5bsGV;]8)\=>P(?jWsOn?qXE#nO%-PXRp_r*(6Ih'l%;2JAEmB8Mrqjga;isOPUXsi-t;na7^b#,mLn^((06-9
%(.>ahaJ#rU<bkGcO,%##[806Z<MjYjHmH:+X*/o1UmncR%&J'P<i4%.6oU$+TUSA0d*60il"7`:V<KajM$aocAZBQ&l;R@]9B*7g
%>=$nRXa2l#^c')c>.BF2Af)&jX+8HqLACtn%odC\5sj\%Tdo>NTS?i(em%IT+c`nRNe5i1fTg7'VX+uVRRK2tb5/u1o-85$RGpRd
%@H3fMGNQbPf+U?b4_HNE[nCX#8*Q<a?,+N=CY_p2Q*o,Qg[7ZkMd:D(=[WAB/3Z>0Ao5,NP6kdL-"@,rf;ufY3)F6lMpqmhR^L-R
%NLV]F25=UD7_g.LfoBW&>)6r0+m5:_1iU]OQqtcb)>_K5UK<q<0s2DPioT:-/C"egB<E,ddI3T%WYs/lDIfK1@J2Y/F)B>8dsEF5
%W&SBEUL21WT\/M5Ps\OXW'I32nXulb-tF35!mq[Kb).P+c'#iMkI<eQqg*G;<N&O:F,Y`k<J$g;:o:5q4hJ34<=&XESUub4!:hBL
%.S:8G:m<*>+ci6f&tA-4$3qYCI)lKXjTdI?)Fln[j!1#MP^*;MmY-F$^nE0m%!,9t?JUsF71":J$GIr',s]:P%sW%j!ik2rmeXjN
%9SF@b@p*%1a@0h@,"kn^U'._^="$ZPiD>c3LIecf-0QKV/l`3Qp;"N72&<t%2B:^)NT_Mo5/^<>dt9!KBV6cHQddm9$>RQiUVJZI
%"Z>=&qi/khL]qroKEF:^_TGX<h3f\V;53',DDWh)"oYX5GWEXq7Iu<_,RqjR*O*k8V!N8bnC-<dB6MF"@gt&#Vi9/EL/rK?R-<eY
%:)Ri[0u;Kk45A'iaR#-3)W="#dcSR3's@[#"gA6@.:*<OPB)nY11S=!M/],]TQ$fl.5'Po:75O&V\!Gh"3aL`XPC$Y#WD--ZW$#/
%U!-9r;`:GV;ZO"eJ&1Ic@'55?4,)tnqY?uS'Yq^u@0_3&?7/Li.DUfEAW<2]GZ^Y#-Ds[c;j.PV:-mQ2^BDNs.=f%&JE5`[`Et8>
%_2OSfC]c\/LI70LIS.6XGro=BW&rU#aXL_V2h;Q$ALt)W"d;k/(<@p\bVGV&;sKEO7S\fE%QbI)Am`jE'Po#+cHj!LA+a<Zb"]^$
%9pWfE@dQPb7U7dPgV?O?T,+pc1Mkj2#V.h[%]sbMBGQQGC"sDkY7O$bT5J48VPI#X$V-GMJcukPYOkI=a_%93W@:s1_t!hfRK@`?
%R\3>KM1_PPP^/p\RW:04B@N1):66$;$#!-B7eU\B$!RCA"K/L/@!9c%)\-\WQJ4=<7;1nc#H7!e\2(_@@25#*F?c\B?Nr>j.j6N0
%71"K)daQ2A(ZP55a->/Y^[smP>sJM8f((=KrmI.PF]FI:!")S()O:K&+b0k/FrO&Hh;0;0_'&q8_\<.hh8>$e!Z7X7a_K<:_!#[t
%BaA,=(f]E)_!#sB5R7CL(<[&(#[detW!6Y.#,$_O1]VTI.0)0$/)3)a6^X4\eH!g\_ET#j),oMKU-/jN"^iMoLUhX6o`Z=*ItDt<
%$fA`\NIG:`luDZU?S5ud?T]rWUL3p1&#3Jo?u)O0\\,Dc#T@++ZloD_iV9**;IYq<H\^5_q,Y/*32/]HoOW(Kcm>dF'^oe.h7Jg1
%Sml(j?FI=mARD=7Yc9kg%eheY%Id,(k,_0>WK3SWf@epOT&RHe)S"R$$uAS;p4t=N#3OlR]r)\q3V6=N*1_Nr3^i]V',Gu;Hqc?B
%E;qWJ;bYj5[!R$FH`ZYupCn:2m$9kV_\&c!)IbKsLtkiI0Ya<+!pP/C6C^qIja="Veb-H+lq=u84qo+8jNS[WZoMg0(:3T)H=@f]
%mN,"tP(6[t>coHO.9s2LK1=6'i:k[K*OUE<SRY('X<`Pd,?S\T;hs_;ah>]74n5n*rHdH/qaJFNgZ@9l+$@8llTXEV@d8gAs+&N]
%:qhkC:(/\XU@i\=I,<l.,]YsYjqZs%";du*amI#'10u7CN\Q-CBsMhB0k![NpY1OM>`I3![hBE54RE;Wo`M)c'2Pi>:jdfXL15Uq
%\VB@'@d]J#H0'We6F0,Ll!,KMoa<XQ9,:k+)i=sqo9!&TNI%q[S15o5ljT*3H:'F'X!r469*!4R\5P32m"F_9^S.#1T@;UE598D1
%r-X2SAQk1E6h(<V%E85JYLhE@lp>MAXLR<E4E1Gr,r#2N]`Hd*fJZ\"%"F,m!jfO'&,15s$#)"R13\8&g]5dp-HlS_'5R^F$'bMa
%oHK-5:OVeqpsa_KSkkt-8's.;nTY+dY"f#n^+Ol&W]kID6DZekq[,iLhsj&Sh6E'3bo[WS$cu2Ca5eUMLGZ_9LHbD\bYmfA9ka;q
%S+t_qniTO\m^M_3<$&7m<s%FHk%9aS4><PmHW2&j'eGTJ4CR%dNBCLah*rHN-eJes:fO$jAr/M^Q7$KN@5AA9"#bd0_X`Z]mHp;O
%_?lF1r.KAurW#l!ShUW';coXgACm2a=Irrb;U?fu$MOfL/5KBX@;;jo3*?t-$Hj*kFLPmoro4GW9b4)Z`h.qGC#T1s$ZUH\?oO3*
%/l/_/@ncHOeq_ue'Q0P/OpC+M]9T-U%#JU2QNpPRpoe[_^qkPo\3."V4J&@L4GEYe[&mnS93`N?jLmmp,g>L2)OMo)1Ku:46<H*#
%/@f[/Qj2\#fE1XLPQLH8%9<6mK:JZ])OT]jR_t!aoDD2%2[1:Eh'iXOR4$X.(05=CWbom@pj9(tS4D^e-B&U'0`d`M`S=JS1FK8L
%%3F!f+U/"E8)=sFXGW+MPt,I7hmu7cQ?lLW37p?/U4C3?MH.aiD4kJo-L'"e%F-H"'EU29iZZVRM.G;/qAq1I<!Drn3L-&sC[p+n
%Jl2+PK1,E3lBu$68V%'%lB(ZS:k[VMk-#*#1rrt;SVib[ohgr$Tl-;U+@n];][_$_%XiX^"`Dq=H$k3AVr:#PA[k7.P8L4/Zc6RS
%WZuL-$>6a%c-t_(nCbalOhC_oGk0*t4o*V]s7B+$^^9b\n$-79e/O*`f`1bXI=g0iFPOcN\^+?&nuHF$Z(ph_Ja7ni,UIJ.\l4XY
%VgstW\.rip11fuY8R&AS7eA$NH(MgDc7nf=2G+:`(EnQH8E-dq8[7IM#:R5LZu:jS!JNVXN\,'uk_gW#\p=R1H@Y*ej-t-ec:4)n
%o3_LZ]C3E.r4SHC5C`M*e[%47oAjc*NkdTG]mT_E%pqI!r7S..Ier&.:VQ_tcelB_p"LjIhnT*X(I.rUZerNBqs>IhHhGLY0AcWe
%Z\SKLh`6*aV]o4.POEtqin:5*jp/["p+Kd%o(haMkr8Y4op^_LT,ui)IXLndc)VY!55HA63GG7455spAVdFh#lssf'iTi.'IBrm(
%)_QVV6[^1.=l\Lg\;MFmqrHiTTD?*"]%4#k[/&[=QbWLTk?n8RlQ?!MgE/60lQ=Shq>+Ik7s.QGmE=kPf<7tVn`fB&s7qG:TBRim
%P\%MqRc-]%?G-.4`LC65Ylh(;[9Pin*Sse'GA(drmaa5<KZAE=:\*iDjLZMHqY]JG+1upqq9*ECrp5PUT=fIC8seGmghcMQ5'unf
%iNnG,.uaKNiQo)e)uq2YnUHYnP]t]G$\>A_PUq<O@83P\$mmP7IK<NL/g*"I78dTt@!Ul4Gu*jHP'?QpnCZ=m:S"M/=69[F%&,:p
%W1&^MHNe?KUlgT@buqSBPG@(Ck@bhR^Y\,\%O6-P*leknVNst%f'V%uBkR_"((Y@gNGh"o*T9K=?Oh%;X8J%_!_l?EFG/O,_2Znf
%Nt8egGAp[D@7n#b#Ek%i#Cc?K1/5!c>41`EFr=tcpZKj^Mc]<g5GS9U*5MVN6^>l"5/Gp0cRV[,#/4c=m?lG_8i_l'*CS2\9buR;
%#u#%paH@em]"@d#"t/#e!nPF4&p?&c/W1na@HWrb#pGT`Gt?]FRW2LgeH8C7E1@Of.PbQg0'S0phVJ[iLs_^1k?BmA`pZ&?>k],H
%2ll"Ym]biXmI8a4IsM\7Ul#H\9EQP%7T\^.n_7o<_rBC*\P!:I"ReB4]/6cgRh2f-Z?YgQ*1q5_>2m,QXnL)Za?7PDd8:NYqFU4a
%!!>k,!Z&l[a9G&2jNk@o"UH".<*=UZ5V#pKQm#qq87P/V7PgPdV\SHun-8sBdWosA1hoig].P!OkY59SRX!XHc4=WcN/6<gs6Y6h
%Y%>Xrh)bZ:_gW2*5;ZC7$hL/X:gaHt=I'Vf7MGur_[aeaRrV'BK)\"l`gBc,f&$9\S)e9#0Pm60dGS??W``?n3p+s8)14U,`us22
%<hBLAVtGAOVhNgT2S?rPXkk/=?LeFerS"H\O=/sl7+s,(57((hZko+J5/h>jpKug,jOM82]Mt58N_6+O>4MFQ<QclW3Pfha;jF/K
%V,tgC/*?ceIuU6<o9in#1YM=U%"2!0?,>iKp7Kl<$,f$714`69Y)CQn"G;S(OYp/k:N.XVS:5fH:fg$;j(IuNl,e@ON2>3uCVmmb
%H:<"`7;>`.<a.Q2YdmuX;DN9'SFQrm0T0Wt0/Q9/B.0bPn:Tga:"YBpimeL>$nf<m@9CO:8u<ue0NV?KIO.iGY&$`HJSCuce[>--
%'8BjNcPYeWfu5c#!(RQX/he3`;jT*9%bPlniIG.!LD;b&i%Qap`t\g)Q>a>],&[ddB[(:[jN$_Nq&&6t:S`!_dM,NaO42sk(M<US
%pR7sA#IXUJL*PX[foSF#k/;piJmMa!flg/!`[6@Z=WFV;:+?H&NG6+i*VWD-;GoQq9SOubFQE@oq37WG9=oSW\=uqB*``bA>aMdS
%%+qB9Kt(;2HB+obraIl1]S^^tk3kNfrG#3rR<2!VYd>j82j,O?a(qtO;RaW]h2f?0YfaeR[l3/Af+tEhfmgI@V!WWUR""4nmIKLj
%_jFI3,<4oQI'a8VK44uh"U[ipF%do2GKD>)-.^XCRg[)F_%'.i4sr1h"?rpRes.C7HghbCX!)(;dO_"S-D]7=[:Q`l[6PNt%c\3,
%Ddr5m^Lk;aidGFcD<SRq[TRS5lINH_9>Mh=-R!Kh(FNh%3nRN$GhZ:NS-1!9>1&D"CFBY.^3r_1;a(sEc-M0Lr6V=H=g3Yi1.]KA
%F;S"bZ0q+:'H(<1::eOFG;HD:hp5HmaQ_*NcTP6<]jt4s:l^SCbMLl9)aqt7Sd/q:F%NHa7%IX62e*nh%:i1/=S]tW1nLp^Rdc?+
%FM,2:QQQI.,bG2lXDEGn1rCe`3J9BUdn[coIJLT0_FdH\Q;C[Gq8ZA@Ms9oA._")5lZZ$m7=C5>I_-QT$)93SZ_\U&DhChX9j<hu
%=)bAAD!)tNdtDTVHG.XqIlI!(8e.+&LS;cDc9p256$\tVI_$DCJ;`YYe'J1TF,?cf#Ac/pD2'+iR70+F4_,#lr%\-NL>EY'%D=9Z
%2@se@N1eYHj3t-hr+>0_jU[+R%6\)T0ln7Z*"Fd#2a\*OpFY:dR(]\PMC5ncj(>X]\j[%b"7Puo'pmb'gTT<>4c%?&V9RA>fGJ,l
%1A(FZ.Qn6ShN%]j$p=l[-.OV8%pseP(:*SXfJ<-FY\>U![<B"On8q;_g20!/G6i!IVQGV!kI%)5e3i6!eMZclhEFW&WHW"Im[/=A
%/=J#5gQLCOD/D%:ZJ?@941tCfQjXXi,N'WU*.Q07m,`Y/4OEI*pX-nIVu4IIhZk7?GAfV3#6_5^K,db\;+)0AMA6\&6ibD??lTg1
%Z2#V?4D+STjrXd,;s?k+.50XL&o4b,g^!27&T,/^gh1hj-fD7`aH6`fVo=kh'PrhXFoP1]nl'R30'N7>&,>cpTQUsca-1J->D=dg
%gKZmmG,'9A/YZ6k5)!V1&742O*dS_AQm9%84p>lbF_<P6`X@_Y<^qZEK4>k\<P=:N2gDFTeMmh[Zm`sDE"uSp"]e&jd1P<i:>Qla
%o[)W!juJT:ES:L&nq/ZJ1tpJ[Uk=3V5T>=\/8<!lINaS*!R35=/uZSmY6O$_8hM*p^U/4d<fD`\S1%)0!&dW!S>K>("kX[2SPqEp
%+XId`DMnB"CNA`'f[UYT+^/].2V?+Y,ZZ<e7f::c;HaA\f@K[1)'f]'O\#?.2em8`-o/<,iF#P!0N+@n@%)f6:u7('m;7B)_<=!n
%_DPq<o?oL+!9)\\`272ZPOg1)fcE9Bd@uhsihBI]J.#<jLfNYMY.'@+qb7,.`lmDL_mZ27I2.t?'\N8J[$8X0TsqK+U3$R)K9u^B
%!M(O@,ZTRdJMM+L?D]*<UBUrgWHF@p@XuQ2!%cjMlHkBPQO>X.gBUZ3]I6$6-#Sb9<'Hj,e;&V7mm1#.3%2BU1/u`(JpJ&QEkP_o
%GTKUu@WTFFhH(+Ae!l%GqsZnH?^4BA%qBZf?t%.s4Y#QdO3s']W2mh3pg.o:AjjDR:*V6H#ZB*8#.a[HND&#jDR,mTPH+3pB;K6L
%:b,;.N5(InDAt66T.g:s=l2lTU"J?=gJV91Qu$URAQtKq]-s>:UGn.nW-3;7>3N;s)H[P,'r:rF;.=fW9b2ta*MfrKdK3_]fNK>%
%/.TTjSpNu!f325\JA#TDU/1VoGM:EI0XfbbYfeD1)4%I$0Xel0&%Bm$?HUu;%Zo4d3cs<fl^aL+Y.>`n.SNXDnkWm<2k(d<lqq4K
%kq;_&:4!%E,%>mB&<]!)r\8JL!W+2E?7.5E2%*!Z_SkYa[u4mb)g!`l/$KZ<F4_71b=![?^,q%VG;UW)Eo,As4GL`,M/I*i,FRS<
%o<,2'E,a3jY4Yej4Vr`&k;JAN)XNNnnuJi7:0FmGNBb5sBs2[c^J;Amr46.pp^dRKF.W)mY*m#@-nl05gJRpn[-Q2,FrrS>b$15p
%!ATq<*9P,?X3Pl!c8r5ahE)Z33lDnNi@h0^g!"Nt/ikKcd6V:>riBsIFTbH4"<48!!t&=!Gt&KN.?a9bF(Q'eB8)#SS@'P\8T#-!
%dB's1<b@2lAW*!C^B1GhV0E@,d_fs&[^4kd['4jglq6aJEu2c93SrdIR/>>Gn>7-L]H_TP-fOG>Ls>-^T7B`&lCI[`;HJWr4tCPq
%FVSe99;,\0KE=Qb9;&kR%2#1%ZeV'^An'g[pEA$djMMc.[bB/GklV#G$0>:HA1%k^,],$/9F!3K?rqGIFh"7i/J"PZL3<0b/p5aI
%Y]O]O98H/U#L$G>e#1'`h'=kp@d/252gssr=%HIX@ApgG3p/GHT?Ws>MiXcDf_nY^5:<tA(m%jap4k4%#meK!We(V*mZqsUVn$55
%["1r75-/rXnH2F"^ETYl>s3C.Z6XDG/[5=</JLBVP;i]7Je=OUSi`U3?pKm&=;sJ"7mM&U`@P^;n18P?\J+Va=hDZ%$0UD&ZA(M7
%P"ijJITff>aDoD7;B8M.Y:G9M]P(SU-HGl1`O9a^o!Y9t`um7qk;8RIgU@^I#Q6'$5Gk>1hZ]p_lZ+5:d>YOi0=TAE$3uX?hIa6C
%$5(G;:RK8YK3`Ba-CkmP-Tqc2WBZ$D4=\@ob_<TdJ2QXO[B2F(dm5tF-Et`Ek8FO?XePAgm6K:&C\pH;l"rqQD'+:;W,kHiG+-.4
%k`8H;YH$_po0T!GSCk*m[8l=/Cl*9`7;M)!h.4h:9\nuD[f^5pcZ@G\hu!fSMd(YHeIQ)Q:.&4ueNMFfl2,(6-=[;N;"2>5)L*Z!
%pTnW`+=9'ITD"3?b^Mm,JFl%XGEMMe5#3LK@+KB]cV?O.K3YdLj]Qc0=\T0+NHnH?J.urL8+"s]Bc2rjjW!PtU@=I\1\IC\3FKj-
%!&%7BDEZg4n(f_ZL+FurHlp5X*<<u3a.:%Vo?I-NB"/ke)!0EUncZSN_Vpu)Q9<:S-<XjQiR9sX8B^F!hes9!NVUkq7X!EPm<u's
%p4=GE;&"E$f`k-D!6;m?d;aCBI*OGnIkDig9BBE?FDJpein/GIKU_X9Ui;&JD*p'8pm![%F"nSg&4CmA6f9&:lQ*Bp-]8mMD2i6F
%p2D(J$")#r0h=5H0],nrDI9OOHs2m#MsemVnes^ITBK9ne:LK4Rfdc&GVcD\8bd7USo/QbhL2&E6.t*j_Rj45Nlc^AqGCdU#!7WV
%Tdl>q+*c-_,THD8WB8V;3&pN0/$-h.TCeh`ln)dPdK-14[;lbsZU%jOB?3:\Y5/nn$=J7K@A5[0gWKTUc#5C12Jet,6%L"*@V6Z;
%3"$[;<''RS!WG8bQYuoB2PgEp5Tnq(a8cUrIfoU\%b6W.9THuE'\`u[aa^1rmR%XR4X]-qUN[K7`1c&u)7Xd1,>p?0Laut@FCl)l
%@+RGUG)mU\[%jC=('8:3=a`\%K-W,Jf\OqY-!ge3j#(Qga!Qe7S@`;.^&jh>H9p.nDfmQbGkpnhO,nd>pP2!3n/=MTkM![(dCq!t
%q-ZJ.@E(^?G;^YN1a^pTS37dbY@<L,E-cB@d2/4d#^^0*pL%_Vk)Q:cL]c`qHh[_3_80Hq\PkD"-rC/m_PfU#o_`BCC(dD8&Ki%N
%!6JA`F$T;C\(miA&[IO$5!U/lh51;po[ujl'I]*mc:M<ab5dT.^XVB@*eJ9"'lFRn#X*/'g[$.,TH&6&T#R$_4]%_QE5l.bkr7k'
%!`Z$j37cmjPi*?lR>+@b=N*C5O14e=g3g\*%Fp7YBRLa"C*U&EHodHWR/%P<'T_@/=6mClSom^P&qbLjZQ/k0mVB(P36jY=8B[KU
%BgKEb[tF4rEL"3L*^^H9;.[6`<M'`%W(\7?<k">!/c$g-1$#@qVH8p.nhU9S2HDDrfi]ORK`G,r`*?JtA$tTPjbnnQiIc-jUr[^E
%`<0oZL^oss_PfP+'N:CKBb;7TQ0;V0R&^CCbM4sk)qICf(pE5X8E,.CM52G])p>\=6rF8:AK,K/oZRO./hE\QC6F*>@-?5H;dLZ3
%9Orqq$"MQ'dN,rV*/RrL0NGe<![>9Gh7SK(LXgAR?.M]8?!b6Wci&(cS3-Z8)1Ba%*P$Dsa3pUUIlu20H!%P^%1h81@;,R+QmdP<
%H_kEbQq[mH4:,elqW6(45%?aXR^dC>`Y8s&W">Gr94TrXdQ$aF:/<KM2Oo.@\B+pb!A6FT.T2UTDP<]9JIt<Z_8$C@"BZ)fH@R12
%"fNh>&l@dPf]EA!<p?^e'Fgca*&u)VjgP^;gQ90hZEd>dKd8:g!?qlHW+#c,[P*f\"S.$'7$'7:=51F@^4\2qLL[t$L=11W"o73W
%jWF:s'Y!\3:q*`gG))jT*VduT(S6TA+*o2+bQ/IjV@l:I&JE$+9?'JRoIEauE*%t];9X<<<]-t&m:s^,ea_"SAi/'`ipE#B;hRRH
%LVu?\H$J4TRjf9$IHXfaAID[B/$/8q"l_etKJ`=[1C/JtZ8L\LErk*u%2D0?cA7P7Z%`D:+Me9HT;%)AOj,iim]GC_oNTi@j\+nb
%%*8$q..oc4@/!]Tiu\-l$3ki29%pc;JA<)1#5]@uI$'G3H@;(ffM/%MAOAVTKrq-=R-iid:/In'@q2CL_?0Ji[oY8(8&lP)Ss.Q3
%'@>!S^/r(dL0o:'+$/L]Xl_Ajq_ESD/CT&!e$VgFYtE2CV;YOQq2&*Tm]Y(4b?&ERaK(P)k$"V$qpNm(;[$VrXtqIOi:Y^7,!=o(
%TE)K$`Ocu_G&nn@*Vk9$r*NQ^J+^jehu9mX4T;=0*#%k_Ra_&XnTW:TLR>i8+,iFA)ukbE`fIFSL%s'B>Cun@WBZ$p@'"',#n+cQ
%^AR9F:S=]+@E9(+iE7L+p<OUHKkC2iY%ced02=`];3b[rIf&^+Vqh+0ds"iT5uNU4IeWjO.=V*`R<Ls\WYPKn*JutpL!.jGgC['X
%`nFuth4'Cl5\2iH:I>\#^/fps#lIgr_gQ<(8[b.8WkoKDLs1&5Fq8^GTj!oE;9cR3bS5e$c(GmhSQ%2*JoF52?7.tR:d:$I3jcj/
%k8$k^!!O+l+k-qLZm&4PR[<BgX,XGgGa%i4#-fM9HFi&b,b/2`Ase?4L5SNp_pI<_XG8*`XDrH:U6L:uR.*d!RZ*=L!dS:3O;;MP
%9h</BJphQNT@^r-d^kCu>2g?\dr6aM6b/AC6s_0<d[8T?<MB\a$C%V;CF)A.Z^e"/@Q9/&<KU__TZ`ns%ld?"XH&.6[o03<#j?3i
%Ni&=@?J-^peU&[I*g;rY9O;"opR&V#:S,!s";,bX^dHM[4Rm":N[kNo*jh]gJf8287Ct;7#dtNZPG-\GXU&J)W"fTlTk=sCK-TC.
%Te24]cQ.aLSU+7Kd\G_4N)Pd0e>%Qe13VS;'DjN6W6I7&&ecPM?Fuc<FE>$542J[``:9&Ga\tu"3Lp3c[,.sV:;IGmVu(8-;m;F]
%h<>W8s#c=sh<>V>*Nf\,iH,EdFT(IjFFq"J6rGqP'/0s3o]C>6eZL>"[_&(Q51pIQkfW8q&PBJ'PM=2(WMQtH\MpmV3]#qSIeiYX
%T:bMSl"M[oY9M(aM)Z32s+iOUH^ph]B$<&,Z1[!fkU(40T9mBQA+.HuZ(J\4?$T=tdXd,fk#>_'E`T(<pspFkDOLl7La)EVNX5p/
%:8;g&r!ZE;P@P1jmn+CDHgb$#\td=$qhKWG`r_?B)6j,1?muk!Ya=-t3l*ed:`ZJJ&i&H620'*0c6n'=K!jnQ^:j.0^AA0+8TjYj
%c8sU!<7D!`'VGL]4;Ok;9.B9gI_%_?Lb"n6")>%4j,B[/<U[V*5PmBGT=*_TY3;9-]MR2Y:>8S:p4`a2N&8j<Y:p)AV$/#$mf24s
%,?e1lXfoBYlfT%m@A>h]#sc"pJnEZ&,$2\-b8q!q.t7=S!hq,2&Xr:A\f<Jf%H$gD41B\$\bJbN!gFe3.U_La\7I(2Pqa,u(IIkZ
%R#]H\[7DZ3)\8.9N:`)j[fnC^=821^]V#&`T<PmNFQID06:7%t^,'N1-d7Nh-kkX`&C+B#7HenTUEU_JN^DWR+c%M%M2(W]WPq@I
%)NS(=j#L%UMB=mo^!@G%^&!1<iqKSt&+Z&#`qT"iHXHd4lLll9r/'+Uan1\sj7Jn,g0fXlp9-ALiJoPV$KZ.B!]&2fkN2VN6r4>I
%,9)O.N^6sql$PK`Hk^GHK;)*+:i59C$OSa2R,38'H3NV,Z;9J4o&YPpL%=?^Va'cls.o<NFSPBWh9:e"lpK[>E"9r?@BLfOeq3TM
%@JCb^ULA>V%7Y.<,I_Sn-RT>_;VJdrg>oQpP*bc3'?5$&0@W`.?bP9#$k"=e4bm-(^X);65J,^#d+/:hHH<Dg&GJuSH?)i?0-(1*
%d<@WJOt+*T%)lPUSh>NB`:dds<!5UCKupZn@0$.LH'm0b;&IrL-LB[\[l:n8[[61=>)GG0%F-^d:Dht;>jd%;8)J\$Za-'k?19U`
%]XsoNG,-9lNp,NUR'/27U3uP'Er4kO$tb'I6>R=Q:'+>MrGp9D(=gdaPH#'[.o+[FGbY]e;QH/!\K&#Unrt.jg9C6>GJ=$$a88"7
%Orq1TQnQt&o!f'r*]13u)iL.<QDGar&EStt$?u]p76rj"12uDgBm\(Cgokqiriq_omm0[_>epU6pil<MUU$;%l70p-C(+($JZ)+Y
%k(Z/3PF&n?**1LkmbRkf5=klTUEL_KG"0&s_?D'4Z_gBCM.X:*81tL;q`A<>H"B9GhrG(\691'9Mq[$us)WYknuo\#c+pICm0h95
%f_SB/:7@0MCP^nPEB5!u=L8)XJ(XlKW"(4KhJR62YGeoPBsdHlq)T<(?XMKhO;0bPo_NORam7+$%oX0.N2@4(2Ft8fFRT4Tqn;IS
%8a\ZZj^/\S(<jh]Uf\6gY*ObT1dXaeRMl)pUoN+6%9J!V`><OS3!4&d%=S^VO\,_j"tFZh9D7/,WB):Tfc@/Z2fN;i2n4V#>u7q&
%(^G%NaqBYUV-_6=B+$?K+_7Vm%>cllVniG>4HP4Qo`/VBr64:C*oJ;>@CXGCMLZoojj@n1-&;%*:u`*;\I+O^JUf!ioAcOi,Nri-
%I3=msd[He@9!(c.)@)T!:k5g#e"\33=U?M%,aKAfnTKt:GVN]ZY!I)>(hi;J\NA<tkGdT?,gD-rS/lG"=M:6J9q;ffD'ZC4ct@3D
%G+b4a$_<stX1Y3>lR<,G9umuBa1II>%GX`38Ec5<Cpc+%4r%BZ'eq5XRKEPKf#D=[AQGK9#KtZuRoh&6[Se`s2\M#$%rCs`)h>Q?
%6n&tbSCfC2RRgX/6U2$JNgQr3=-"dba<\C&oi<<n!?:G6AC"7FAS0(h0FCP1Td.]a%4AOccS0G>itY*%UL1$-#[iR1h4U^q#JVF$
%m=8_(opMW(-qW>Z'uq>EBJ&9>\heUAG*q8\#T27U+;_HM)tHZ'a"TP!h;Ga0B$qpHYC"]Z3UMlLPn12iA'=Q\1,[.jVO?f9q&gP`
%B.QgHPYa7LcOpDb?o]nV#3Z9/nk`Iu+FQDFL9)@l:]r\G($I"e)SheY'XBgO:/PU=jk920TfA5*Je=BAm1k]ekY2u#lH@Uq=\FAE
%"2lh8>j+^Aidkr7rr>]]HR$1\VGd]l53&*?nh#A4%>hIgRo1i#T]u=.<Zo=p\m@IU35)oag1H%ePQHG+]?OY*93-.iW"KJTR;=36
%5W?6h!mDNu+l""gkpp<),gkIN-:&8aV]V7.5m!.EOP5H6T1;[e[=K=PFuGgM#?AN[K/_3_\@u'-b:$+#bu^9ZJaVH.T5<F"Fb3@O
%HI#+5of8q+f%k.W7@F=V,GN^\c:>=``).][SWc+*:,O9t%Ki/nC;cjPZ3;Inde(qC9oU0#M7+i4#eU1C['A>GbLkdV5S$Vb@X$ID
%%fGF1=1'HeH3K(YO1!XMf'<f'(pt:FcQ-*';gEQqhJ<#d9I2^a$/jI7bn<`04KGCJ!37h[iYC.09,WT77Ic8GcS8%jnEUu'UkCH=
%I4Q+7-q3oN9ha*j_2A5TeaB[#j?^_?m'jqG(TuX=TO1@$3um_Td>61Wc6!8R!,)>W-p7)\;d8QDi<JOB/,@&$UsLuj5E72)p4dZJ
%.m5rD@c(JI*2FQRc(d5De?HrB8'&-mO,&^\Y!?)MFtB5(AfWUSC>Cdu]?6uA4!;)4<;!FY?C(tJ;<_0:kAmIoQb-bsbbGU+\tGQl
%dM`<GR!'IWfbHN:Kmh1*>Ud<E\]LX'K.Y<n6%\s-)Buh?6+5kTR7gcOa36k6K5_@SMVmAD([Ln"aG$TpD\*]-g\G^6acUYUIi""K
%oB#B_4R4^$2q]omI/3"Sj^d?Jm9Kh7H*[CmihRKFjW3_JOr]Wj2bjMf6=-bK.PTlu3CQYi.B(G4[_nam:mr,,Y&QBe^RZ8i$VEag
%gDL-Z:G]Q;E"_G$(#&*05`]*P?D&%Dgi\8BZ66sIgrK/m6H9*J7<aLER3`sOZa4,C.&6(`23&Xgk%d7'LgfkFKYdeLJ@7jOUB-Y/
%Ph***%[EeA1(qsO%1n\,B+\?u&+p??`0uPNNh[[9F#!FD+r@4b^I(g)^@&5=0LGW-GM#+(_Zm0.]ArD),JD?5-$;tr'kc%_F$J>'
%":6I2+a.RW15`9r)6'?aqrfZ,..i5XGQO"[f?13XUWtE^`4<0RpXKYe5N9o<hHkB@NZ-:DZ.83jHR&%MUq*e1=1aT,0Qb)m4UFU^
%>E37aOJL#G=li\QS_A(U"LQ$:9^rHXR<ttndL:&Yitf&Y[aJB&r=15=:AmYN.m1GfR+abVb56F-*<$\^nqM`DlR=P6Qdq#<2M?2r
%VR6WSUpI(q%<ehcIW`@0,V$qaIdbkVp!*Hb05\TRn(.&T9P:DlD?G)M[DZo-:!/7$_rsNdPj*.u$'MRb/St01hNnI_9i5Icl$r?n
%nDu"%04;UW)rVeA'5LQ)c$#.GT`_-,fP^Z#Y7<1O-lrf$_]co#n(nmH.5m@11?7,*0RM\f^#XVU=p=^+[X17)bQ"s2d7Ha(;Db24
%A<hIAEWT.0:KBm`l3noE)!-]?h#i5JE!u!_cha>`-sIIfNX1)[`C`1PEJ@(0S'rkEB1HAs3@-e)pL'D-b1H-qp%,mZ`hq5b*KePS
%L9EW*U3h]8V0%^M%OX/IDejmd9b;uZr<B]WJ$ac&b_.Fs".qhDOj!F=-PDjARirjLS0_4n\b/I"*AboZh\8?&0?@qk\@d_d*N5f6
%PmlT&q>i=<W.<@5DqaE^#2s2,0aD`6CK($`n=7G+=%MA+,8G?9CA&!-bB.*15oF6(!N!GoFs>#g`4HFVWruHQPNeU?0N_>7#;rHL
%N2?kT&>H+d7),XaC#$4!\3Qa/-hVqA@Fm$Bel9qH8C10cKb?D[!ZBamSq``^SmX.=RqbL?/2u?LnkY]Yo7U=cK#$LqaVG]rLt*KB
%;P-?Qaq%rZ[]/qNM@cXQRFi]8N+R@TP,@d3Xii]=d]67O"6HaG+:Af^W0=/'25JKh5d5l$qh>2#oih%UZJQF<&NMkl/!/,o\>;tf
%L(T>)kQ['iV<1L=oaKMu7"7m!_gtS)gH`[i<X`KY&XksOomTtAaPlX"-g/gU[ZOA&QIcrQ!X5BIVN_e+7$4NFh$,_89o_u[aigO>
%*K+]f@;CLuP;D%<E1Zc:h/le.QK22Kb]^K=IpX?"HK7?i!RcNG`YJ>5SajQAQb!q-X&(8(Mq*ORq3ho0ieCik=G%hY=aZU5-EP#4
%>s2rr>@L*]BJ1(Y%rBH0.FT/.RP?of_SP?qqF0)s&:qh,'8&=XSQjL0Fb=XpWP!6ViE&:0$UU-t+Z)SVoe`A>mm[\&0;?[FPjBl\
%0+s:cbA8[jNmD<>^_!k]0_?up$t_KAT@XWo24*FO$4rA7W3[o3`B^L[Z[_M"+]6e4.sAF\^3IEQ(k7VF@t-JtLg:`KRhT:]O?ub)
%(56Ys6.<sW$cJ`JK&V<_N_W[h!TrE6)s%Jop@_^r!B*!Bhhpppg6B@>ULi"NBZVuI\:iP'VC4S3B5UDo.%Wk<*Hf'T\d6C@)q"l1
%7A]SYcmYR4&>t;Hf+=[;k+fKmj/-dU(l98XY-@/40[ko6(6s._2%:R/+A!9A*ZR5@9C)4i.kN23jk%1G/pLEN'nUoM'h^)XY,aWX
%6ihCRLn;rl*CZmX/Vs/nd8KfY;T66282F??4?.?n_S.gjn""d'!87,9/F4pd:@`D5!FSh\bbO&Tr!i)>\EI6Qo%cRsKWd:7D*N(m
%3#HP@FjFf/h:UJt)Flhu`7V:n(<>nNNoGE&*SK`=L!gApR#"(qBK\4<9E>p==W2+);kQKP=qV6f9Tt\oU<F9k'IM"r;g\(q^27GD
%_Pa+;]n87`df220X?_l"[>,Wh2[O=r(rF9i.BY`@^7b#6]P(%P>Qb'r+8V;r@7$u=nQ%W*l;L8)!pDpn79B\gli;dS&Y5<jX"07.
%mEQ,)*)nFU.+R]WUW'BjZlV,[H\4Dd%2SCQnr(V"U?B'RcIW:QYA1bmQqf5>Wm5Q^S^Y`33XRGc8UWqZpQ5=eG"BRYmReON"F+-Y
%%(6CsA=9-9ae"e\\F45J10Uk*/KAk)elN!]5+]mZfN?[[#:DUm9_]lDMKsJ,Jiej2i-8=r(UM8s!XMCH=sdb*kp1s*B)Bq-'H8#[
%=:#QFeZ+Y#$J.B'aGnr].50[X[b8Y5>OsgC@,3DN:>;<WI^m^l!Z(W__]]5[W*-R_3-J_mJ4ZS&;^PWT'(hHXbD_iu>;8kKGCkVJ
%b]iJTlm5$t6(3^REK$HP/5n("e"bX4)eucIhI%05/_:<@q+-a.Rf*]*Bn`;L%9ih:*oe_?Nu2;)TNYjFJ0IYNbm)c'/'AFe[oGLX
%TL21eL9j-mK(s<r<b"Y^$.20s#JaFJW(O(D-Ph3:V%]p^,HB&:2;m=n^:3>!"ZF>#CA_dL!2!2TWu>*l*Trqu_f%,(3U<f/c'+*f
%bacKDBlh\+QKM?pgo3,EZmTZGY/3SepIR]D,mRO8a\'qecf["f\T0d#XPI"#R*p>Rn0;[I!kj!W3>mi<;`?W;%%rWumbJ`bGM%/d
%:3W7T9oqDl$PrOq[%7nGf!Vm4?WP*#,kl91a3bmDfIeD5>LnHP7OuVM,Q\/&ie#;D6Q!k4SJXqPH?do4HPk3GC^@40,5)VZSi^b"
%0hHuN4kM(k[##e=YiGGqp@Z\7$o24"l:=CGb-'u>HjoW;*,Jh%/2g.AbM0qU/t$=E^`bH$1u)B:ot;f!r!;p7&bI'a0#A+b/h\t_
%pRrlDKBjR]#>8(;&4X$8`/^&/0-99[]SRUiYdB=T'W4(Yd6QJAoN7JoaJGtS=+XrRk2I1+iIHTCK3f@,M&2N!c[,*(%t="EQB24s
%*_n\L^clt:q%t&7W%g10"]R9]'cT9$Df/h#8D;V"aA='WrI[-</IMumV6.!N;&n11k9qH^7"n9WP$[@;aJVKR%&f8DH-itoamS/I
%D*>5j;9-[APOF6(Kq30ZkQrs,k)$'$JJd[3Z$Nu5#[g2XHI/C$C;ig_d844C;Zr=ODoRC\(=oR]J!e0l\E!(12%I0E,[:Z<TL0H+
%OTq>Ro*&uMMnB;Y6Y>'X>+7B2+Hc>4h9A8a(>LE?d1+?Em]C;;q+C<jDUN*Ki!qgc-9rLUQusq&;]=@:(-A8nZF(aL56gZL@!cf_
%M;9PO0#40Jhij7bZ#kblN5H:iQCXlO"mQ",4?MIX]NMh"`b+B@8dR;)>YfC9_2c<.1JFV2eVth^ZQ&&R(M`]ue^X:]6rb4SFZ1+t
%s$RD4`CZbU4#%/K`<,m]c[GV_cg?_&N@#Ld*]kt.T3-p5<0$U&?GI=d<?^@RR@&SrFW<Ql%MPY36?^0jBl([d(:D($ge&dWB-qcp
%ZMgLC+5+9ea$CO"l"pY'V%GfsmL*'<%Uj@Q&C0Bf;ofV),TT6kg.dVch&sY;8JJFuoe;J[9m>g*!u.eGhG*5-?);6q25L#GZjSs&
%6XE\9op*2c%"uN*[:AER,[0j]mR>Zh=Q\$.8OcU^Tl$P3"ir\MI;8?b=aM:Q5c=G,bfg9j'lr81fBfV`HQ_4ZFCSto_-!AA802-;
%e2hcZMVrf=Fi)6+XT='qL0-:WQs"H4=O'jSDKG-"-mk)r"sgdWLD,XP)!9Zid\2F`GM0qJe=t#N^*fpZmVaP.i1B4tpSe:\iG:2+
%^TiZ(>I.2.j;NEHd*kh\-1ZMp^5\R&4*=C<(fjsuK:i'b[OMX:YJD-6*ZBGr@Gp@7Up5Fn(n@]O4lG]*MV0-@Za'88T=WBG!uisB
%$@V207>+)/AgQ!mlG0LVebC!so2Sf_/AFKVloraH/8+KnDse^l=X*n1cS:PRV'A@H_](.,BL>X2%V$@u.afPRc%BII?FSKbUPA=F
%EsuPOMWUae%33EkglV$%iY@]4T`r@E2)JnVO4XqPlb_nmh%;[Q/`c<X$;;q=m!)5q4Y%Y`YCR8dO7o-jI]k1)e"c(:Vp>)a'U[NI
%\jC&dkob7q63FeVifkWuK3WGu=GI[!:C.9SGU^HW]NF*j6oS/X)KU7hdrEFJ4HuYYOr["U9aW)`Zs,;5MM>F6S=lEV<*%QCU586&
%EP'Ea4d_EAYL8sPJ(@2:da.:-@SSP;!2j*NU0g3N<K7[@%tOG40j8ACJ3VL#6QY2!ir]K%<?W#);QWWd"E3m.SU#[.46L%QlCbsh
%^&$<tP\cpe3bDgU1<(.qAAZpQhN<@:`!'m_\(8=qSd];3,]X]^(0iG!>p7=Pp%HCt=kfIeI/8+C#eW4r,sBO`2o9%=2sd"%s0nLa
%s1T3@V==/UTDZU)T7$NP$f]LqS<0A=?T[bDR)T.KSCu8"Ng:1ZXlc\ZDd`o-N;>k$&OVIW#RW,QFgc^se"LsJhJ[o660H?M5>rI-
%(ua>B?m[?;=tr<4cO4mg6$.Ag-HH*1k4l,fS5g(@"DP(gO>/PT-_LNmP@qpL:uiL]>HilcKQD"dP)X+9,d7YTpSsp5eG.^T_O=o,
%l019fGi8%=qm5^l]BA_Qc<a'>^G#TW^=9f:m+,JAe+i8/%.#V`mk4Y9o&'J&]6sG=pm6Jl+1qf3rk++Dh?hFuEEo`t,8TiN*gp',
%_]&1`oF]"il?sbMJJ#4(E#q.]D4q"h-3D,E&?3(,%`LArCp_uVK0tYs?n&qhR>Y$Qq]0])*qcPPlj"*u@9;AmOm%(dcsV>(epUY[
%nT'G?R:K3F9p=t^P,[qRV&T(WiAFdVfgU:ON[9`[!(YYgc)CW/FHeJ<cX2inG#_U'V1T7NYT[HlMD;oLJ<j/"B*M!j@iF=s)k&IB
%fG^Pg`@PN^2uYIk*-kU:q4DAFZOhCuhN\,e*3J:i=D#A!)qh3nf9A!Y99iAI+iY"+(e:[6E2q.*3OPefZ.<-,P*lq2O!r6!i[\`t
%&BKGk]Y78SFG!^F2iK>n`pdD*]Uf*lCra"oIE_'Y]QYQL"r2u/:`i0>Jl&Bl85s\%R3Wjn:.%oF@g4!CV*:F>"D`s3WNbn0qrs4.
%PG82INnLJ@L:V.D5amn%d\8.aa.VWK)Hss>#%=uM#R=DR,RiG2B=tciH-Ji&^sd-)k<&?gnhkPNSaUJOs4Pe:qlCeBLM]n<9u5pD
%>YJU7L1@9>"WZX`?rL`\V;Wd-lf`4`FAD@A=h'3jFD#Fp7jVJm)Ss.jYAjkWce>)^XR+ud-;kd)MHs[!Qb0T,5TuR,7u&iZG.`Vj
%6Wn[N\[\]gGp$DQma-Q%<F="M<N*_6YHq#!NN2H!LXP<&XgYa@TM9\,M?PIEEPhlV6Fnu8'&BAOpjANbV4m?s^Gf3XM6T\I`ld0V
%X).U3+(p:\4"FhW]<06Dj-pt[pnJtYKZ/.Y2QiB6W!pgIr5-&#f,85GQ6A%";hopAQuX?X&u="Q@uHb:&)gNM(I!r?0;g*Jm/1k9
%gdILR=Mt6B#9cBuTV_g0KT*"E+90_tF\<*'484k1!(T%@Irdu.=M8BHE7=W7&J0X[30M)JFSbZg@4jri0l5V5?Trr6]jEsOmjX^q
%lII%F55_aIR[]JjlUg[?#mkIX'&$)"j=[.I=EeWQ(j.ZV7_jHWnPQB?h$Kif?"2cp7&$u(nRG3E-;D]ma6l':dF@lXJkXq*,J6cQ
%RkqWHM"'R!2%/2(rOAFVp<cp34c8jL'&E@U/.G=STor`sg0T#cc`]"`VGb'BqiKSRrPokSM#D7f8Oa.5Eh<6b:_:+BGKtPJK44cO
%T&pNJ$Ie(0R&e-%B@`$aOl<@,Aq_c?k]$.#GLcs!?5E=bh\t@Q&U?f[B8C_ALs1PUo;[<58UfS6/:]5$@2pHjAr[<KJ4MtQWs"!P
%N*2=ePbPO;1t@5QCnj&on\!T/[#VKQ;MCE1GI4I37(O1rMBu&:AD:@LSY<++UJrUXB7pe&F>D.:eOc,<lR6dWFV_8M#fO[/bt_+n
%26/IC^%ZkH>s:.KEE"q"P[pR93;ZZ&^41QGD\apV0r@AFi<^9bLWkRZ"W>$FR=05XcHlE^GA+2E:@e,&hL^kcH4]7=K9O9gcq:I!
%Fs#9gS.L?>r91K'H#-Z9Df>TeT<mu!7ilW'ct+ZgfKtM-D,s%uZLKRdN;fKqa4Z!,oGAr,Wh8mX>)=laM-=W.-!KUX'mtN-`,N9P
%"j6Y=#bgAO/U)#Xq@:gfh/9bekg$YUq66cHD,`e<R`O#bFr9,FZ>I8lZVK.:1`JQA8r!o/q^pc:]c*>rn_8XDiD)V6)s6FO)n$:%
%#1"+AD`L&GcF4m`U0GCfeK+-)4Xd?amKB<RZLn>a-=t6+Qe^O[e_;[B88M)ZV$A(3daIBXBWtup`t*aVY^M*]G_u69bN"4m^O;H?
%rEjKk"4k:8?h53&Jbf,[3@R%u&'Y=)WSVPR7:LcC-9]G;9P54"k/(O\o9MJH&'Y;31#HlZ53V^p&*^?O;]W!PWX%*r_X(sL@+\ZC
%O?j-7W;J(7`'L`58.hip42W,i7_;\GM-W?*Zi0N>b71eUoC<>;`Q%\qm?X.c$Kn<_lqsm^kDLBGh*,N.o(LhqVkO%bjp651c0(`!
%p?gUQros;=gE?RheMmO+k3p'6rD.>qs86eAJ,A?^2rFS#fC.SKH#RgLJ,/c\5Q0j6A\[3eT0L!ee)UK,b;\>)bM;42IsCS]qH*9i
%q9?BU]q)oSV$;q']dk/\I/CgNn%O&8?%;n!S%o!^oliXeGO:@KA!ES!lTbC$?%;b=Qhrqd"Q'+=hn8dIX07$JOWXP>2dcRR[Ja\G
%iU=MZiT^Z_qt?L$^3T\Nn,E7]bO8be4)aj8DPlXlYJ5G_me\C2p%uoQ$]((l0]*Ym#rZKNBT?0[BsAA:qR1@VJ-pY;f6I9D<4qO$
%DV-,L-eP5C^ZA]8qpW"X[(khpe*Ve=/T8E&hoZ!M:*]B!$g<upck_;jj'WVL@40noe8H6#+(1k+>qds>X[j:@)PD]Cb#q=V/JnLJ
%oVu98c6!j&2Gg_PA=C]Q4GpS7"G'!I6h):/#6d%1l-Lqq@_?+l_AHm+"m(pT.nKm-7+XLq.jS:nQ9/99_Zh.T[8A`7cTI)3CWj&D
%0sCX5:gQ=TV"\89KKl+f`g]td$pKq=SrSbVUFY^@on^7!4RM^QOS^Ukr"@_;H8KcOd"MtL$mBU'1E*H+c\fe:N0Ca\c/i\1\W#mP
%%Z5%,N*NZqTI0,Q6[>'qV[)d(kAY-F@"M:D_(Q%kA4+2-4tn+-1FbrN&F#sth7BW,)YbddRm$$,poC)h=3Lo#`=Y`0CS#5chI+AT
%;U6\p]"3]A[J?I"6c+'q?B0K^l5ktu#Da-&RFN8tc0mWKc*u@t*kg<[46iZC=Dg^f'?d3Up`9!?LK^_%JnL_HC_>h^b8Q)f5&7mJ
%'Mqo^mB*EOpp-"ShEXf;7biQ:=&$dqiF%DBk'h!F8JD2AK>Ln=Z.)5,g6`R\kN1PkX<G_Mo0Kf/649g/_@)X#f$>mu"_Hi@>4U$/
%eih4#=[acuMl7dJ`CO'7&2c-p+%sM?C8(D.$`[(Y(C<'7aUi(&:p-]Pi1NASMouuL0&Sm/n4$+)kd%9DiOOc#Y^r-CALW_#QL-tD
%gC#^5^4O/A0.sf`@.p_2ht8j@aE;53FC[Xop_p[N@!m_0P7lKW&_iOlX(p/<X!eq+g1bUk1.iUtbXct2N'ur9UL;7N'DC?/W$'!b
%]qDC"P"Rf,f"ir+'q31[YGFp=8_Tu*978Qg7PrI31H.3>D77`0eam8:]9<7P_.Q`hh9j1pS&N1&SZUTUL+-'%+J>m'"ckfsqdN*S
%c@Ij9gclN\"BI(Q't^R[D3M4?@uXc^F)T:+.#kC&^[d;DJMkg0e=3E3FB#KS\Z.+Abpd^^+?eM)IUS$gh9+B=R1frLEcT9PUVL(@
%RGk6&N:FtHXTHPi(2MH9*:Js.S"G;%M.pL)7kEKM3$TH&git2cXLGL<5B%n@5n*Ai<H$f7?o0+Fn+$oJ[Mq#?Bs8t1jdMi?+1iRc
%msBpBf`O&AjH/f3chn55RWo)4Jh/DS4$0<*r:VG^P11\up^Qlm8*i5/^L3+D<euZmL.qSeYauY2U%?T%]H=3r?GftTBti8Y]9KAL
%\XgmfVnc)PF.A=fDb1bd_XfLPE+M1&)47Ra1]6m*cMi2J+\M$CKcIV`alidJ^(RrDXGspU"J-uf_]p\IPtgYJ>BUc2\ZW6JnJE-E
%fKYh;p9G#-\iLgaUbbqWAQWIZQN2"S7_t)CnQ)8SP"Ds>,I"I/&6gH-dLMiqqnPL<:e7,efs4RrB2'U9C4ZBDc+oDg2%DYQf[lf.
%^?H,VSfZYagmQC(9C`G;^#/`?s3IBY^O#i3Dn^Sg@K=1>rTgZDr7CCDIkrX=:I"[?qq(lGk48B'Ddc#Gq5<bd/mj&$k5-8"o\H"[
%pL!sb00jL(]&6Z)qX*2>a%nqqs-c1&E<~>
%AI9_PrivateDataEnd
