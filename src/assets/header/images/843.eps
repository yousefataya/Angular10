%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: banner_on_blue_bg_14.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/17/2019
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 24510 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9FFAFFFA9AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9
%AFA9AFA9AFA9AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AFA9AFA9FFAFAFA9FFAFAFA9AFA9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A9A9AFA9AFA9AFA9AFA9AFA9AF84AF85A985AF85
%A985AF85AF85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9FFAFFFA9FFAFAF84A9AFAF
%A9AFA9AFA9AF85AF85AFAFFFFFAF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AFA9AFA9
%AFA9AF592953AFA9AF84AF85A984AF85A985FFA9FF85AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%AFAFA9FFAFAFA9FFAF84285385AFA9AFA9AF85AFA9FF84AF85AFAFFFFFAF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85AFA9AFA9AFA9AFA9AF7E2F287E84AF85A984A984A9A8AF85
%8585AFA9FFA9AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF858585AF85A98585
%85AF85A984AF858585AF85AF848585AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AFA9FFAFFFA9FFAFAF532F5AAFA9AFA9AF
%A9AFA9AFA9855A8585AF85AFA9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85
%A92F5A5A5A2F852F842F5A5A5A2F852F7E2F5A5A2F5AAF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AFA9AFA9AFA9AFA9
%8484AFA9A984AF85A9A8FF845A5A855AAF85AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF
%85AF85AF85AF85AF8530FD045A8536855A2F855A5A84365A5A2F852F8585
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF855A85
%FFA9AFA9AFA9AFA9AFA9AFA9AF85AFAFAF5A8585AF8485A9AF85AF85AF85
%AFA9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF8585A985AF85A985AF85A985AF2F5A2F2F2F852F852F2F5A5A2F5A
%2F5A7E5A532F84A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A9365A5AA9A8AFA9AF84AF85A984A984AFA8855A7E59A95A5A
%84AF85A985AFA9AFA9AFA9AF85AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85305A5A2F5A5A
%5A845A2FFD055A2F852F5A2F8585AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85FD045A85AFFFA9AFA9AF85AFAFFF84858485
%2F855A855A85A9AF85AFAFFFA9FFAFFFA9FFA9AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF84
%FD05857E8585857EFD098584A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A9FD045A305A7EFF84AF85AFA9A95A845A5A7EFD
%045A855AAFA9AFA9AF845A2F5A5AAFA9AFA9AF85AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF855A592FFD055AA9A9AFA9855A85
%7E855A855A8584AF8485A9FFAFAF5A5A2F2F065A3685A9AFA9AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985
%AF85A985AF85A985AFA9AF85AF85A985AF85AF85AF85AF85AF85A985AF85
%A985AF85A985AF85AF85AF85A985AF85A985AF85A985AF5A5906292F5A2F
%5A2F5A5A852F5A5A855A5A5A857EA97EA9A9AFA9842F2F062F5A53062F2F
%8484AF85A984AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9AF
%85AF85AF85AF85AF85AF85FD0CFFAFFD04FFAFFFAFFFAFFD04FFAFFD04FF
%AFFD06FFAF85AF85AF85AF85AF85AFA95A7E2F7E2F06FD045A855A5A5A85
%5A855A855AA985FFAFFF845A2F2F297E5A2F062F297EA9AFA9AFFFAF85AF
%85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AF8585AF85A985AF85A985
%AF85A9A9FFA9FFA9FFA9FFA9FFA9FFA9FFAFFFA9AFA9AFA9FFA9FFA9FFA9
%FFA9FFAFFFA9FFAFFFA9FFA9AF85AF85A985AF85AF85AF5A7E595A2F2F06
%2F2F5A5A855A5A5A855A5A84A9A9AFA9AF5A5A292F2F84282F062953A9A9
%A984FFA9A984AF85A985AF85A985AFA9A985AF85A985AF85A985AF85A9AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AFAFAF85AFA9AF85AF85AFA9AF
%A9AF85AF85AF85AF85AF85AF85AFA9AF85AF85AFA9AF85AF85AF85AFA9AF
%855A5A5A7E7E2929295A5A857E855A855A8584AFA9FFAFAF302F292F5A2F
%2F2F065A85AFA9AFAFFF85855A85A9AF85AF85AFA9AF85AF85AF85AFA9AF
%85AF85AF85AF8585A985AF85A985AF85A985AFAFFFA9FFA9FFA9FFA9FFA9
%FFA9AFA9FFA9FFA9FFA9FFA9FFAFFFA9FFFFAFA9FFFFFFA9FFA9A985AF85
%AF85AF85AF85AF85A92F5A305A53842F2F2F5A5A845A5A5A845A84AFAFA9
%AFA97E062F0653062F298484AF84AFA9AFFD045A84A985AF85AF85AF85A9
%85AF85A985AFA9A985AF85A985AFAF85AF85AF85AF85AF85AF85FFAFFFFF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFA9FFAFFFAF
%FFAFAF85AF85AF85AFAFAF85AF85AF85FD065A7E5A5A5A855A2F5A855A85
%5A85AFFFAFFFA9AF5A2F292F5AAFA9AFA9FFAF855A85A9AF5AA985AFA9AF
%A9AF85AFAFFFAFAF85AF85AFA9AF85AF85AF8585A985AF85A985AF85A985
%AF85A985AF85A985AF85AF85AF85A985AF85A985AF85A985AF85A985AF85
%A985AFA9AF85AF85A985AF85AFA9AF85AF85AF85A92F5A06302F5A2F5A2F
%5A5A84FD085A7EFFAFAFA9AF848484AF85A9A9FF845A5A5A84855A8585A9
%A9AF85AFA9AFAFFFFFFFA9A985AFA9AF85AF85A985AFAF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AFA9AF85AF85AFA9AF85AF85AF85AFA9AF855A532F062F2F
%5A5A5A368584855A857E85FD055AAFFFFFA9AFA9AFA9FFFFAF5A85845A5A
%855A855AAFAFAF85AF85AFAFFD06FFAF85AF85AF85AF85AF8585AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9A2A29CA29CA29C
%A29CA29CA29CA29CA2A2AF85AF85AFA9AF85AF85A985AF85A985AF2F7E06
%842806075A2F5A5A855A5A5A85FD065A2F5AA8FFA8AFA9FFA8855A842F85
%FD065A84AF85A985AF85FD07FF85A985AF85A985AF85A9AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA2B8B7B7B7BEBDBEBDBE
%BDBEBDBEB7B7B7B8A2AF85AFAFAFA9FFFFFFA9AF85AF85AFAF5A5A845953
%2F2F2F5A5A855A2F53855A855A852FFD055A7EAFA9AF84857E857E855A85
%5A8585AF5AAF85AF85AFAFFD07FFAFAF85AF85AF85AF85AF8585AF85A985
%AF85A985AF85A985AF85A985AF85A985AFA9AFA9FF85BEB2B7B7C4C4CBCA
%CBC4FFCACBC4C4B7B7B2BEA9AF85AFA9FD05FFA9AF85AFA9AF2F5A2F7E59
%2F062F2F5A5A855A5A5A855A5A5A29062F2F5A5A5A305A845A2F855A7E5A
%855A8584A95A7EA9AF85A9A9FD07FFA9AF85A985AF85A985AF85A9AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA2B7B7B7BDFD
%04C4BEFD04C4BDB7B7B7A2AF85AF85FD07FFA9AFA9AF855A5A5A2F5A7E5A
%065A5A855A855A855A855A7E285359292F5A5A5A36855A2F5A855A5B7E5A
%85855A855AAFA9AFA9FD07FFA9AF85AFA9AF85AF85AF85AF8585A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF9CBE95BE95BE95
%BE95BE95BE95BE95BEA2A985AF85AFA9FD05FFAFAF85AF85A92F5A2F5A2F
%5A535A2F5A5A855A855A845A5A5A842F7E0729065A305A7EFD045A852F85
%FD065A84A985AFFD04FFAFAF85AF85A985AF85AF85AF85A985AFAF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AFAFAF85AF85FD09FFA9AF85AF855A592F2F5A305A2F
%5A5A855AAF85855A855A5A5A847E2F062F2F5A5AAF5A855A8584855A855A
%8585AF5AA985AFAFFFFFFFAFAF85AF85AF85AF85AFA9AF85AF85AF8585A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AFA9AF85AFFD06FFA9AF85AFA9AF85A92F5906
%2806302F302F5A5A847EFD045A845A5A2F5A7E7E065A365A845A2F855A85
%5A5A5A8584A95A5AA9AFA9AFA9AFA9AF85A985AF85A985AF85A985AF85A9
%85AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AFFD06FFAFAF85AF85AFA9AF
%855A7E2F842F062F2F5A36855A855A857E85FD075A842F5A5A855A2F7E85
%5A857E5A84855A855AAFA9AF85AF85AF85AFAFAF85AFA9AF85AF85AF85AF
%85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85FD04FFAF85AF85A985AF
%85A985AF2F5A5959062F062F2F5A5A855A855A855A5A592F2F5A2F5A2F5A
%2F5A7E5A5A845A7E2FA95A5A5A7E5A5A84AF85A985AF85A985AFA9AF85AF
%85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFFFFFFF
%AF85AF85AF85AF85AF85AFAF5A2F5A5A842F2F295A5A855AAF85855A855A
%7E062F065A5A5A305A5AA95A855A857E855A855A8585AF5AAF85AF85AF85
%AF85AFA9AFA9AFA9AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AFA9AF85AF85AFA9AF85A985AF85AF85AF2F302F5A2F7E592F2F5A
%5A85847E5A855A5A59532F7E062F2F5A2F5A845A2F855A845A855A8484AF
%7E5AA9AF85A985AFA9AFA9AF85A985AFA9AF85AF85A985AF85A9AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AFA9AF85AF85AF85AF85AFA9AF85AFA9AF85AF855A59
%302F5A2F5A535A5A855A615A855A845A5A7E5A592F062F2F5A36855A2F5A
%855A5B5A5A2F855A855AAF85AFA9AFA9AFA9AFA9AFA9AF85AFA9AF85AF85
%AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%A9A985AF85A92F53062F2F302F2F2F5A5A855A855A845A5A2F5A53842829
%062F2F5A7E845A5A5A845AA95A85FD045A84A985AFA9AF5A5A2F305AA984
%8584AF85AF85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF
%85AF85AFA9AFA9AFA9AF85AF855A532F282F2F302F5A5A855A5A53855A85
%5A5A305A367E7E2F2F5A5AA95A855A85845A5A855A8584AF5AAFA9FFAFAF
%2F5A5A5B365A30AF84A985AFA9AF85AF85AF8585A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85AF85AF85A985AFA9AF85AF85AFA9AF85A92F7E06A82E29062F2F
%5A5A842F7EFD045A2F5A2F5A2F5A595A305A845A7E855A855A5A5A8584AF
%845A85FFA9AFA95A305A7E5A305A848584FF84A985AF85A985AFAF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AFA9AF85AFAFFF85AF85AF85AFA9AFA9302F
%84592F2F2F293036855A5A5A855AA92F7E282F2F5A2F5A2F5A5A857EAF7E
%855A855AA92F855A855AAF85AFFFFFA9A95A5A5A8584AFAFA9538585AF85
%AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985FFAFA985AF85A9
%85AF85A985AF2F2F2F5A592F062F2F5A5A855A84FD045A53290629065A2F
%302F5A7E84FD045A7EA984845A855A5A84855A7EA8FFA9A984A984AFA85A
%5A5A7EAF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFAFFFAF
%FFA9AF85AF85AF85AF85FFAF852F5A2F305A842F305A855AA985855A855A
%5A53597E2F282F2F5A5A855A855A857EAF84855A8584A95AAF845A5A5A84
%FFA9AFAFFFFD045A84AF85AF85AF85AF8585AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AFA9AF85AF85AFA9AF85A985AFA9AF85AFFFAF5A302F2F2F5A2F5A5A
%8584855A85A95A2F7E5953292F062F2F5A845A5A855A855A5A5A7E84AF84
%5AA8FFA95A2F5A2F8484852F2F2F7EA9FFA9AF85A985AF85A9AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AFA9AFA9AF85AF85AF85AFA9AFA9AFA9AFA9AFA9FFA98B
%5A5A2F302F365A855A8584AF85855A5A2F5A8453062F2F5A368584AF5A85
%5A855A852F855A8584AFFFFF85852F5A2F5A2F365A8584FFFFAF85AF85AF
%85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AFA9AFA9
%AF84AF85A984FFA9855A5A2F2F2F5A5A8584A9606184842F2F2F30538428
%2F2F5A7E857EFD045A852F855A7E5A5A8485A8FF84615A36365A5A8584FF
%A88585AF85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85
%AFA9AFA9FF845A2F85A9AF85AF85AFFFAF85855A5A5A85A9856185AFFF5A
%5A2F5A2F302F7E2F5A5AA95A855A85845A84855A855AA95AA9858585FFFF
%AF618560AFFFFF858585AF85AF85AF85AF8585A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85AF85AF85AFA9AFA9A92F5A365A2F5A5A8584856085A9FF84855A61
%5A855AAFFFA95A5A532806FD042F302F5A84855A855A855A5A5A857EAF84
%5AA9AF84856085AFFF85AFA9AF608585AF85A985AF85A985AFAF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AFA9AFAFFFA9FF7E5A3685845A367E858584AF
%618584FFAF856085A9FFA98561855A5A0629062F2F302F5A5A855A2F7E85
%5A855A85AFA9848584AF85AF8585618585FF858560AFA9AF85AF85AF85AF
%85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985A984FFA9AF845A30
%5A5A8584A9A8A82FA960615AA9AFFFA9FF84615A85855A2F5A2FA8062907
%2F2F5A7E5A2FFD045A7E5AA95A8585AF85AF85A985AF60615A8584AF85AF
%85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9
%855AAFFFAFA9AF85AF85FFA97E5A5AA9AF85856185858B618585AFAFAF5A
%5A5A7E2F2F292F2F5A5A855A855A855AA95A855AAFAFAFFFFFA9AF85AF85
%AF85AFA9AF85AFAFAF85AF85AF85AF85AF8585AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985855A5A2F7EA9FF84AFA9AFFD045A84AFA9AF858560855A
%8585A985AF857E2F302F7E5329062F2F5A847E5A85FD045A84AF848585AF
%FFAFA9A985AF85AF85AF85A985AF85AF85AF85A985AF85A9AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AFA9AF85AF85AFAFFF5A5A2F5A7EFFA9852F302F85AFFF85
%AFA9AFA9AF85AF85AF85AF85AF855A2F362F5A7E592F5A36857EAF5A855A
%85A9AF858585FFAFAF85AFAFAFA9AF85AF85AF85AF85AF85AFA9AF85AF85
%AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85FFA9A95A5A2F30305A
%2F2F366184FFFFA985AFA9AF85AF85A985AF85A985AFFF84FD052F302F5A
%7E85845A5AAF85855A85A9FF848584A985AFA9AF85AF85A985AF85A985AF
%85AF85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AFFF
%AF60852F5A365A6085A9FFAFAFA9FFA9AF85AFAFAF85AFA9AF85AFFFFF85
%855A302F5A2F5A5AA95A8585AF858584FFFFAF608585AFA9FFA9AF85AFAF
%AF85AF85AF85AFAFAF85AF85AF85AF8585A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85AFA9AF85855A85A9FF84855A615AAFAFAF848585AF85AF85A985AFA9AF
%A9AFA9AFA9AFAFFF84855A5A2F302F5A8485A9855A8585FF8485608585AF
%A9AF85AF85A985AFA9AF85AF85AF85AF85A985AF85A985AFAF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AFAFAF608585FFAFAF85FFAFAF618585AF85
%AF85AF85AFA9FFA97E5AAFA9AF858585FFA98B61612F5A5AA9848561AFFF
%FF858560AFAFAFA9AF85AF85AF85AF85AFA9AFA9AF85AF85AF85AF85AF85
%AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85AF85AFA9A984855A85A8FF
%84855A8585AF85AF85A985AFA9AF5A5A2F5A2F5A848584855AA9A9AF6061
%5A855A6184FFAF855A8584A985AFA9AF85AF85AFA9AF85A985AFA9AF85AF
%85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85
%AFA9AFA9856085618585AF85AF85AFAFAFA9FFAFAF5A5A5A855A5B365A85
%A985AF6085AFFFA9856185A9FFA985608B85AFA9AF85AF85AFAFFFA9AF85
%AFA9AFA9AF85AFA9AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%85AFA9AF85A985AF85A985AFA9A9848585A985AF85A985AFA985A9FFA9AF
%7E5A365A3085848584FF5A855A8584AFA9FFFFAF5A85848585AFA9A985AF
%85A985AFA9FFA9AFA9AF85AF85A985AF85AF85AF85A985AF85A9AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AFAFAF85AFA9AF85AF85
%AF85AF848584FFAFAFA9855A8584AFAFA95A5AA9AF858561858485618585
%AFAFAF85AF85AF85AF85AFA9FFAFAFA9AF85AF85AF85AF85AF85AFA9AF85
%AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85AFA9FF
%A9AFA9AFA9AF85AF85A985855A5A2FA9A9AF84A984AFA85A5A5A2FAF85A9
%84855A615A8585AFA9AFA9AF85AF85A985AF85AFA9AF85AFA9AF85A985AF
%85A985AFA9AF85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85
%AF85AFA9AFAFFFAFFFAFFFAFFFAFAF85AFA9AFAFAFFD045AA9FFFFFF5A5A
%2F5AA8FFA9AFA9AF85AF85AFA9AFA9AF85AFA9AFAFAF85AF85AFA9AF85AF
%85AFAFAF85AF85AF85AFA9AF85AF85AF85AF8585A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A9A9AFA9AFA9AFA9AFA9FFAFAF85AFA9AF85FFA9855A
%5A2F302F5A2F2F2F5A85AFFFAF85A9A9AF85AFA9AF85A985AF85A985AFA9
%AF85AFA9A985AF85A985AF85AF85AF85AF85AF85A985AF85A985AFAF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AFAFAF85FFAFFFA9FFAFFFA9AFAFAF
%A9AF85AF85FFFF85605A2F5A36365A8560AFFFAF85AF85AF85AFAFAF85AF
%85AFA9FFA9AF85AFAFAF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AF
%85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AFA9AFA9AFA9
%AFA9AFA9AFA9AF85AFA9AF85855AA9AFAF5A612F5A5A8584FFA88560A985
%AFA9AF85AFA9AF85AFA9FF85AF85AFA9AF85AF85AF85A985AF85A985AFA9
%A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFAFAF
%85AF85AFA9FFAFFFAFFFAFAFA9AF85AF85AFAFAF858B6185A9FFA98560AF
%FFFF858585AF85AFAFAF85AF85AFA9FFFFFF85AFA9AFA9AF85AF85AFAFAF
%85AF85AFA9AFA9AF85AFA9AFA9AF85AF85AF85AF8585AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85AF85AF85A985AFA9AFA9FFAFAFA9AF85A985AF85A985AF85AF85
%AF848560FFFFFFAFAF608584AF85AFA9AF85A985AFA9FFA9AFA9AFA9AF85
%A985AF85A985AFA9AF85AFA9AF85AF85A985AF85AF85AF85A985AF85A9AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AFA9AF85AF85AF85FFAFFFA9AFAFAF85AF85AF
%85AF85AF85AF85AFA9AF858560858585608585AFA9AFA9AF85AF85AFAFFF
%A9AF85AFAFAF85AF85AF85AF85AF85AFA9AFA9AF85AF85AF85AF85AF85AF
%A9AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AFA9A985AF85AFA9AF85
%AF85AF85AF85AF85A985AF85A985AF85A985AF85855A85608585AFA9A985
%AFA9A985FFAFAF85AF85AF85AF85AF85AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AFA9AF85AFA9AF85AF85AF85AFAFAF85AF85AFA9AF85AF85AFA9AFA9AF
%85AF85AFA9AF85AF85AFAFFFAFAF85AFA9AF85AF85AF85AFAFAF85AF85AF
%A9AF85AF85AFA9AF85AF85AFA9AFA9AF85AF85AF85AF8585A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AFA9AFA9AF85A985AF85A985AFA9AF85AF85A985
%AF85A985AF85AF85AFA9AF85AF85A985AFA9FF85AF85AF85AF85A985AF85
%A985AFA9AF85AF85A985AF85A985AF85AF85AFA9AF85AF85A985AF85A985
%AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AF85AFA9AF85AF
%A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85A9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFFDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 14 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">banner_on_blue_bg</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-17T16:24:57+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-17T16:24:57+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-17T16:24:56+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7l6kC1D+pUUPwIWFD71G&#xA;/sM3EpEdHV4dPxi+KI95H61V4o9vSZpPGq0/icQT1aTEdEDf6pp1jdR29zOsbzP6cXLarEFgpPQH&#xA;iK/LDE2y8I9E/wBCjdNQowIrGSKilRUbjMbUkGHxbtKCJ/BkOa92TsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYTm6dExz8z7nWLDy1p99pt5LZiK9WS9u&#xA;IImn9OBYJf7xF6qz8F6ilRuOuRx0ZEEOVAAAE8vL3bMCm8yXHnRPL2iQOV1eWQ3Gp3VuNo4p1BBe&#xA;vw1O7BOoVct4eCz0RAXu940l2bVCWJJ9Mip37jMHOKh8WzTm8nwT7MB2DsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYt+hdT/3z/wyf1zafmId7qvy2TuV&#xA;RpeqBOHobUofjX+DZE5sfeyGDJ3IKy8pfUZnmtdOiilk+06CJTQUoPhpt8IwnUQPX70DT5B0TjSr&#xA;G9hvTLPHwXgRWqneo8Ccoz5YmNAt+DFISshOcw3NdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirDxc3bGglkJ/1j/XNxwR7g6YTl3lRvdWayUm6nlU7AKvq&#xA;O1WYKPgQM3U0wcMT3JufmrLcXjiqSyMCSBRidwaEbHxx4Y9wXin3lG6TPO08oeR2Aic0LE77ZTni&#xA;ABt1bdPMkmz0Sm81n6ooM1y4dldoogxMknpryZY0rVmp2GX8Ee5pEpHqW7TWDdJWO5cSqiyS27sV&#xA;liDio9VCap9ODgj3JJn3lQPmJReyWRuJVuIuBaFxKjuHrQwAr++pT4uBNMl4cauh9jIcfenugXcs&#xA;tzLWR24xNVXJqrVU7q24ND3zG1MAIjbq3aaUuI33JZc+Z9Sgk9P0r2bp8cFrJKm/gyIRlvgY/L5t&#xA;QzZPNWTXtRNoLqV5beLizkTx+kyqtallcAjpg8DH0U5sg6pHov5h3t3evZ6hNFYzHnJATLGytAsr&#xA;RrIxIHEGg+8eNMlLTwAuk+NkvmzHR766nugsk4liZC6FaEEbUYEDvmLnxxEbAb9PkkZUSlF95j1G&#xA;3uXiWO7mAqQ1vbvMoAJ2LIrCu3TL44Mdb182g5slmrXW2u6pPAZj69uikg/WITCfhAJNJFU0364f&#xA;Bx+SPGyeaG1zzkmhwW0+o3jLFdSiJWhQSlCY2k+NV+L7KdFBO42xjgjK6HJmMk+9E+VvOdlrmr3F&#xA;pY3wvUs6Cd0AMdXDFQrgUb7H7JyrPgEYXVFnhyyM6uwide1q9sbyRYhPIgpRLeFpiPhBJIRWNMOD&#xA;FAxBNIz5ZiZAU7bVdYngWcCeNWrRZojG4oabq6gjJnFi8vm1+Ll80DL51tIJb2G41aKCfT97uKUr&#xA;GUFFPL4wtV/eLuKipp1w/l47enmnxclc00t9TvJba0uo7v1YrniygAfYahB6dwcrOOFkVyZeJPY3&#xA;zXeYdYvLG4PpCaRAF/dW8TTPv34orNTI6fFAxsstRlmJ1FB2euatdQNOFuYUVipE8DQnam9HUGm/&#xA;XLjhx3W3zafGy+azUfMFxZWjT39yYbbYMzrseZ4gUAJNSe2A4cdcm3BLNOYjE+o8rofaVaLVb826&#xA;SQyt9XKrwYIFUAioG4FMRhx9zHJlyxkQTuDv72V5rHZOxV2KuxVj3mLV7ywnHoiaReK/ureJpnqS&#xA;d+KBmzO0+KMo2XB1GSYlUUpTzXqTSIhgv05kDm9nKqLU0qzFKKPc5f4GPy+bR42Xz+Su3mG5UI31&#xA;sMklQjrxYEgEsAQP2ab+GajW9p6XTTEZg2f2+fk7DFo9VMHpXfsfu80S2paosYkM+zEgAcSdtq7D&#xA;Njh8HLESjuC4WSeWBqR3Q1oIjMPUJCgEjj1JzIyXWzRjq93meu6jqOn+Y7uO5iaKO7uHWG548Z/Q&#xA;VfWURSdfT9WP7NePXv0ujEEbNg/X9jMPJclykF3KsItofUPoeknBCeT8mFNi3QE+2++VZIjYc0CR&#xA;5sl0b/eiX/jC/wDDKtRyHvZab6j7nlHmi+1HTfNtxM8biwuRBHBIyvxBdPSmaFxxKvR1B4HwrmYI&#xA;gjza8d/M0q2y3+r2uo2lnbmY/UGhWtasTFJFGsjsTy5FNuVfamAgRo+axJkxG88w65Gt5o2pQPNc&#xA;zXBW0S9tTLdQhSjwJAX9ORKrKabNQU4qK5dCIsEfe3SNG/6T1v8AJ3T9ds7K+bW43ivbt2uOMzmS&#xA;UqYoU5SEs7BmZCSpO3gOmYGuIIFcr/WulviN9ycetMImiWR0RwVPFipFRSoI6H3GTMAebRjyygQR&#xA;0+XySzzPHqVx5Zv7WwS4uru6jaOedWDmGNl41EXVu+wHjkcYiJ7mg5ObNLJG+EfAAPMtK823mgxX&#xA;lqI1gtCqt+5Mcj+rLyYvGZRCsaFkfZ+XAnaozKlh3F82kTjKOz2vyfFbRQ2S20YihNorLGCTTmFY&#xA;1NBU1O5zXam+E+9u0/1/BReeaOaQI5UFmqAduvhmQIggW4xmQTTF/Ndpf6tot7aQ3N7bvZNbSNOs&#xA;ir6saMWaONiSeQX4i/HrxrWhGGAEZe9yM2oOQbiIruAH4/R82J3+na5rdjLbR6bNBq+mXXIzzKit&#xA;LaxetAqpJT0uklft7cW/lWtwIHXm1RNHdkv5JeWde0WSeTVwEa5CLbQ8+bJHEr9afCK+pWgPz3yj&#xA;XTEommenvjHxZxq8kkeqTFGKn4a0NP2RleAA4xaNRIjIaSfUoNRbS39G5n9VgI4HWUBloftGqyV6&#xA;dWRt/pOTAiDybMmolkjuIj3AD7nlfnry75ll8x35stOe5F0YntXMayKeUUUbGWR6xrxKH7RFN26U&#xA;OZOOUaFtMvp87eoaJa6hbSW0FxzSO3t7eEQl+SCRFVXcDiKcuAp8RFN6AnfGJG/xT3J9rjumpFkY&#xA;q3FdwaHplWmFwZaokT2QVoHMpaSeVlHKiFiw+NuR2779K9B0yyUAOQZnVSnHhIjW3IC9vxv38+aW&#xA;+b7ewfTWuL+5mVzJG6WpYFneB0kRYhRk4lkFQykeNMrgJXUXYabLiMRDIAASPV1G/f3fLZF6dc6n&#xA;LZyLqChJ2pLwUrwQOCOACnqvHc0+nrlgiLFOv1IAMqNjiNe7oeVb/wBrOM1TsHYq7FXYqx3XXdNQ&#xA;DIxU+mNwaHqc2OlAMPi63VEie3cgLX1Obc55nX4yEZywq7cj18D08O2TljA5Mvzcpx4SI9OgB293&#xA;29/Pmw7TodS0mzM+p3U7SXTTWkNqjc1RvVZVkG0jqW5EbN0I25VzU9sdnHVQrHwxmOv07VRHI/i6&#xA;PftNLm8OVjjyARHFtxb8+/kBQ37uS/yrYeYLDzJrVtc8/wBFMkcsIehUSsADwoSKkA+pTvQ5sdFp&#xA;hgwwxg8XD1+P4pyu2dTpc2lxShXj78Vd39L9HxZkthqCmogev+qcvOWHe8yMU+4rptNkugovbA3X&#xA;BuUYkRWCmhWoDq+9DT5ZDjj0IDYIz6grmtNQOy28gToFIrQfQBhE4d4YmE+4ojSrO7jnkMkTKDEw&#xA;BII3PbK8+SJAo9W3BjkCbHRAS6PLcRtBdWbTW705xsnIVBqpoe6ncHsemWnLHvao45g8iqxabcW0&#xA;SW9naNFbRgCOMJSm1O3fbr1yInDmTukwn0Bpo6SzTC7exrfqhijufRUyLG3VBIRzCmpqBth8SPK9&#xA;vengnXIo7RbO6iuZDJEyAxMoLCgqSMp1OSJiKPVs02OQkbHRRXQr8EEqpHhyplh1MGA0s3TaFfSs&#xA;HKKsoJPqq5D7kE/F1oabjwyHjwZ+BkYz5k/KGx166Se4VoyAFl9ORQZFVzJRiVJHxMfskbfRS2Gs&#xA;jEIOnycujMdH0q4s5UDIqQxx+miq1aAUAG+/QZjZs0ZRoNuDDKMrKFl0O/aV2AWhYkfF4nLo6mFN&#xA;MtLMlcukakIjFwjKEhiCRWo6b9RT2wHPAm0jT5AK2Qt15VnurRLWeMNCknqKokKCo3A+DjUVrWvW&#xA;u+EaiANo/L5KpM9P06/ivEln48FBGx8RTKsuWBjQbcWGYkCVPUtIvLi9kmjC8G40qadFAyWHPGMQ&#xA;CxzaeUpEhAXnlW4vLZ7a4QNDJTkA5Q7b7MpDD6Dln5qDWNLN0/le8mnt5SqD6sKRqOJ7U2JBZf8A&#xA;YkV77YBqIebL8vk8l0PledNSa/8ATX6xKFWR+ZPwqR0UniOg6DE6mFUo087R+q6Vd3N2ZYgpQqBu&#xA;adMrwZ4xjRbM+CUpWEPHouoxmoVD/sssOogWqOmmGrnQ765aJpY0YxPzWrV34lf1HIjPANox5AD5&#xA;r30jUWUrwQf7LCM8A1nTzLIM17sXYq7FXYqk+raXd3V0JIgCvEDc03FczMGaMY0XC1GCUpWEPb6T&#xA;qcDl0VOVKAkjauWTzwkKLXDT5Imw1Lo19MVMsUblN15MDTI+LjbYDNGxE1fmuk0rUpAQyp4fawjP&#xA;ANZwTKEGrakSAJiSegAH9Mt8CHc0/mJ965NT1RmZRMQU+2CFFK9K7e2A4sY6MhlyHq0dX1CrBbgu&#xA;FNCwA60r4YRhh3IOeY6ovS9RvZppFklLARswFB1H0ZVmxRAFDq24M0iTZ6JYfMOofWRbj6yzGgEi&#xA;20rRb/8AFojMf/DZb4GPy+bUM2TzX3+uanZWslzM0vCNeRVVXkRWm3LiPvOAYcZ5BPi5O9Ts/MOo&#xA;XDMXuUjgaYQ2sxZQstVBNKgbg7UwHFAdG/JMgR4Z3fPaqN/qTnTLq+e6ljnkLqI2ZTSgNCKEbA5T&#xA;mhERBA6rgyTMiCeiSv5j1YXa2yw3coYqPXjg5RDl4uB275k+Bj8vm44zZD3r9T8w32m2b3d3JIkE&#xA;dPUfioCqWALMW4gKvUknIjDjPIJ8XJ3rrLWNYuC4kkEK+sYoXLKVkUCvMVUHsQR7YDjxjo35SRXD&#xA;O7G9iqO+3X33596a6Vd3z3xinkLKEJG1AelD0B75TnhERsBcGSZnRKTX/mPVLe6eKOC7uAKkPbwG&#xA;RBQn4SwHXbpmRHBjrevm0HNks1axPNN36aPcyS2PqSelEl2ghZ2JVQFDgVqzgDxOHwMfTdHjZO9J&#xA;o/zMlivtQi1Qy6fa2ckscdzKqkP6IjLNReRC/vg1SNlofGhOmh0C+PPvZZoWsTX08Lrci4tZlLxy&#xA;IVZGWlQVZdiPllGfFGMbAbcGWZnRLXmLWb6wuD6CTzLRf3VtH6rioJLUArTBp8UJRsp1GWYlUUNb&#xA;6xrE1uJys8CmtVmi9NhQ03BG2XeDjvo0+Nl80H/jSFZTG9+AqhS8o4MF5ECjKPiUio+0BWu1cHgR&#xA;/msvGl/ORlrrl5cJHNFcc4ZArKwAoVbcdsJwQ7mIz5O9FeYdXvrG4b0FmmUBf3NvH6r79+IFaZTp&#xA;8UDGy3ajLMTqKSnzhqwBLWOpKo6sbRgP1Zf+Xx+XzaTmy+fyRllr+p3cCyr68PMkCKaMJJsabqR3&#xA;xOCA6IGfJ3oqbUNXhcpJKVYUJFFPX5DIxxYyLAZSy5ImiUZ5j1G7slje3EjnixMUKc3ahH2V6nMf&#xA;TY4yu3I1OSUSOFjx83auELGx1IU3INowNKA16e+ZXgY/L5uN42Xz+S7XfNt7pGly6hPI3pxoXHOi&#xA;KaKSAXKkLypxBO3Igd8Rp4E0A2YcplICcuGJ61dedKHl/wA9T6xZwygzQTTh3jjKhkKRsFZhIF4H&#xA;4jT54y00AaoN+SExA5IS4sYlw3sP9jzZ1ZSPJZwu5q7ICx9yM1uQVIgN+IkxBKtkGbsVdirDrV3S&#xA;dWQ0YdD4ffm4mLDpYGjs8k/N/UL7T/NUlxZTS29yLKGl1CeLAepLUGQGoDHt+0fll+nAMRfm2Hay&#xA;y78n545vJMk/F39a7uGR5ZDI/wAT7szbF2NN2ynOPWFiRwlm+jf70S/8YX/hlOo5D3p031H3IP17&#xA;gQtEkzorKV+FiCOXdfA5aYA8wwx5pQII6dOiUeaNZ1vSNJ+tafC13NPJxkuJucq2ycTWT0Y6PIo4&#xA;/ZTffx2MBjF05GTUHJRIEfcKeTyaf5284XZshDbT2kUokGvTpKkgDFZDHEgZVZfh4UCKCy/EFfLx&#xA;wx339zlHWQjhOLgjxfztu++67/zvLk908l6XPplutpPdSXciQv8AvJWLMAWUhAzFm4r0XkzGnUk5&#xA;hag2Pi42D6j7lESzCNo1kZUYEEKxU7+BFCD7jMkwB5uLjyygQR0+P2HZIvOWva1ommLLptqbie6J&#xA;D3t008sNsAp4OYo+cjBm4rRB3r45EQjbkyzyyVxV8gPuAS2+1W917TP0ZotvRLqMjUJ5G9SzVyK1&#xA;gZSrPU8irJQ1FKoaUEIUeIuTLPDwjGhxbUQPPe+/YftZx5O0+6sFhtbq7e9mjjes8pq9CwIBJJJA&#xA;6DkS1PtEnfKdQbj8XH0/1/BRneTnNGruiuzBuDFTvtsVIIPvmQIggW44yShKx3+/7Dsw/wDMq78z&#xA;R28K6M80Onvya61BI/rt5FIF4I0ULuiqhrRuJLb/AAgmuDHADnzbsmbxCLNfAD7q7/e880zy7r3m&#xA;e7vIxE6Qx8ki1YKyOSUCu4Esay/EHq5cVZfs8jVzfxcIDVKiS9f/ACx0Oz0lAltO87Tu8k7OONX4&#xA;cefEKqjkoH2aA05UFd8XVH0ltwEmYJ82Q627pqLFGKngoqDTI6YAw3Y6okT2S8XqWaS3lw8kixow&#xA;CM7spLmv2S3Ctdlr06DLJYh0ZDVSlGjVf1Y+7mBf6+fN5rqOm6vYoZWJigvrgBZouVGQ8afApqdy&#xA;SOh/a9syYkGg45sWWc+XDqEFrFatAUs5F9YysoDlyQFDUZj9nc/rymYBN9WQJqmQ647pqRZSVPFd&#xA;xt2ynTC4NmqNTQVqGaarSyH7WzSSMvxtyNVJI69Ntu2TlADcBl+anMcJqtv4Yjl5gX7+/md2HeYI&#xA;fNLatOlpNdFppYzaXEU6wpboprx9H1FV1boT6THv8XdjH5PV6PtLs6OCInGPHEbgwsyPfxVY8qkP&#xA;gzaQOIAJDWQKA70pybuab0xjzeQyEb0KTDzGzLLbspIYBqEbHtlGkGxbtYaIYZ5r8x3Gi6c11bq1&#xA;3fSOOFu9wY0AC0ZynL4wqqTwUfF8zmSMQJZYp5pYzUbhEbngG3vlV/b5PJLy880+YNfY3t++rTRI&#xA;/wBWaxd4ordWYxcDFJ6P1R+PKpl+M9uWZEeGMdh8/wAbtcIR4rySPCB/Dz93cPxtez0jyJ5Q1LR2&#xA;OqXV49416zrJEk5aJVIBDu0nxXMi8EUSkBuJ+zTMaUt6/H7ESG1n8fretad/vBb/AOov6s1ub6y5&#xA;2H6B7kRlbY7FXYqwxBIrBuJNPY5uTRdILCG1XQNF11I49Yso51hJMRdWqOVOQDLQ0am4wCRj9JbA&#xA;b5ouNVhgW3ggWKCJeEUca8VVRsAABsMAA52gyKM0WNzdSChBaJgK+JplWoI4R723TA8R9zv0DqHg&#xA;v/BY/moI/KTVDpGqFOBCEeJNTt0yPj42f5fJSy30G9t4wlvDFCorshpWvXE6iB52gaeY5UjdM068&#xA;gnd5gtDGUFD3JH9MqzZYyFDvbsOGUTZ7kD+gdQ8F/wCCy/8ANQcf8pNfJo+pSxskqpIG2JZqmlKZ&#xA;EZ8bM6fIVlv5fu7ZBHawxwxgU4IQAPGgAFMTqIHmgaaY5I7S9OvILv1ZwvHgV2NdzTKs2WMo0G7B&#xA;hlGVlBy6HftK7ALQsSPi8Tl0dTCmmWlmSh4/KkqXUl2IVNxKvB3LnoBTYVoDt1G+J1MT1UaaaKg0&#xA;a9t4vSt4YoY6ceKGgoTUj5V7ZE5oHckshgmOQCI07TLuG8SWREVFBrxPiKZDLmiY0GeHDISstarp&#xA;V3c3ZliClCoG5p0w4M8YxornwSlKwh4tG1CNq+mjezHbJy1EC1R00x3KI8sy/W2uWgjZ2AB+IDZa&#xA;kCoFaVPTH8xGqtl+Xn3BE/orUSFUogUEUAbYb9sHjwXwJquq6Vd3N2ZYgpQqBuadMjgzxjGizz4J&#xA;SlYQ8Oj6lE4dVTkNxVhk5aiBao6aYNqh03VCxYqpYmpPLeuR8bGy8HItfSdSdSCib/5WSGeAQdPM&#xA;ozWdPubtojCAQgNamnWmU6fKIXbfqcMp1SVHyxPJPFNNEHaFuSUlZNx05BSAwHWjVy6WeBThlnxw&#xA;MAfTLmFOTyhzK/6LEqq/qcFbipPgQtOQ2BodqjeuP5iPeWmOGYBFR3+z3IptD1E3LT0+0nDgZDxA&#xA;rWtOn4fLAM8Ag4JlPbOJ4rWKN/tIoBp4jMPJK5EubjjUQCrZBm7FXYqxzWZrhdQkWORwoC7KSB09&#xA;s2OniODcOt1MpCZopfNe3UMZkeSUIKlmq1AAKk/QMo7Q1ePTY/EMbHl97LS4Z5p8INKdjqk96QsE&#xA;k3NhVUJYEgioI36UzV9m9v4NVPg4OAnlfVzdX2Zlwx4uLiTF7i5/RkTeo/MysCeRr0Gb0RHGdujr&#xA;jOXhjfqhhNfHpJIaCp+JumWcMe4NXFPvKnd6j9UNslzdvFLeGluHLKrmlQquTxLkAngN6ZGIiSdh&#xA;szPGADZRlpNdBbnnI9fQLLViafEu/XIzjHah1ZY5S3s9EvvNVmtIPWklkK1CgB6Enqacio2AJywx&#xA;iOiMIM5UZcPPck1sL8113qnoRAi4llnA5NChJb4m4qFFamp2r0yFDfYMoRMiBxVfU3XOlTTNTa7a&#xA;3nguWlgkZeLBiQRyoe+GcI0dvsYRlISG/wBrMc1TtnYqwS/TVjPLJa/U1t05F3upniYMCT0VHHHp&#xA;vXNuJgAXbqI4pTlUedoHVtRv9J0C+1O5ihu5rNGc29jIZdgARyLLGRseTbfZ33yUJiR2Tl088dcQ&#xA;q2J3H5i6vYyNe32lONJRUF2sZLTWzleR57AUpIlfvFQwy3hHfuwELek+V7+w1F7K/wBPLtZ3UPqw&#xA;vIOLMGUnlx7D2zC1F8BtvwADIKZZmudk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWNa20y3&#xA;ty0ArMI/3Q2+3w+Hr75sMH0B12c/vCxPSr7Vb+exk1BZ7S5s1mN8ApjimeMBQnpl5AvItzTkeXwn&#xA;p2sz4YTiQd4lu02s8OMo8IJPXrEg3see4sV1RGjX9rqmpzz21yZI4FUACvFBxK8P2QvKgPTft0zk&#xA;+zOxNRj1Hi5fTw1Q2NiiDVGgORO2/k7HWdo4p4uCG98/nfd8t2QSsE0yNiCQszkgAk7KOgGdWPrP&#xA;udJ/AP6zzSw/M3UNU15xe6fDa+X7eKYXummRhqiCNkCXEkQ4KYiDX92zgitWbpk5Y6G3NvwyIkJj&#xA;+H8Wp+a9XbzDaNpOkyCHQpZUP1m9Q+jN6b+o3CHZpfsn7IUct2ZWGHFAQ3PN2c45NWAcceKcT6qG&#xA;1dL6fP8AYJ15Ot4rfQBDDfyalAts5iu5JPVqplBorEseK9ACar0JJFTDJzH9b9DqsmKeOUoTBjID&#xA;kUs806jp9vBFHcW090x/eejDVuXFhQ0X4tjQGnSu9K73RiSedOPEgDlbF7BNQubu51WaZXN1FIDa&#xA;oQszhaiNOMdGbgu4Ck0+eSsAAdzttQMMjknCE+AxjXPaXUy95+9nuhKUaGKOVHsoXjjtUWpaNVpW&#xA;N613Tp1J8fAUyNgkuFlOL0CAIkPq3294Z5mpc92KsMuADNKCKgswIPzzcx5B0sjUkP8AWboetYWN&#xA;vRXirLLwHcnlxqONVWhG5qevTK5x6lujkJ57sAvvy5gu55YbdJY/rZjS6UMygrGOJZt/tLQ7/tCv&#xA;Sgy+Ob+cwIo+k/jq9I8o+X9N0a5toLNCrCBIZGLEhhDHxWinZQKnpmJnkTA23Ya4wzLNc7F2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksb1hwmpyE+C/8RzY6cXAOs1BrIUo1FbmaOllObWU7NIV&#xA;aQmrA1+3H4HatDXplnAW/R6rDjJOSHHfnX60YLhAiKAaqoVmJqSQOvt9GEQcSWQHkFcuF06F6VAm&#xA;c0P+qMhXrPuZXUAfNjmqeVfL2o3cd1PZRvLE3NWdEc8iKEnkDWvc9T45cLAaSe5X1LRrW6t4o4ZJ&#xA;bWWGpjuIiokUleNVLBqGm1aVp3yPBfN2Oh7UyaUngoiXMS3Br5JhoFhBp+nSWUFfSgtmVSaVNXBJ&#xA;226ntt4ADI5Onva82qnqMk8k/qkP1LJ7PTby29G+gSdQ3JQ4rQjuKZM8V7OJCQFHqEjtfI2hRap9&#xA;ckJeJSWig+IKpPUgAhR0G6gE9+9WzWzus3b2bJAxPCOMVKQG8h5/r+VUGSW0drFPbxWqCOCN1CIB&#xA;QAVFOmRN8JvudNGuIV3svzUu4diqTv5dRnZvXI5EmnHx+nMwasgcnCOjBPNtPL/D7NyR/sR/XAdV&#xA;fRI0ldWzoJLFjcsWPU8RX9eP5ryX8r5qtppH1e4WYzFyoIAK06injkMmo4hVM8en4ZXaY5juS7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHc/or1T9Y9L1dq86V9suh4lbXTTPw79VWpf7gf+KP&#xA;wyX73zYfufJ3+4H/AIo/DH975r+58lQ/oj0Fr6Xo8jx6ceVN8j+8vrbL93XSlP8A3A/8Ufhkv3vm&#xA;x/c+Tv8AcD/xR+GP73zX9z5L4/0PR/T9GnH95Sn2ajr7VwHxOtso+H0pZ/uB/wCKPww/vfNj+58n&#xA;f7gf+KPwx/e+a/ufJcn6E5rw9HnUcaUrXtifFre0jwr2pH5juQ7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:instanceID>
            <stRef:documentID>xmp.did:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</stEvt:instanceID>
                  <stEvt:when>2019-01-17T16:24:57+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=232 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=224 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=121 G=177 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>121</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=6 G=3 B=62</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>6</xmpG:red>
                           <xmpG:green>3</xmpG:green>
                           <xmpG:blue>62</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=44 G=38 B=96</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>44</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>96</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=25 B=187</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>187</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=45 G=9 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>9</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=91 G=4 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>91</xmpG:red>
                           <xmpG:green>4</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=101 G=7 B=250</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>7</xmpG:green>
                           <xmpG:blue>250</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=0 B=131</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>183</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=115 B=181</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>115</xmpG:green>
                           <xmpG:blue>181</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=226 G=64 B=152</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=191 B=48</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>48</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=152 B=132</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>132</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
599.999 400 mo
-.000450611 400 li
-.000450611 0 li
599.999 0 li
599.999 400 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.261051 .0218814 0 0 cmyk
f
542.285 151.081 mo
541.143 150.422 li
526.164 141.773 li
541.143 150.422 li
571.101 133.126 li
541.142 115.829 li
511.184 133.125 li
510.042 132.466 li
541.142 114.511 li
573.384 133.126 li
542.285 151.081 li
540.001 151.081 mo
510.042 133.784 li
510.042 133.784 li
540.001 151.081 li
540.001 151.081 li
.159609 .0111391 0 0 cmyk
f
490.528 145.051 mo
490.528 145.051 li
506.05 136.089 li
490.528 145.051 li
508.901 133.125 mo
490.528 122.517 li
490.528 121.199 li
510.042 132.466 li
508.901 133.125 li
f
511.185 169.036 mo
511.185 169.036 li
534.218 155.738 li
511.185 169.036 li
508.902 169.036 mo
493.922 160.388 li
508.902 169.036 li
508.902 169.036 li
510.043 168.377 mo
510.043 168.377 li
490.528 157.11 li
490.528 157.11 li
510.043 168.377 li
525.022 159.729 li
510.044 168.377 li
540.001 151.081 mo
510.042 133.784 li
506.05 136.089 li
490.528 145.051 li
490.528 143.732 li
508.901 133.125 li
510.042 132.466 li
511.184 133.125 li
526.164 141.773 li
541.143 150.422 li
540.001 151.081 li
f
542.285 186.992 mo
541.143 186.333 li
519.461 173.815 li
541.143 186.333 li
571.101 169.037 li
541.143 151.74 li
534.218 155.738 li
511.185 169.036 li
510.043 168.377 li
525.022 159.729 li
540.001 151.081 li
541.143 150.422 li
542.285 151.081 li
573.384 169.037 li
542.285 186.992 li
f
412.96 116.693 mo
416.742 114.51 li
418.164 115.331 li
412.96 116.693 li
f
490.528 179.644 mo
490.528 179.644 li
493.922 177.685 li
490.528 179.644 li
508.902 169.036 mo
493.922 160.388 li
490.528 158.428 li
490.528 157.11 li
510.043 168.377 li
508.902 169.036 li
f
508.902 204.947 mo
490.528 194.34 li
490.528 194.34 li
508.902 204.947 li
508.902 204.947 li
511.185 204.947 mo
511.185 204.947 li
534.218 191.649 li
511.185 204.947 li
510.043 204.288 mo
510.043 204.288 li
499.237 198.049 li
510.043 204.288 li
525.022 195.64 li
510.044 204.288 li
540.001 186.992 mo
510.043 169.695 li
490.528 180.963 li
490.528 179.644 li
493.922 177.685 li
508.902 169.036 li
508.902 169.036 li
510.043 168.377 li
511.185 169.036 li
511.185 169.036 li
519.461 173.815 li
541.143 186.333 li
540.001 186.992 li
f
540.002 222.903 mo
537.677 221.561 li
540.002 222.903 li
540.002 222.903 li
542.286 222.903 mo
541.144 222.244 li
526.164 213.596 li
541.144 222.244 li
571.102 204.948 li
541.143 187.651 li
534.218 191.649 li
511.185 204.947 li
510.043 204.288 li
525.022 195.64 li
540.001 186.992 li
541.143 186.333 li
542.285 186.992 li
573.385 204.948 li
542.286 222.903 li
f
508.902 204.947 mo
490.528 194.34 li
490.528 193.021 li
499.237 198.049 li
510.043 204.288 li
508.902 204.947 li
f
511.186 240.859 mo
511.186 240.859 li
541.144 223.562 li
511.186 240.859 li
508.903 240.859 mo
490.528 230.251 li
490.528 230.251 li
508.903 240.859 li
510.044 240.2 mo
507.719 238.857 li
510.044 240.2 li
510.044 240.2 li
540.002 222.903 mo
537.677 221.561 li
510.043 205.607 li
490.528 216.874 li
490.528 215.556 li
508.902 204.947 li
508.902 204.947 li
510.043 204.288 li
511.185 204.947 li
511.185 204.947 li
526.164 213.596 li
541.144 222.244 li
540.002 222.903 li
f
540.003 258.814 mo
530.929 253.576 li
540.003 258.814 li
540.003 258.814 li
542.287 258.814 mo
541.145 258.155 li
516.854 244.131 li
541.145 258.155 li
571.103 240.859 li
541.144 223.562 li
511.186 240.859 li
510.044 240.2 li
510.044 240.2 li
510.044 240.2 li
540.002 222.903 li
541.144 222.244 li
542.286 222.903 li
573.386 240.859 li
542.287 258.814 li
f
291.411 149.882 mo
271.877 138.604 li
291.411 149.882 li
291.411 149.882 li
262.383 133.123 mo
261.242 132.464 li
291.411 115.046 li
291.411 116.364 li
262.383 133.123 li
f
490.528 251.468 mo
490.528 251.468 li
508.903 240.859 li
490.528 230.251 li
490.528 228.932 li
507.719 238.857 li
510.044 240.2 li
510.044 240.2 li
490.528 251.468 li
f
508.904 276.77 mo
492.253 267.157 li
492.253 267.157 li
508.904 276.77 li
508.904 276.77 li
511.187 276.77 mo
511.187 276.77 li
541.145 259.474 li
511.187 276.77 li
540.003 258.814 mo
530.929 253.576 li
510.044 241.519 li
490.528 252.786 li
490.528 251.468 li
510.044 240.2 li
511.186 240.859 li
511.186 240.859 li
516.854 244.131 li
541.145 258.155 li
540.003 258.814 li
f
540.004 294.727 mo
525.025 286.078 li
540.004 294.727 li
540.004 294.727 li
542.288 294.727 mo
542.288 294.727 li
542.288 294.727 li
541.146 294.067 li
571.104 276.77 li
541.145 259.474 li
511.187 276.77 li
526.166 285.419 li
511.187 276.77 li
511.187 276.77 li
510.045 276.111 li
540.003 258.814 li
541.145 258.155 li
542.287 258.814 li
573.387 276.77 li
542.288 294.727 li
f
229 151.078 mo
197.9 133.122 li
230.141 114.508 li
261.242 132.464 li
260.1 133.123 li
230.141 115.826 li
200.183 133.122 li
230.142 150.419 li
229 151.078 li
229 151.078 li
231.284 151.078 mo
231.284 151.078 li
261.242 133.782 li
231.284 151.078 li
f
262.384 169.034 mo
262.384 169.034 li
277.363 160.386 li
262.384 169.034 li
260.101 169.034 mo
254.902 166.032 li
260.101 169.034 li
260.101 169.034 li
261.243 168.375 mo
261.243 168.375 li
233.61 152.421 li
261.243 168.375 li
281.064 156.932 li
261.243 168.375 li
291.201 151.079 mo
261.242 133.782 li
231.284 151.078 li
230.142 150.419 li
229.001 151.078 li
229 151.078 li
230.142 150.419 li
260.1 133.123 li
261.242 132.464 li
262.383 133.123 li
271.877 138.604 li
291.411 149.882 li
291.411 150.958 li
291.201 151.079 li
f
291.202 186.99 mo
276.222 178.342 li
291.202 186.99 li
291.202 186.99 li
291.411 185.793 mo
277.364 177.683 li
291.411 185.793 li
291.411 185.793 li
262.384 169.034 mo
261.243 168.375 li
281.064 156.932 li
291.201 151.079 li
291.411 150.958 li
291.411 152.276 li
277.363 160.386 li
262.384 169.034 li
f
480.088 294.726 mo
480.088 294.726 li
487.012 290.728 li
480.088 294.726 li
478.946 294.066 mo
472.758 290.494 li
472.758 290.494 li
478.946 294.066 li
501.979 280.768 li
478.946 294.066 li
478.946 294.066 li
511.187 276.77 mo
510.045 276.111 li
508.904 276.77 li
492.253 267.157 li
492.153 266.565 491.921 265.987 491.568 265.443 cv
510.045 276.111 li
511.187 276.77 li
f
511.188 312.682 mo
511.188 312.682 li
531.009 301.238 li
511.188 312.682 li
508.905 312.682 mo
478.946 295.385 li
478.946 295.385 li
508.905 312.682 li
510.046 312.022 mo
507.721 310.68 li
510.046 312.022 li
510.046 312.022 li
542.288 294.727 mo
541.146 294.067 li
540.004 294.727 li
525.025 286.078 li
510.045 277.43 li
487.012 290.728 li
480.087 294.726 li
478.946 294.066 li
501.979 280.768 li
508.904 276.77 li
508.904 276.77 li
510.045 276.111 li
511.187 276.77 li
526.166 285.419 li
541.146 294.067 li
542.288 294.727 li
f
540.005 330.638 mo
519.54 318.822 li
540.005 330.638 li
540.005 330.638 li
542.289 330.638 mo
541.147 329.979 li
526.167 321.33 li
541.147 329.979 li
571.105 312.682 li
541.146 295.386 li
531.009 301.238 li
511.188 312.682 li
510.046 312.022 li
510.046 312.022 li
510.046 312.022 li
540.004 294.727 li
540.004 294.727 li
541.146 294.067 li
542.288 294.727 li
542.288 294.727 li
573.388 312.682 li
542.289 330.638 li
f
229.001 186.989 mo
197.901 169.034 li
229 151.078 li
229.001 151.078 li
230.142 150.419 li
231.284 151.078 li
231.284 151.078 li
233.61 152.421 li
261.243 168.375 li
260.101 169.034 li
254.902 166.032 li
230.142 151.737 li
200.184 169.034 li
230.143 186.33 li
234.135 184.025 li
230.143 186.33 li
230.143 186.33 li
229.167 186.894 li
229.001 186.989 li
229.001 186.989 li
231.285 186.989 mo
231.285 186.989 li
254.318 173.691 li
231.285 186.989 li
f
262.385 204.945 mo
262.385 204.945 li
285.419 191.647 li
262.385 204.945 li
260.102 204.945 mo
245.123 196.297 li
260.102 204.945 li
260.102 204.945 li
261.244 204.286 mo
261.244 204.286 li
230.143 186.33 li
234.135 184.025 li
260.101 169.034 li
260.101 169.034 li
261.243 168.375 li
262.384 169.034 li
262.384 169.034 li
277.364 177.683 li
291.411 185.793 li
291.411 186.869 li
291.202 186.99 li
276.222 178.342 li
261.243 169.693 li
254.318 173.691 li
231.285 186.989 li
261.244 204.286 li
276.223 195.638 li
261.244 204.286 li
229.001 186.989 mo
229.001 186.989 li
229.167 186.894 li
229.001 186.989 li
f
291.411 221.704 mo
270.662 209.724 li
291.411 221.704 li
291.411 221.704 li
262.385 204.945 mo
261.244 204.286 li
276.223 195.638 li
291.202 186.99 li
291.202 186.99 li
291.411 186.869 li
291.411 188.188 li
285.419 191.647 li
262.385 204.945 li
f
373.353 269.014 mo
359.674 261.116 li
359.674 261.116 li
373.353 269.013 li
373.353 269.014 li
f
446.704 312.681 mo
440.316 308.992 li
440.316 308.992 li
446.705 312.681 li
446.704 312.681 li
448.988 312.681 mo
448.988 312.681 li
474.953 297.69 li
448.988 312.681 li
447.846 312.021 mo
447.846 312.021 li
441.465 308.337 li
441.465 308.337 li
447.846 312.021 li
467.667 300.578 li
447.846 312.021 li
477.804 294.726 mo
471.609 291.149 li
472.758 290.494 li
478.946 294.066 li
477.804 294.726 li
f
477.805 330.637 mo
475.479 329.294 li
477.805 330.637 li
477.805 330.637 li
478.947 329.978 mo
478.947 329.978 li
469.453 324.496 li
478.947 329.978 li
508.905 312.682 li
478.946 295.385 li
474.953 297.69 li
448.988 312.681 li
447.846 312.021 li
467.667 300.578 li
477.804 294.726 li
478.946 294.066 li
480.088 294.726 li
480.088 294.726 li
507.721 310.68 li
510.046 312.022 li
510.046 312.022 li
478.947 329.978 li
f
510.047 349.252 mo
510.047 349.252 li
510.047 349.252 li
510.047 349.252 li
510.047 349.252 li
508.906 348.593 mo
481.273 332.639 li
508.906 348.593 li
511.189 348.593 mo
511.189 348.593 li
521.326 342.74 li
511.189 348.593 li
510.047 347.934 mo
510.047 347.934 li
525.026 339.286 li
510.047 347.934 li
540.005 330.638 mo
519.54 318.822 li
510.046 313.341 li
480.088 330.637 li
478.947 329.978 li
510.046 312.022 li
511.188 312.682 li
511.188 312.682 li
526.167 321.33 li
541.147 329.979 li
540.005 330.638 li
f
541.148 367.208 mo
510.047 349.252 li
510.047 349.252 li
511.189 348.593 li
510.047 347.934 li
525.026 339.286 li
540.005 330.638 li
540.005 330.638 li
541.147 329.979 li
542.289 330.638 li
573.389 348.594 li
541.148 367.208 li
511.189 348.593 mo
541.148 365.89 li
571.106 348.594 li
541.147 331.297 li
521.326 342.74 li
511.189 348.593 li
f
229.002 222.901 mo
197.902 204.945 li
229.001 186.989 li
229.001 186.989 li
229.167 186.894 li
230.143 186.33 li
261.243 204.286 li
260.102 204.945 li
245.123 196.297 li
230.143 187.648 li
200.185 204.945 li
230.144 222.242 li
238.42 217.464 li
230.144 222.242 li
230.144 222.242 li
229.002 222.901 li
f
260.102 240.856 mo
230.144 223.561 li
230.144 223.561 li
260.102 240.856 li
260.102 240.856 li
262.385 240.856 mo
262.385 240.856 li
285.419 227.558 li
262.385 240.856 li
261.244 240.197 mo
261.244 240.197 li
251.107 234.345 li
261.244 240.197 li
276.223 231.549 li
261.244 240.197 li
291.202 222.901 mo
261.244 205.605 li
231.286 222.901 li
230.144 222.242 li
238.42 217.464 li
260.102 204.945 li
260.102 204.945 li
261.244 204.286 li
262.385 204.945 li
262.385 204.945 li
270.662 209.724 li
291.411 221.704 li
291.411 222.781 li
291.202 222.901 li
f
293.486 258.812 mo
293.486 258.812 li
300.411 254.815 li
293.486 258.812 li
292.344 258.153 mo
271.879 246.338 li
292.344 258.153 li
300.56 253.41 li
300.561 253.41 li
292.344 258.153 li
292.344 258.153 li
262.385 240.856 mo
261.244 240.197 li
276.223 231.549 li
291.202 222.901 li
291.411 222.781 li
291.411 223.398 li
291.393 223.62 291.409 223.846 291.459 224.071 cv
285.419 227.558 li
262.385 240.856 li
f
324.587 276.769 mo
324.586 276.768 li
332.92 271.957 li
332.921 271.957 332.92 271.957 332.92 271.957 cv
324.587 276.769 li
322.303 276.769 mo
292.344 259.472 li
292.344 259.472 li
322.303 276.768 li
323.445 276.109 mo
321.119 274.767 li
323.445 276.109 li
323.445 276.109 li
293.486 258.812 mo
292.344 258.153 li
300.561 253.41 li
301.702 254.069 li
300.411 254.815 li
293.486 258.813 li
f
355.687 294.725 mo
355.687 294.725 li
370.666 286.077 li
355.687 294.725 li
353.404 294.725 mo
332.939 282.909 li
353.404 294.725 li
353.404 294.725 li
354.545 294.065 mo
354.545 294.065 li
339.566 285.417 li
354.545 294.065 li
361.47 290.068 li
354.545 294.065 li
324.586 276.768 mo
323.445 276.109 li
323.445 276.109 li
331.661 271.366 li
332.055 271.592 332.478 271.789 332.92 271.957 cv
324.586 276.768 li
373.353 270.332 mo
358.525 261.771 li
359.674 261.116 li
373.353 269.014 li
373.353 270.332 li
f
384.504 312.681 mo
369.525 304.032 li
384.504 312.681 li
384.504 312.681 li
386.788 312.681 mo
386.788 312.681 li
395.155 307.849 li
395.155 307.849 li
386.788 312.681 li
385.646 312.021 mo
358.013 296.067 li
385.646 312.021 li
394.013 307.19 li
394.014 307.19 li
385.646 312.021 li
385.646 312.021 li
355.687 294.725 mo
354.545 294.065 li
361.47 290.068 li
371.908 284.041 li
372.052 284.382 372.241 284.715 372.472 285.034 cv
370.666 286.077 li
355.687 294.725 li
375.576 283.242 mo
375.259 282.921 375.111 282.625 375.111 282.417 cv
375.111 282.329 375.146 282.233 375.211 282.134 cv
382.663 277.832 li
383.805 278.491 li
375.576 283.242 li
f
415.605 330.637 mo
413.279 329.294 li
415.605 330.637 li
415.605 330.637 li
416.747 329.978 mo
416.747 329.978 li
407.253 324.496 li
416.747 329.978 li
431.726 321.329 li
416.747 329.978 li
446.705 312.681 mo
440.316 308.992 li
441.465 308.337 li
447.846 312.021 li
446.704 312.681 li
386.788 312.681 mo
385.646 312.021 li
394.014 307.19 li
395.155 307.849 li
386.788 312.681 li
f
447.847 349.251 mo
447.847 349.251 li
447.847 349.251 li
447.847 349.251 li
447.847 349.251 li
446.705 348.592 mo
422.414 334.568 li
446.706 348.592 li
448.989 348.592 mo
448.989 348.592 li
478.947 331.296 li
448.989 348.592 li
447.847 347.933 mo
432.868 339.285 li
447.847 347.933 li
462.826 339.285 li
447.847 347.933 li
417.888 330.637 mo
416.747 329.978 li
431.726 321.329 li
446.704 312.681 li
446.704 312.681 li
447.846 312.021 li
448.988 312.681 li
448.988 312.681 li
469.453 324.496 li
478.947 329.978 li
477.805 330.637 li
475.479 329.294 li
447.846 313.34 li
417.888 330.637 li
f
478.948 367.207 mo
447.847 349.251 li
447.847 349.251 li
448.989 348.592 li
447.847 347.933 li
462.826 339.285 li
477.805 330.637 li
477.805 330.637 li
478.947 329.978 li
480.089 330.637 li
510.047 347.934 li
510.047 347.934 li
511.189 348.593 li
510.047 349.252 li
510.047 349.252 li
478.948 367.207 li
448.989 348.592 mo
478.948 365.889 li
508.906 348.593 li
481.273 332.639 li
478.947 331.296 li
448.989 348.592 li
f
229.002 258.812 mo
197.902 240.856 li
229.002 222.901 li
230.144 222.242 li
231.286 222.901 li
251.107 234.345 li
261.243 240.197 li
260.102 240.856 li
230.144 223.561 li
200.185 240.856 li
230.144 258.153 li
238.42 253.375 li
230.144 258.153 li
230.144 258.153 li
229.002 258.812 li
f
260.103 276.769 mo
230.144 259.472 li
230.144 259.472 li
260.103 276.768 li
260.103 276.769 li
262.386 276.769 mo
262.386 276.768 li
292.344 259.472 li
292.344 259.472 li
262.386 276.769 li
261.245 276.109 mo
258.919 274.767 li
261.245 276.109 li
261.245 276.109 li
291.203 258.813 mo
261.244 241.516 li
231.286 258.813 li
230.144 258.153 li
238.42 253.375 li
260.102 240.856 li
260.102 240.856 li
261.244 240.197 li
262.385 240.856 li
262.385 240.856 li
271.879 246.338 li
292.344 258.153 li
291.203 258.813 li
f
291.203 294.724 mo
285.536 291.452 li
291.204 294.724 li
291.203 294.724 li
293.487 294.724 mo
293.487 294.724 li
297.479 292.419 li
293.487 294.724 li
292.345 294.065 mo
268.054 280.041 li
292.345 294.064 li
322.303 276.768 li
292.344 259.472 li
262.386 276.768 li
261.245 276.109 li
261.245 276.109 li
261.245 276.109 li
291.203 258.813 li
292.344 258.153 li
293.486 258.812 li
293.486 258.812 li
321.119 274.767 li
323.445 276.109 li
323.445 276.109 li
292.345 294.065 li
292.345 294.064 li
f
322.304 312.68 mo
294.671 296.726 li
322.304 312.68 li
324.587 312.68 mo
324.587 312.68 li
334.724 306.827 li
324.588 312.68 li
323.446 312.02 mo
323.446 312.02 li
338.425 303.373 li
323.446 312.02 li
353.404 294.725 mo
332.939 282.909 li
323.445 277.428 li
297.479 292.419 li
293.487 294.724 li
292.345 294.064 li
323.445 276.109 li
324.586 276.768 li
324.587 276.769 li
339.566 285.417 li
354.545 294.065 li
353.404 294.725 li
f
353.405 330.636 mo
338.425 321.987 li
353.405 330.636 li
353.405 330.636 li
355.688 330.636 mo
355.688 330.636 li
365.825 324.783 li
355.688 330.636 li
354.546 329.977 mo
354.546 329.977 li
358.539 327.672 li
354.546 329.977 li
339.567 321.328 mo
324.587 312.68 li
324.587 312.68 li
323.446 312.02 li
338.425 303.373 li
353.404 294.725 li
353.404 294.725 li
354.545 294.065 li
355.687 294.725 li
355.687 294.725 li
358.013 296.067 li
385.646 312.021 li
384.504 312.681 li
369.525 304.032 li
354.545 295.384 li
334.724 306.827 li
324.587 312.68 li
339.567 321.328 li
f
385.647 349.251 mo
385.647 349.251 li
385.647 349.251 li
385.647 349.251 li
385.647 349.251 li
386.789 348.592 mo
386.789 348.592 li
416.747 331.296 li
386.789 348.592 li
384.505 348.592 mo
375.012 343.111 li
384.505 348.592 li
385.647 347.933 mo
355.688 330.636 li
355.688 330.636 li
354.546 329.977 li
358.539 327.672 li
384.504 312.681 li
384.504 312.681 li
385.646 312.021 li
386.788 312.681 li
386.788 312.681 li
407.253 324.496 li
416.746 329.978 li
415.605 330.637 li
413.279 329.294 li
385.646 313.34 li
365.825 324.783 li
355.688 330.636 li
385.647 347.933 li
395.784 342.08 li
385.647 347.933 li
f
416.748 367.207 mo
385.647 349.251 li
385.647 349.251 li
386.789 348.592 li
385.647 347.933 li
395.784 342.08 li
415.605 330.637 li
415.605 330.637 li
416.747 329.978 li
417.888 330.637 li
432.868 339.285 li
447.847 347.933 li
448.989 348.592 li
447.847 349.251 li
447.847 349.251 li
416.748 367.207 li
386.789 348.592 mo
416.748 365.889 li
446.706 348.592 li
422.414 334.568 li
416.747 331.296 li
386.789 348.592 li
f
229.003 294.724 mo
197.903 276.768 li
229.002 258.812 li
230.144 258.153 li
231.286 258.812 li
258.919 274.767 li
261.245 276.109 li
260.103 276.768 li
230.144 259.472 li
200.186 276.768 li
230.145 294.064 li
256.111 279.073 li
230.145 294.065 li
230.145 294.064 li
229.003 294.724 li
f
260.104 312.68 mo
232.471 296.726 li
260.104 312.68 li
260.104 312.68 li
262.387 312.68 mo
262.387 312.68 li
292.345 295.383 li
262.387 312.68 li
231.287 294.724 mo
230.145 294.064 li
256.111 279.073 li
260.103 276.769 li
260.103 276.768 li
261.245 276.109 li
262.386 276.768 li
262.386 276.769 li
268.054 280.041 li
292.345 294.065 li
291.204 294.724 li
285.536 291.452 li
261.245 277.428 li
231.287 294.724 li
f
293.488 330.636 mo
293.488 330.636 li
315.169 318.117 li
293.488 330.636 li
291.204 330.636 mo
286.957 328.184 li
286.957 328.184 li
291.205 330.636 li
292.346 329.977 mo
287.679 327.282 li
287.679 327.282 li
292.346 329.977 li
292.346 329.977 li
268.772 316.366 mo
262.387 312.68 li
262.387 312.68 li
261.246 312.02 li
291.203 294.724 li
291.204 294.724 li
292.345 294.064 li
293.487 294.724 li
293.487 294.724 li
323.446 312.02 li
323.446 312.02 li
324.587 312.68 li
323.446 312.021 li
320.862 313.512 li
322.304 312.68 li
294.671 296.726 li
292.345 295.383 li
262.387 312.68 li
268.772 316.366 li
268.772 316.366 li
f
323.447 349.25 mo
323.447 349.25 li
323.447 349.25 li
323.447 349.25 li
323.447 349.25 li
324.588 348.591 mo
324.588 348.591 li
344.409 337.147 li
324.589 348.591 li
322.305 348.591 mo
307.326 339.943 li
322.305 348.591 li
323.447 347.932 mo
308.467 339.284 li
323.447 347.932 li
323.447 347.932 li
355.688 330.636 mo
354.546 329.977 li
353.405 330.636 li
338.425 321.987 li
323.446 313.339 li
315.169 318.117 li
293.488 330.636 li
292.346 329.977 li
292.346 329.977 li
292.346 329.977 li
320.862 313.512 li
323.446 312.021 li
324.587 312.68 li
339.567 321.328 li
354.546 329.977 li
354.546 329.977 li
355.688 330.636 li
f
354.547 367.206 mo
323.447 349.25 li
323.447 349.25 li
324.588 348.591 li
323.447 347.932 li
323.447 347.932 li
353.405 330.636 li
353.405 330.636 li
354.546 329.977 li
355.688 330.636 li
385.647 347.933 li
386.789 348.592 li
385.647 349.251 li
385.647 349.251 li
354.547 367.206 li
324.588 348.591 mo
354.547 365.888 li
384.505 348.592 li
375.012 343.111 li
354.546 331.295 li
344.409 337.147 li
324.588 348.591 li
f
231.288 330.635 mo
231.288 330.635 li
238.212 326.637 li
231.288 330.635 li
229.004 330.635 mo
197.904 312.679 li
229.003 294.724 li
230.145 294.064 li
231.287 294.724 li
261.246 312.02 li
262.387 312.68 li
261.246 312.021 li
260.104 312.68 li
232.471 296.726 li
230.145 295.383 li
200.187 312.679 li
230.146 329.976 li
253.179 316.678 li
230.146 329.976 li
230.146 329.976 li
229.004 330.635 li
f
261.247 349.25 mo
261.247 349.25 li
261.247 349.25 li
261.247 349.25 li
261.247 349.25 li
262.388 348.591 mo
262.388 348.591 li
277.367 339.943 li
262.388 348.591 li
260.105 348.591 mo
256.502 346.51 li
256.502 346.51 li
260.105 348.591 li
261.247 347.932 mo
258.921 346.589 li
261.247 347.932 li
291.205 330.636 li
286.957 328.184 li
287.208 327.896 287.449 327.594 287.679 327.282 cv
292.346 329.977 li
292.346 329.977 li
261.247 347.932 li
242.216 338.263 mo
230.146 331.294 li
230.146 331.294 li
242.216 338.263 li
242.216 338.263 li
231.288 330.635 mo
230.146 329.976 li
253.179 316.678 li
260.104 312.68 li
260.104 312.68 li
261.246 312.021 li
262.387 312.68 li
268.772 316.366 li
268.505 316.645 268.245 316.935 267.991 317.234 cv
267.528 316.966 li
266.296 315.117 264.461 314.056 262.244 313.916 cv
261.246 313.339 li
259.97 314.075 li
258.633 314.334 257.203 314.881 255.715 315.74 cv
254.226 316.6 252.794 317.705 251.454 318.992 cv
238.212 326.637 li
231.288 330.635 li
f
292.347 367.206 mo
261.247 349.25 li
261.247 349.25 li
262.388 348.591 li
261.247 347.932 li
292.346 329.977 li
293.488 330.636 li
293.488 330.636 li
308.467 339.284 li
323.447 347.932 li
324.588 348.591 li
323.447 349.25 li
323.447 349.25 li
292.347 367.206 li
262.388 348.591 mo
292.347 365.888 li
322.305 348.591 li
307.326 339.943 li
292.346 331.295 li
277.367 339.943 li
262.388 348.591 li
f
230.147 367.205 mo
197.905 348.59 li
229.004 330.635 li
230.146 329.976 li
231.288 330.635 li
231.288 330.635 li
242.315 337.001 li
242.269 337.425 242.236 337.845 242.216 338.263 cv
230.146 331.294 li
200.188 348.59 li
230.147 365.887 li
260.105 348.591 li
256.502 346.51 li
257.643 345.851 li
258.921 346.589 li
261.247 347.932 li
262.388 348.591 li
261.247 349.25 li
261.246 349.25 li
230.147 367.205 li
f
261.935 156.48 mo
261.327 156.832 260.74 157.271 260.178 157.768 cv
259.935 149.861 254.224 146.717 247.196 150.774 cv
241.472 154.079 236.623 161.154 234.884 168.089 cv
233.47 167.899 231.811 168.267 230.029 169.296 cv
224.905 172.254 220.751 179.448 220.751 185.364 cv
220.751 191.28 224.905 193.678 230.029 190.72 cv
261.935 172.299 li
265.718 170.114 268.785 164.803 268.785 160.436 cv
268.785 156.067 265.718 154.297 261.935 156.48 cv
cp
0 0 0 0 cmyk
f
546.446 140.201 mo
545.837 140.553 545.25 140.992 544.689 141.488 cv
544.446 133.582 538.735 130.438 531.707 134.495 cv
525.983 137.8 521.133 144.875 519.395 151.81 cv
517.981 151.62 516.322 151.987 514.54 153.017 cv
509.416 155.975 505.262 163.168 505.262 169.084 cv
505.262 175.001 509.416 177.398 514.54 174.44 cv
546.446 156.02 li
550.229 153.835 553.295 148.523 553.295 144.155 cv
553.295 139.788 550.229 138.018 546.446 140.201 cv
cp
f
397.126 367.107 mo
396.882 367.107 396.634 367.051 396.404 366.93 cv
395.638 366.53 395.341 365.585 395.742 364.82 cv
397.329 361.781 399.657 359.221 402.129 357.794 cv
403.682 356.897 405.208 356.483 406.628 356.549 cv
408.668 356.646 411.154 355.134 413.344 352.495 cv
414.588 350.997 415.955 349.812 417.406 348.974 cv
418.963 348.074 420.479 347.666 421.909 347.729 cv
423.938 347.838 426.432 346.313 428.623 343.675 cv
429.867 342.176 431.233 340.99 432.685 340.152 cv
434.238 339.256 435.752 338.842 437.185 338.907 cv
439.233 339.019 441.71 337.492 443.9 334.854 cv
445.146 333.354 446.512 332.17 447.962 331.332 cv
450.255 330.007 452.541 329.723 454.402 330.53 cv
455.194 330.875 455.557 331.796 455.213 332.588 cv
454.871 333.38 453.95 333.743 453.156 333.399 cv
452.226 332.994 450.939 333.224 449.527 334.039 cv
448.414 334.683 447.299 335.655 446.306 336.852 cv
443.448 340.294 440.045 342.188 437.03 342.03 cv
436.234 342.004 435.259 342.277 434.249 342.86 cv
433.134 343.504 432.021 344.476 431.029 345.672 cv
428.169 349.116 424.769 351.004 421.751 350.852 cv
420.935 350.807 419.981 351.098 418.969 351.682 cv
417.857 352.324 416.743 353.297 415.75 354.493 cv
412.891 357.936 409.499 359.814 406.473 359.672 cv
405.669 359.635 404.703 359.918 403.693 360.502 cv
401.72 361.641 399.833 363.742 398.513 366.268 cv
398.234 366.802 397.69 367.107 397.126 367.107 cv
cp
f
218.523 232.671 mo
218.523 234.59 217.176 236.923 215.514 237.882 cv
213.853 238.841 212.506 238.063 212.506 236.145 cv
212.506 234.227 213.853 231.894 215.514 230.935 cv
217.176 229.976 218.523 230.753 218.523 232.671 cv
cp
f
228.274 227.041 mo
228.274 228.96 226.927 231.293 225.266 232.252 cv
223.604 233.211 222.257 232.434 222.257 230.516 cv
222.257 228.597 223.604 226.264 225.266 225.305 cv
226.927 224.346 228.274 225.123 228.274 227.041 cv
cp
f
238.025 221.412 mo
238.025 223.33 236.678 225.663 235.017 226.622 cv
233.355 227.581 232.008 226.804 232.008 224.886 cv
232.008 222.967 233.355 220.634 235.017 219.675 cv
236.678 218.716 238.025 219.493 238.025 221.412 cv
cp
f
247.776 215.782 mo
247.776 217.7 246.429 220.033 244.768 220.992 cv
243.107 221.951 241.759 221.174 241.759 219.256 cv
241.759 217.337 243.107 215.004 244.768 214.045 cv
246.429 213.086 247.776 213.863 247.776 215.782 cv
cp
f
500.607 310.431 mo
500.607 312.292 499.3 314.556 497.688 315.486 cv
496.076 316.417 494.769 315.662 494.769 313.801 cv
494.769 311.939 496.076 309.676 497.688 308.745 cv
499.3 307.814 500.607 308.568 500.607 310.431 cv
cp
f
508.66 305.781 mo
508.66 307.643 507.352 309.906 505.741 310.837 cv
504.128 311.768 502.822 311.014 502.822 309.151 cv
502.822 307.29 504.128 305.026 505.741 304.096 cv
507.352 303.165 508.66 303.92 508.66 305.781 cv
cp
f
500.607 301.132 mo
500.607 302.994 499.3 305.257 497.688 306.188 cv
496.076 307.119 494.769 306.364 494.769 304.503 cv
494.769 302.642 496.076 300.378 497.688 299.447 cv
499.3 298.517 500.607 299.271 500.607 301.132 cv
cp
f
508.66 296.483 mo
508.66 298.345 507.352 300.608 505.741 301.539 cv
504.128 302.47 502.822 301.715 502.822 299.854 cv
502.822 297.992 504.128 295.729 505.741 294.798 cv
507.352 293.867 508.66 294.622 508.66 296.483 cv
cp
f
431.937 64.8262 mo
425.92 68.3008 li
425.92 61.3535 li
431.937 57.8799 li
431.937 64.8262 li
cp
f
440.288 59.9453 mo
434.271 63.4189 li
434.271 56.4717 li
440.288 52.998 li
440.288 59.9453 li
cp
f
431.989 73.8398 mo
425.972 77.3135 li
425.972 70.3662 li
431.989 66.8926 li
431.989 73.8398 li
cp
f
440.288 69.0488 mo
434.271 72.5225 li
434.271 65.5752 li
440.288 62.1016 li
440.288 69.0488 li
cp
f
235.655 357.762 mo
233.532 357.762 232.075 356.069 232.075 353.144 cv
232.075 349.018 234.971 344.001 238.544 341.939 cv
239.578 341.342 240.552 341.062 241.418 341.062 cv
241.738 341.062 242.043 341.1 242.331 341.175 cv
242.25 340.534 242.195 339.871 242.195 339.159 cv
242.195 338.862 242.202 338.564 242.216 338.263 cv
256.502 346.51 li
238.544 356.878 li
237.506 357.478 236.524 357.762 235.655 357.762 cv
257.643 345.851 mo
242.315 337.001 li
243.007 330.625 246.627 323.629 251.454 318.992 cv
259.97 314.075 li
260.579 313.958 261.168 313.9 261.735 313.9 cv
261.907 313.9 262.077 313.905 262.244 313.916 cv
267.528 316.966 li
267.629 317.118 267.727 317.276 267.82 317.439 cv
267.877 317.37 267.934 317.301 267.991 317.234 cv
281.711 325.155 li
286.957 328.184 li
286.126 329.139 285.189 329.948 284.199 330.52 cv
257.643 345.851 li
287.679 327.282 mo
268.772 316.366 li
269.833 315.254 270.994 314.309 272.21 313.606 cv
273.677 312.76 275.063 312.359 276.29 312.359 cv
279.221 312.359 281.253 314.644 281.347 318.607 cv
282.202 317.603 283.17 316.751 284.199 316.156 cv
285.197 315.58 286.14 315.307 286.977 315.307 cv
289.017 315.307 290.418 316.934 290.418 319.747 cv
290.418 322.224 289.332 325.036 287.679 327.282 cv
.12958 .00274662 0 0 cmyk
f
286.957 328.184 mo
281.711 325.155 li
286.957 328.184 li
286.957 328.184 li
287.679 327.282 mo
268.772 316.366 li
268.772 316.366 li
287.679 327.282 li
287.679 327.282 li
.0717174 .000488289 0 0 cmyk
f
256.502 346.51 mo
242.216 338.263 li
242.216 338.263 li
256.502 346.51 li
256.502 346.51 li
286.957 328.184 mo
281.711 325.155 li
267.991 317.234 li
268.245 316.935 268.505 316.645 268.772 316.366 cv
287.679 327.282 li
287.449 327.594 287.208 327.896 286.957 328.184 cv
251.454 318.992 mo
252.794 317.705 254.226 316.6 255.715 315.74 cv
257.203 314.881 258.633 314.334 259.97 314.075 cv
251.454 318.992 li
267.528 316.966 mo
262.244 313.916 li
264.461 314.056 266.296 315.117 267.528 316.966 cv
f
256.502 346.51 mo
242.216 338.263 li
242.236 337.845 242.269 337.425 242.315 337.001 cv
257.643 345.851 li
256.502 346.51 li
f
57.4604 120.254 mo
57.4604 110.981 li
59.1499 110.981 li
59.1499 119.085 li
61.3696 119.085 li
61.3696 120.254 li
57.4604 120.254 li
cp
0 0 0 0 cmyk
f
64.1655 119.259 mo
64.2925 119.259 64.396 119.23 64.4761 119.175 cv
64.5562 119.118 64.6138 119.032 64.6499 118.914 cv
64.6851 118.797 64.7085 118.684 64.7192 118.573 cv
64.731 118.464 64.7358 118.321 64.7358 118.146 cv
64.7358 115.746 li
64.7358 115.608 64.7329 115.494 64.728 115.402 cv
64.7222 115.312 64.7095 115.212 64.689 115.104 cv
64.6685 114.995 64.6372 114.91 64.5962 114.849 cv
64.4282 114.692 li
64.3579 114.649 64.27 114.628 64.1655 114.628 cv
64.0386 114.628 63.9351 114.657 63.855 114.715 cv
63.7749 114.772 63.7173 114.86 63.6821 114.978 cv
63.646 115.095 63.6235 115.209 63.6118 115.318 cv
63.6011 115.429 63.5952 115.571 63.5952 115.746 cv
63.5952 118.146 li
63.5952 118.283 63.5981 118.398 63.604 118.489 cv
63.6089 118.581 63.6226 118.68 63.6431 118.786 cv
63.6636 118.893 63.6938 118.976 63.7349 119.037 cv
63.9028 119.194 li
63.9731 119.237 64.061 119.259 64.1655 119.259 cv
cp
64.1597 120.36 mo
63.4478 120.36 62.9175 120.16 62.5688 119.759 cv
62.2202 119.358 62.0464 118.785 62.0464 118.039 cv
62.0464 115.853 li
62.0464 115.107 62.2202 114.534 62.5688 114.133 cv
62.9175 113.732 63.4478 113.532 64.1597 113.532 cv
64.8755 113.532 65.4097 113.732 65.7622 114.133 cv
66.1147 114.534 66.2905 115.107 66.2905 115.853 cv
66.2905 118.039 li
66.2905 118.785 66.1147 119.358 65.7622 119.759 cv
65.4097 120.16 64.8755 120.36 64.1597 120.36 cv
cp
f
67.3872 120.254 mo
67.3872 113.633 li
68.9526 113.633 li
68.9526 114.65 li
69.1724 114.259 69.395 113.978 69.6206 113.806 cv
69.8462 113.635 70.0884 113.549 70.3452 113.549 cv
70.5806 113.576 li
70.5806 115.126 li
70.4048 115.059 70.2241 115.025 70.0376 115.025 cv
69.814 115.032 69.6177 115.089 69.4478 115.192 cv
69.2778 115.297 69.1128 115.471 68.9526 115.713 cv
68.9526 120.254 li
67.3872 120.254 li
cp
f
72.7505 116.238 mo
73.8804 116.238 li
73.8804 115.606 li
73.8804 115.271 73.8384 115.03 73.7544 114.885 cv
73.6704 114.74 73.522 114.667 73.3091 114.667 cv
73.0933 114.667 72.9458 114.749 72.8677 114.913 cv
72.7896 115.077 72.7505 115.376 72.7505 115.808 cv
72.7505 116.238 li
cp
73.3267 120.36 mo
72.5698 120.36 72.0249 120.151 71.6929 119.733 cv
71.3618 119.316 71.1958 118.699 71.1958 117.883 cv
71.1958 116.009 li
71.1958 115.192 71.3638 114.576 71.6987 114.158 cv
72.0347 113.74 72.5747 113.532 73.3208 113.532 cv
73.7153 113.532 74.0483 113.59 74.3188 113.705 cv
74.5894 113.821 74.8003 113.996 74.9507 114.23 cv
75.1021 114.466 75.2095 114.737 75.272 115.045 cv
75.3354 115.353 75.3677 115.723 75.3677 116.154 cv
75.3677 117.021 li
72.7505 117.021 li
72.7505 118.017 li
72.7505 118.155 72.7515 118.262 72.7534 118.339 cv
72.7554 118.415 72.7612 118.507 72.7729 118.615 cv
72.7837 118.724 72.8013 118.808 72.8257 118.867 cv
72.9233 119.049 li
73.0854 119.18 li
73.3208 119.22 li
73.5298 119.22 73.6753 119.146 73.7573 118.998 cv
73.8384 118.852 73.8804 118.638 73.8804 118.358 cv
73.8804 117.978 li
75.3618 117.978 li
75.3618 118.24 li
75.3618 118.927 75.1909 119.451 74.8501 119.814 cv
74.5093 120.179 74.0015 120.36 73.3267 120.36 cv
cp
f
76.436 120.254 mo
76.436 113.633 li
77.9233 113.633 li
77.9233 114.214 li
78.3667 113.748 78.8911 113.515 79.4946 113.515 cv
80.0464 113.515 80.4136 113.785 80.5962 114.326 cv
81.063 113.785 81.6196 113.515 82.269 113.515 cv
82.6382 113.515 82.9341 113.649 83.1577 113.918 cv
83.3813 114.187 83.4937 114.576 83.4937 115.087 cv
83.4937 120.254 li
82.0054 120.254 li
82.0054 115.221 li
82.0054 114.979 81.9653 114.807 81.8853 114.706 cv
81.8052 114.605 81.687 114.558 81.5308 114.561 cv
81.2583 114.568 80.9839 114.697 80.7085 114.946 cv
80.7114 115.014 li
80.7144 115.087 li
80.7144 120.254 li
79.2319 120.254 li
79.2319 115.221 li
79.2319 114.979 79.1919 114.807 79.1118 114.706 cv
79.0317 114.605 78.9116 114.558 78.7515 114.561 cv
78.4897 114.568 78.2144 114.699 77.9233 114.952 cv
77.9233 120.254 li
76.436 120.254 li
cp
f
87.4966 120.254 mo
87.4966 113.633 li
89.063 113.633 li
89.063 120.254 li
87.4966 120.254 li
cp
87.4966 112.587 mo
87.4966 111.267 li
89.0679 111.267 li
89.0679 112.587 li
87.4966 112.587 li
cp
f
92.5474 119.236 mo
92.6626 119.236 92.7593 119.203 92.8374 119.139 cv
92.9165 119.073 92.9731 118.978 93.0083 118.853 cv
93.0435 118.729 93.0679 118.6 93.0806 118.467 cv
93.0942 118.335 93.1011 118.176 93.1011 117.989 cv
93.1011 115.707 li
93.1011 115.555 93.0923 115.417 93.0757 115.296 cv
93.0591 115.175 93.0298 115.06 92.9888 114.949 cv
92.9478 114.84 92.8862 114.756 92.8042 114.698 cv
92.7222 114.64 92.6235 114.613 92.5073 114.617 cv
92.3022 114.62 92.0864 114.708 91.8589 114.88 cv
91.8589 119.029 li
92.0825 119.167 92.312 119.236 92.5474 119.236 cv
cp
90.2935 122.435 mo
90.2935 113.633 li
91.8589 113.633 li
91.8589 114.142 li
92.269 113.731 92.7144 113.528 93.1958 113.532 cv
93.4302 113.535 93.6382 113.59 93.8188 113.694 cv
94.0005 113.799 94.1421 113.928 94.2446 114.083 cv
94.3472 114.237 94.4302 114.42 94.4956 114.631 cv
94.561 114.842 94.605 115.037 94.6274 115.218 cv
94.6499 115.398 94.6606 115.582 94.6606 115.769 cv
94.6606 117.938 li
94.6606 118.274 94.6333 118.583 94.5767 118.864 cv
94.521 119.146 94.4331 119.401 94.314 119.63 cv
94.1948 119.859 94.0317 120.039 93.8247 120.167 cv
93.6177 120.296 93.3745 120.36 93.0952 120.36 cv
92.6851 120.36 92.2729 120.161 91.8589 119.762 cv
91.8589 122.435 li
90.2935 122.435 li
cp
f
97.4683 120.36 mo
96.9204 120.36 96.4712 120.207 96.1206 119.901 cv
95.77 119.596 95.5298 119.156 95.3989 118.582 cv
96.5845 118.151 li
96.6665 118.517 96.7817 118.793 96.9312 118.981 cv
97.0806 119.17 97.2671 119.261 97.4907 119.253 cv
97.6548 119.249 97.7896 119.19 97.896 119.077 cv
98.0024 118.963 98.0513 118.824 98.0444 118.66 cv
98.0288 118.422 97.811 118.121 97.3901 117.76 cv
96.5005 116.999 li
95.8589 116.447 95.5464 115.871 95.561 115.271 cv
95.5718 114.742 95.7524 114.319 96.1011 114.005 cv
96.4497 113.689 96.894 113.532 97.4341 113.532 cv
97.9526 113.532 98.3745 113.688 98.6987 114.002 cv
99.0229 114.314 99.2329 114.734 99.3306 115.26 cv
98.3013 115.69 li
98.1597 115.005 97.895 114.66 97.5073 114.656 cv
97.3433 114.652 97.2114 114.702 97.1128 114.807 cv
97.0142 114.911 96.9644 115.036 96.9644 115.182 cv
96.9614 115.383 97.146 115.646 97.5181 115.97 cv
98.4243 116.792 li
98.5776 116.927 98.7036 117.047 98.8042 117.153 cv
98.9058 117.259 99.0103 117.389 99.1206 117.542 cv
99.231 117.694 99.313 117.858 99.3667 118.034 cv
99.4204 118.209 99.4478 118.397 99.4478 118.599 cv
99.4478 119.158 99.2622 119.591 98.8911 119.898 cv
98.52 120.206 98.0464 120.36 97.4683 120.36 cv
cp
f
101.333 120.354 mo
100.956 120.354 100.681 120.217 100.507 119.94 cv
100.334 119.665 100.248 119.325 100.248 118.923 cv
100.248 113.633 li
101.808 113.633 li
101.808 118.604 li
101.808 118.81 101.839 118.962 101.903 119.063 cv
101.966 119.163 102.083 119.212 102.255 119.208 cv
102.438 119.208 102.662 119.115 102.926 118.929 cv
102.926 113.633 li
104.487 113.633 li
104.487 120.254 li
102.926 120.254 li
102.926 119.633 li
102.401 120.114 101.87 120.354 101.333 120.354 cv
cp
f
105.695 120.254 mo
105.695 113.633 li
107.182 113.633 li
107.182 114.214 li
107.625 113.748 108.15 113.515 108.753 113.515 cv
109.305 113.515 109.672 113.785 109.855 114.326 cv
110.322 113.785 110.878 113.515 111.528 113.515 cv
111.897 113.515 112.193 113.649 112.417 113.918 cv
112.64 114.187 112.752 114.576 112.752 115.087 cv
112.752 120.254 li
111.264 120.254 li
111.264 115.221 li
111.264 114.979 111.224 114.807 111.144 114.706 cv
111.064 114.605 110.946 114.558 110.79 114.561 cv
110.517 114.568 110.243 114.697 109.967 114.946 cv
109.97 115.014 li
109.973 115.087 li
109.973 120.254 li
108.491 120.254 li
108.491 115.221 li
108.491 114.979 108.451 114.807 108.371 114.706 cv
108.291 114.605 108.17 114.558 108.01 114.561 cv
107.749 114.568 107.473 114.699 107.182 114.952 cv
107.182 120.254 li
105.695 120.254 li
cp
f
118.757 119.241 mo
118.948 119.241 119.149 119.182 119.362 119.063 cv
119.362 114.835 li
119.149 114.7 118.946 114.634 118.752 114.634 cv
118.543 114.634 118.393 114.729 118.302 114.919 cv
118.21 115.109 118.165 115.352 118.165 115.646 cv
118.165 118.073 li
118.165 118.312 118.178 118.509 118.204 118.666 cv
118.23 118.822 118.289 118.957 118.38 119.071 cv
118.471 119.185 118.597 119.241 118.757 119.241 cv
cp
118.209 120.36 mo
117.669 120.36 117.264 120.168 116.997 119.784 cv
116.728 119.4 116.593 118.791 116.593 117.955 cv
116.593 116.031 li
116.593 115.678 116.621 115.356 116.674 115.069 cv
116.729 114.782 116.814 114.52 116.932 114.281 cv
117.049 114.043 117.214 113.858 117.426 113.728 cv
117.639 113.597 117.893 113.532 118.187 113.532 cv
118.605 113.532 118.997 113.701 119.362 114.041 cv
119.362 110.981 li
120.927 110.981 li
120.927 120.254 li
119.362 120.254 li
119.362 119.801 li
119.007 120.17 118.624 120.356 118.209 120.36 cv
cp
f
124.121 119.259 mo
124.248 119.259 124.351 119.23 124.431 119.175 cv
124.511 119.118 124.569 119.032 124.605 118.914 cv
124.64 118.797 124.664 118.684 124.674 118.573 cv
124.686 118.464 124.691 118.321 124.691 118.146 cv
124.691 115.746 li
124.691 115.608 124.688 115.494 124.683 115.402 cv
124.677 115.312 124.665 115.212 124.644 115.104 cv
124.624 114.995 124.592 114.91 124.551 114.849 cv
124.383 114.692 li
124.313 114.649 124.225 114.628 124.121 114.628 cv
123.994 114.628 123.89 114.657 123.81 114.715 cv
123.73 114.772 123.672 114.86 123.637 114.978 cv
123.601 115.095 123.579 115.209 123.567 115.318 cv
123.556 115.429 123.55 115.571 123.55 115.746 cv
123.55 118.146 li
123.55 118.283 123.553 118.398 123.559 118.489 cv
123.564 118.581 123.578 118.68 123.598 118.786 cv
123.619 118.893 123.649 118.976 123.69 119.037 cv
123.858 119.194 li
123.928 119.237 124.016 119.259 124.121 119.259 cv
cp
124.115 120.36 mo
123.403 120.36 122.873 120.16 122.524 119.759 cv
122.175 119.358 122.001 118.785 122.001 118.039 cv
122.001 115.853 li
122.001 115.107 122.175 114.534 122.524 114.133 cv
122.873 113.732 123.403 113.532 124.115 113.532 cv
124.831 113.532 125.365 113.732 125.717 114.133 cv
126.07 114.534 126.246 115.107 126.246 115.853 cv
126.246 118.039 li
126.246 118.785 126.07 119.358 125.717 119.759 cv
125.365 120.16 124.831 120.36 124.115 120.36 cv
cp
f
127.42 120.254 mo
127.42 110.981 li
128.986 110.981 li
128.986 120.254 li
127.42 120.254 li
cp
f
132.212 119.259 mo
132.339 119.259 132.443 119.23 132.523 119.175 cv
132.603 119.118 132.661 119.032 132.697 118.914 cv
132.732 118.797 132.755 118.684 132.766 118.573 cv
132.778 118.464 132.783 118.321 132.783 118.146 cv
132.783 115.746 li
132.783 115.608 132.78 115.494 132.775 115.402 cv
132.769 115.312 132.756 115.212 132.736 115.104 cv
132.715 114.995 132.684 114.91 132.643 114.849 cv
132.475 114.692 li
132.405 114.649 132.317 114.628 132.212 114.628 cv
132.085 114.628 131.982 114.657 131.902 114.715 cv
131.822 114.772 131.764 114.86 131.729 114.978 cv
131.693 115.095 131.67 115.209 131.659 115.318 cv
131.648 115.429 131.642 115.571 131.642 115.746 cv
131.642 118.146 li
131.642 118.283 131.645 118.398 131.651 118.489 cv
131.656 118.581 131.669 118.68 131.69 118.786 cv
131.71 118.893 131.741 118.976 131.782 119.037 cv
131.95 119.194 li
132.02 119.237 132.108 119.259 132.212 119.259 cv
cp
132.207 120.36 mo
131.495 120.36 130.964 120.16 130.616 119.759 cv
130.267 119.358 130.093 118.785 130.093 118.039 cv
130.093 115.853 li
130.093 115.107 130.267 114.534 130.616 114.133 cv
130.964 113.732 131.495 113.532 132.207 113.532 cv
132.922 113.532 133.457 113.732 133.809 114.133 cv
134.162 114.534 134.337 115.107 134.337 115.853 cv
134.337 118.039 li
134.337 118.785 134.162 119.358 133.809 119.759 cv
133.457 120.16 132.922 120.36 132.207 120.36 cv
cp
f
135.434 120.254 mo
135.434 113.633 li
137 113.633 li
137 114.65 li
137.219 114.259 137.442 113.978 137.667 113.806 cv
137.893 113.635 138.135 113.549 138.392 113.549 cv
138.627 113.576 li
138.627 115.126 li
138.452 115.059 138.271 115.025 138.084 115.025 cv
137.861 115.032 137.665 115.089 137.495 115.192 cv
137.325 115.297 137.16 115.471 137 115.713 cv
137 120.254 li
135.434 120.254 li
cp
f
143.895 120.36 mo
143.347 120.36 142.898 120.207 142.547 119.901 cv
142.197 119.596 141.957 119.156 141.826 118.582 cv
143.011 118.151 li
143.093 118.517 143.208 118.793 143.358 118.981 cv
143.507 119.17 143.694 119.261 143.917 119.253 cv
144.082 119.249 144.216 119.19 144.323 119.077 cv
144.429 118.963 144.478 118.824 144.471 118.66 cv
144.456 118.422 144.238 118.121 143.817 117.76 cv
142.927 116.999 li
142.286 116.447 141.973 115.871 141.988 115.271 cv
141.999 114.742 142.179 114.319 142.528 114.005 cv
142.876 113.689 143.321 113.532 143.861 113.532 cv
144.379 113.532 144.801 113.688 145.125 114.002 cv
145.45 114.314 145.66 114.734 145.757 115.26 cv
144.728 115.69 li
144.586 115.005 144.322 114.66 143.934 114.656 cv
143.77 114.652 143.638 114.702 143.54 114.807 cv
143.441 114.911 143.391 115.036 143.391 115.182 cv
143.388 115.383 143.573 115.646 143.945 115.97 cv
144.851 116.792 li
145.004 116.927 145.13 117.047 145.231 117.153 cv
145.333 117.259 145.437 117.389 145.547 117.542 cv
145.658 117.694 145.74 117.858 145.793 118.034 cv
145.847 118.209 145.875 118.397 145.875 118.599 cv
145.875 119.158 145.689 119.591 145.318 119.898 cv
144.947 120.206 144.473 120.36 143.895 120.36 cv
cp
f
146.769 120.254 mo
146.769 113.633 li
148.335 113.633 li
148.335 120.254 li
146.769 120.254 li
cp
146.769 112.587 mo
146.769 111.267 li
148.34 111.267 li
148.34 112.587 li
146.769 112.587 li
cp
f
151.412 120.344 mo
151.109 120.34 150.853 120.289 150.642 120.192 cv
150.431 120.096 150.269 119.957 150.156 119.775 cv
150.042 119.595 149.959 119.393 149.91 119.169 cv
149.859 118.945 149.834 118.685 149.834 118.386 cv
149.834 114.667 li
149.18 114.667 li
149.18 113.633 li
149.834 113.633 li
149.834 111.687 li
151.406 111.687 li
151.406 113.633 li
152.413 113.633 li
152.413 114.667 li
151.406 114.667 li
151.406 118.486 li
151.406 118.703 151.453 118.858 151.548 118.954 cv
151.643 119.049 151.795 119.099 152.004 119.102 cv
152.149 119.105 152.308 119.095 152.479 119.068 cv
152.479 120.265 li
152.036 120.324 151.679 120.351 151.412 120.344 cv
cp
f
158.038 119.146 mo
158.157 119.146 158.276 119.102 158.393 119.013 cv
158.51 118.923 158.604 118.832 158.675 118.738 cv
158.675 116.915 li
157.9 117.344 157.512 117.83 157.512 118.375 cv
157.512 118.613 157.558 118.802 157.649 118.939 cv
157.741 119.078 157.87 119.146 158.038 119.146 cv
cp
157.439 120.36 mo
157.022 120.356 156.679 120.193 156.414 119.871 cv
156.147 119.549 156.013 119.184 156.013 118.777 cv
156.013 118.394 156.077 118.058 156.204 117.771 cv
156.331 117.483 156.538 117.237 156.827 117.032 cv
157.116 116.828 157.356 116.679 157.545 116.585 cv
157.736 116.492 158.029 116.369 158.423 116.216 cv
158.536 116.172 158.62 116.138 158.675 116.115 cv
158.675 115.562 li
158.675 115.264 158.641 115.046 158.572 114.907 cv
158.502 114.77 158.362 114.7 158.15 114.7 cv
157.803 114.7 157.625 114.943 157.619 115.428 cv
157.596 115.842 li
156.097 115.785 li
156.1 115.662 li
156.103 115.545 li
156.151 114.852 156.357 114.343 156.721 114.019 cv
157.084 113.694 157.603 113.532 158.278 113.532 cv
158.93 113.532 159.415 113.709 159.729 114.063 cv
160.044 114.417 160.202 114.919 160.202 115.567 cv
160.202 118.593 li
160.202 119.1 160.243 119.653 160.325 120.254 cv
158.911 120.254 li
158.825 119.821 158.77 119.497 158.748 119.281 cv
158.655 119.587 158.5 119.843 158.281 120.05 cv
158.063 120.257 157.783 120.36 157.439 120.36 cv
cp
f
161.349 120.254 mo
161.349 113.633 li
162.836 113.633 li
162.836 114.214 li
163.28 113.748 163.804 113.515 164.408 113.515 cv
164.959 113.515 165.327 113.785 165.509 114.326 cv
165.976 113.785 166.533 113.515 167.182 113.515 cv
167.551 113.515 167.847 113.649 168.071 113.918 cv
168.294 114.187 168.407 114.576 168.407 115.087 cv
168.407 120.254 li
166.918 120.254 li
166.918 115.221 li
166.918 114.979 166.878 114.807 166.798 114.706 cv
166.718 114.605 166.6 114.558 166.444 114.561 cv
166.171 114.568 165.897 114.697 165.622 114.946 cv
165.625 115.014 li
165.627 115.087 li
165.627 120.254 li
164.145 120.254 li
164.145 115.221 li
164.145 114.979 164.105 114.807 164.025 114.706 cv
163.945 114.605 163.825 114.558 163.665 114.561 cv
163.403 114.568 163.127 114.699 162.836 114.952 cv
162.836 120.254 li
161.349 120.254 li
cp
f
170.996 116.238 mo
172.125 116.238 li
172.125 115.606 li
172.125 115.271 172.083 115.03 172 114.885 cv
171.916 114.74 171.767 114.667 171.554 114.667 cv
171.338 114.667 171.191 114.749 171.113 114.913 cv
171.035 115.077 170.996 115.376 170.996 115.808 cv
170.996 116.238 li
cp
171.572 120.36 mo
170.815 120.36 170.27 120.151 169.938 119.733 cv
169.607 119.316 169.441 118.699 169.441 117.883 cv
169.441 116.009 li
169.441 115.192 169.609 114.576 169.944 114.158 cv
170.28 113.74 170.82 113.532 171.566 113.532 cv
171.96 113.532 172.293 113.59 172.564 113.705 cv
172.834 113.821 173.045 113.996 173.196 114.23 cv
173.347 114.466 173.455 114.737 173.517 115.045 cv
173.581 115.353 173.613 115.723 173.613 116.154 cv
173.613 117.021 li
170.996 117.021 li
170.996 118.017 li
170.996 118.155 170.997 118.262 170.999 118.339 cv
171 118.415 171.006 118.507 171.018 118.615 cv
171.029 118.724 171.046 118.808 171.071 118.867 cv
171.168 119.049 li
171.331 119.18 li
171.566 119.22 li
171.775 119.22 171.92 119.146 172.002 118.998 cv
172.083 118.852 172.125 118.638 172.125 118.358 cv
172.125 117.978 li
173.607 117.978 li
173.607 118.24 li
173.607 118.927 173.436 119.451 173.095 119.814 cv
172.754 120.179 172.247 120.36 171.572 120.36 cv
cp
f
176.527 120.344 mo
176.224 120.34 175.968 120.289 175.757 120.192 cv
175.546 120.096 175.384 119.957 175.271 119.775 cv
175.157 119.595 175.075 119.393 175.025 119.169 cv
174.974 118.945 174.95 118.685 174.95 118.386 cv
174.95 114.667 li
174.295 114.667 li
174.295 113.633 li
174.95 113.633 li
174.95 111.687 li
176.521 111.687 li
176.521 113.633 li
177.528 113.633 li
177.528 114.667 li
176.521 114.667 li
176.521 118.486 li
176.521 118.703 176.568 118.858 176.664 118.954 cv
176.758 119.049 176.911 119.099 177.12 119.102 cv
177.264 119.105 177.423 119.095 177.594 119.068 cv
177.594 120.265 li
177.151 120.324 176.794 120.351 176.527 120.344 cv
cp
f
178.579 121.825 mo
178.411 121.238 li
178.631 121.183 178.811 121.069 178.951 120.899 cv
179.09 120.73 179.161 120.515 179.161 120.254 cv
178.338 120.254 li
178.338 118.738 li
179.876 118.738 li
179.876 120.147 li
179.876 121.095 179.444 121.654 178.579 121.825 cv
cp
f
185.669 120.36 mo
184.919 120.36 184.381 120.149 184.053 119.729 cv
183.725 119.307 183.561 118.697 183.561 117.899 cv
183.561 115.981 li
183.561 115.184 183.725 114.576 184.053 114.158 cv
184.381 113.74 184.919 113.532 185.669 113.532 cv
186.374 113.532 186.885 113.698 187.205 114.029 cv
187.523 114.361 187.682 114.876 187.682 115.573 cv
187.682 116.11 li
186.223 116.11 li
186.223 115.545 li
186.223 115.21 186.183 114.976 186.103 114.844 cv
186.022 114.711 185.883 114.645 185.686 114.645 cv
185.466 114.645 185.318 114.723 185.242 114.88 cv
185.165 115.036 185.126 115.327 185.126 115.752 cv
185.126 118.168 li
185.126 118.589 185.168 118.874 185.252 119.021 cv
185.336 119.168 185.481 119.241 185.686 119.241 cv
185.895 119.241 186.037 119.17 186.111 119.026 cv
186.185 118.883 186.223 118.666 186.223 118.375 cv
186.223 117.665 li
187.682 117.665 li
187.682 118.291 li
187.682 118.977 187.519 119.493 187.193 119.84 cv
186.867 120.187 186.359 120.36 185.669 120.36 cv
cp
f
190.708 119.259 mo
190.834 119.259 190.938 119.23 191.018 119.175 cv
191.098 119.118 191.156 119.032 191.192 118.914 cv
191.227 118.797 191.25 118.684 191.261 118.573 cv
191.273 118.464 191.278 118.321 191.278 118.146 cv
191.278 115.746 li
191.278 115.608 191.275 115.494 191.27 115.402 cv
191.264 115.312 191.251 115.212 191.231 115.104 cv
191.21 114.995 191.179 114.91 191.138 114.849 cv
190.97 114.692 li
190.9 114.649 190.812 114.628 190.708 114.628 cv
190.581 114.628 190.477 114.657 190.397 114.715 cv
190.317 114.772 190.259 114.86 190.224 114.978 cv
190.188 115.095 190.166 115.209 190.154 115.318 cv
190.143 115.429 190.137 115.571 190.137 115.746 cv
190.137 118.146 li
190.137 118.283 190.14 118.398 190.146 118.489 cv
190.151 118.581 190.165 118.68 190.185 118.786 cv
190.206 118.893 190.236 118.976 190.277 119.037 cv
190.445 119.194 li
190.515 119.237 190.603 119.259 190.708 119.259 cv
cp
190.702 120.36 mo
189.99 120.36 189.459 120.16 189.111 119.759 cv
188.762 119.358 188.588 118.785 188.588 118.039 cv
188.588 115.853 li
188.588 115.107 188.762 114.534 189.111 114.133 cv
189.459 113.732 189.99 113.532 190.702 113.532 cv
191.417 113.532 191.952 113.732 192.304 114.133 cv
192.657 114.534 192.833 115.107 192.833 115.853 cv
192.833 118.039 li
192.833 118.785 192.657 119.358 192.304 119.759 cv
191.952 120.16 191.417 120.36 190.702 120.36 cv
cp
f
193.907 120.254 mo
193.907 113.633 li
195.472 113.633 li
195.472 114.281 li
196.005 113.781 196.544 113.532 197.088 113.532 cv
197.465 113.532 197.74 113.67 197.914 113.945 cv
198.086 114.222 198.173 114.561 198.173 114.964 cv
198.173 120.254 li
196.608 120.254 li
196.608 115.311 li
196.608 115.102 196.578 114.946 196.518 114.846 cv
196.458 114.745 196.343 114.697 196.171 114.7 cv
195.977 114.704 195.745 114.805 195.472 115.003 cv
195.472 120.254 li
193.907 120.254 li
cp
f
201.048 120.36 mo
200.5 120.36 200.051 120.207 199.701 119.901 cv
199.35 119.596 199.11 119.156 198.979 118.582 cv
200.165 118.151 li
200.247 118.517 200.362 118.793 200.511 118.981 cv
200.661 119.17 200.847 119.261 201.071 119.253 cv
201.235 119.249 201.37 119.19 201.476 119.077 cv
201.583 118.963 201.631 118.824 201.625 118.66 cv
201.609 118.422 201.391 118.121 200.97 117.76 cv
200.081 116.999 li
199.439 116.447 199.126 115.871 199.141 115.271 cv
199.152 114.742 199.333 114.319 199.681 114.005 cv
200.03 113.689 200.474 113.532 201.014 113.532 cv
201.533 113.532 201.955 113.688 202.279 114.002 cv
202.603 114.314 202.813 114.734 202.911 115.26 cv
201.881 115.69 li
201.74 115.005 201.475 114.66 201.087 114.656 cv
200.923 114.652 200.792 114.702 200.693 114.807 cv
200.594 114.911 200.544 115.036 200.544 115.182 cv
200.542 115.383 200.726 115.646 201.098 115.97 cv
202.004 116.792 li
202.158 116.927 202.284 117.047 202.384 117.153 cv
202.486 117.259 202.59 117.389 202.701 117.542 cv
202.811 117.694 202.893 117.858 202.947 118.034 cv
203 118.209 203.028 118.397 203.028 118.599 cv
203.028 119.158 202.842 119.591 202.471 119.898 cv
202.1 120.206 201.626 120.36 201.048 120.36 cv
cp
f
205.304 116.238 mo
206.434 116.238 li
206.434 115.606 li
206.434 115.271 206.392 115.03 206.308 114.885 cv
206.224 114.74 206.076 114.667 205.863 114.667 cv
205.647 114.667 205.5 114.749 205.421 114.913 cv
205.343 115.077 205.304 115.376 205.304 115.808 cv
205.304 116.238 li
cp
205.88 120.36 mo
205.124 120.36 204.579 120.151 204.247 119.733 cv
203.916 119.316 203.75 118.699 203.75 117.883 cv
203.75 116.009 li
203.75 115.192 203.917 114.576 204.252 114.158 cv
204.588 113.74 205.128 113.532 205.875 113.532 cv
206.269 113.532 206.602 113.59 206.873 113.705 cv
207.143 113.821 207.354 113.996 207.504 114.23 cv
207.656 114.466 207.763 114.737 207.826 115.045 cv
207.889 115.353 207.921 115.723 207.921 116.154 cv
207.921 117.021 li
205.304 117.021 li
205.304 118.017 li
205.304 118.155 205.305 118.262 205.307 118.339 cv
205.309 118.415 205.315 118.507 205.327 118.615 cv
205.337 118.724 205.355 118.808 205.379 118.867 cv
205.477 119.049 li
205.639 119.18 li
205.875 119.22 li
206.083 119.22 206.229 119.146 206.311 118.998 cv
206.392 118.852 206.434 118.638 206.434 118.358 cv
206.434 117.978 li
207.916 117.978 li
207.916 118.24 li
207.916 118.927 207.745 119.451 207.404 119.814 cv
207.063 120.179 206.555 120.36 205.88 120.36 cv
cp
f
210.975 120.36 mo
210.225 120.36 209.687 120.149 209.359 119.729 cv
209.031 119.307 208.867 118.697 208.867 117.899 cv
208.867 115.981 li
208.867 115.184 209.031 114.576 209.359 114.158 cv
209.687 113.74 210.225 113.532 210.975 113.532 cv
211.679 113.532 212.191 113.698 212.51 114.029 cv
212.829 114.361 212.988 114.876 212.988 115.573 cv
212.988 116.11 li
211.529 116.11 li
211.529 115.545 li
211.529 115.21 211.489 114.976 211.409 114.844 cv
211.328 114.711 211.189 114.645 210.992 114.645 cv
210.772 114.645 210.624 114.723 210.547 114.88 cv
210.47 115.036 210.432 115.327 210.432 115.752 cv
210.432 118.168 li
210.432 118.589 210.474 118.874 210.558 119.021 cv
210.642 119.168 210.787 119.241 210.992 119.241 cv
211.201 119.241 211.342 119.17 211.417 119.026 cv
211.491 118.883 211.529 118.666 211.529 118.375 cv
211.529 117.665 li
212.988 117.665 li
212.988 118.291 li
212.988 118.977 212.825 119.493 212.499 119.84 cv
212.172 120.187 211.665 120.36 210.975 120.36 cv
cp
f
215.863 120.344 mo
215.56 120.34 215.304 120.289 215.093 120.192 cv
214.882 120.096 214.72 119.957 214.607 119.775 cv
214.493 119.595 214.411 119.393 214.361 119.169 cv
214.31 118.945 214.286 118.685 214.286 118.386 cv
214.286 114.667 li
213.631 114.667 li
213.631 113.633 li
214.286 113.633 li
214.286 111.687 li
215.857 111.687 li
215.857 113.633 li
216.864 113.633 li
216.864 114.667 li
215.857 114.667 li
215.857 118.486 li
215.857 118.703 215.904 118.858 216 118.954 cv
216.094 119.049 216.247 119.099 216.456 119.102 cv
216.6 119.105 216.759 119.095 216.93 119.068 cv
216.93 120.265 li
216.487 120.324 216.13 120.351 215.863 120.344 cv
cp
f
219.251 116.238 mo
220.381 116.238 li
220.381 115.606 li
220.381 115.271 220.339 115.03 220.255 114.885 cv
220.171 114.74 220.023 114.667 219.81 114.667 cv
219.594 114.667 219.447 114.749 219.369 114.913 cv
219.291 115.077 219.251 115.376 219.251 115.808 cv
219.251 116.238 li
cp
219.828 120.36 mo
219.071 120.36 218.526 120.151 218.194 119.733 cv
217.863 119.316 217.697 118.699 217.697 117.883 cv
217.697 116.009 li
217.697 115.192 217.865 114.576 218.2 114.158 cv
218.536 113.74 219.076 113.532 219.822 113.532 cv
220.216 113.532 220.549 113.59 220.82 113.705 cv
221.09 113.821 221.301 113.996 221.452 114.23 cv
221.603 114.466 221.71 114.737 221.773 115.045 cv
221.836 115.353 221.869 115.723 221.869 116.154 cv
221.869 117.021 li
219.251 117.021 li
219.251 118.017 li
219.251 118.155 219.252 118.262 219.254 118.339 cv
219.256 118.415 219.262 118.507 219.274 118.615 cv
219.285 118.724 219.302 118.808 219.327 118.867 cv
219.424 119.049 li
219.586 119.18 li
219.822 119.22 li
220.031 119.22 220.176 119.146 220.258 118.998 cv
220.339 118.852 220.381 118.638 220.381 118.358 cv
220.381 117.978 li
221.863 117.978 li
221.863 118.24 li
221.863 118.927 221.692 119.451 221.351 119.814 cv
221.01 120.179 220.502 120.36 219.828 120.36 cv
cp
f
224.783 120.344 mo
224.48 120.34 224.224 120.289 224.013 120.192 cv
223.802 120.096 223.64 119.957 223.527 119.775 cv
223.413 119.595 223.331 119.393 223.281 119.169 cv
223.23 118.945 223.206 118.685 223.206 118.386 cv
223.206 114.667 li
222.551 114.667 li
222.551 113.633 li
223.206 113.633 li
223.206 111.687 li
224.777 111.687 li
224.777 113.633 li
225.784 113.633 li
225.784 114.667 li
224.777 114.667 li
224.777 118.486 li
224.777 118.703 224.824 118.858 224.919 118.954 cv
225.014 119.049 225.167 119.099 225.375 119.102 cv
225.52 119.105 225.679 119.095 225.85 119.068 cv
225.85 120.265 li
225.407 120.324 225.05 120.351 224.783 120.344 cv
cp
f
227.78 120.354 mo
227.403 120.354 227.128 120.217 226.955 119.94 cv
226.782 119.665 226.695 119.325 226.695 118.923 cv
226.695 113.633 li
228.255 113.633 li
228.255 118.604 li
228.255 118.81 228.287 118.962 228.35 119.063 cv
228.414 119.163 228.531 119.212 228.703 119.208 cv
228.885 119.208 229.109 119.115 229.374 118.929 cv
229.374 113.633 li
230.934 113.633 li
230.934 120.254 li
229.374 120.254 li
229.374 119.633 li
228.848 120.114 228.317 120.354 227.78 120.354 cv
cp
f
232.165 120.254 mo
232.165 113.633 li
233.73 113.633 li
233.73 114.65 li
233.95 114.259 234.172 113.978 234.398 113.806 cv
234.624 113.635 234.866 113.549 235.123 113.549 cv
235.358 113.576 li
235.358 115.126 li
235.182 115.059 235.001 115.025 234.815 115.025 cv
234.591 115.032 234.395 115.089 234.225 115.192 cv
234.055 115.297 233.89 115.471 233.73 115.713 cv
233.73 120.254 li
232.165 120.254 li
cp
f
59.2388 132.89 mo
59.3579 132.89 59.4771 132.845 59.5942 132.756 cv
59.7114 132.666 59.8052 132.575 59.8765 132.481 cv
59.8765 130.658 li
59.1011 131.087 58.7134 131.573 58.7134 132.118 cv
58.7134 132.356 58.7593 132.545 58.8501 132.683 cv
58.9419 132.821 59.0708 132.89 59.2388 132.89 cv
cp
58.6401 134.104 mo
58.2231 134.1 57.8804 133.937 57.6147 133.614 cv
57.3481 133.292 57.2144 132.927 57.2144 132.521 cv
57.2144 132.137 57.2778 131.801 57.4048 131.514 cv
57.5317 131.227 57.7388 130.98 58.0278 130.775 cv
58.3169 130.571 58.5571 130.422 58.7466 130.328 cv
58.937 130.235 59.23 130.112 59.6245 129.959 cv
59.7368 129.915 59.8208 129.881 59.8765 129.858 cv
59.8765 129.305 li
59.8765 129.007 59.8423 128.789 59.7729 128.65 cv
59.7036 128.513 59.563 128.443 59.3511 128.443 cv
59.0044 128.443 58.8267 128.687 58.8198 129.171 cv
58.7974 129.585 li
57.2983 129.528 li
57.3013 129.405 li
57.3042 129.288 li
57.3521 128.595 57.5581 128.086 57.9224 127.762 cv
58.2856 127.438 58.8042 127.275 59.479 127.275 cv
60.1313 127.275 60.6157 127.452 60.9302 127.807 cv
61.2456 128.16 61.4028 128.662 61.4028 129.311 cv
61.4028 132.336 li
61.4028 132.843 61.4438 133.396 61.5259 133.997 cv
60.1118 133.997 li
60.0259 133.564 59.9712 133.24 59.9487 133.024 cv
59.856 133.33 59.7007 133.586 59.4819 133.793 cv
59.2642 134 58.9839 134.104 58.6401 134.104 cv
cp
f
64.6021 132.984 mo
64.7925 132.984 64.9937 132.925 65.2065 132.806 cv
65.2065 128.578 li
64.9937 128.443 64.7905 128.377 64.5972 128.377 cv
64.3882 128.377 64.2378 128.472 64.147 128.662 cv
64.0552 128.853 64.0093 129.095 64.0093 129.389 cv
64.0093 131.816 li
64.0093 132.055 64.0229 132.252 64.0483 132.409 cv
64.0747 132.565 64.1333 132.7 64.2251 132.814 cv
64.3159 132.928 64.4419 132.984 64.6021 132.984 cv
cp
64.0542 134.104 mo
63.5142 134.104 63.1089 133.911 62.8413 133.527 cv
62.5728 133.144 62.438 132.534 62.438 131.698 cv
62.438 129.774 li
62.438 129.421 62.4653 129.1 62.519 128.813 cv
62.5737 128.525 62.6587 128.263 62.7769 128.024 cv
62.894 127.786 63.0591 127.602 63.271 127.471 cv
63.4839 127.34 63.7378 127.275 64.0317 127.275 cv
64.4497 127.275 64.8413 127.444 65.2065 127.784 cv
65.2065 124.725 li
66.772 124.725 li
66.772 133.997 li
65.2065 133.997 li
65.2065 133.544 li
64.8521 133.913 64.4683 134.1 64.0542 134.104 cv
cp
f
68.019 133.997 mo
68.019 127.376 li
69.5854 127.376 li
69.5854 133.997 li
68.019 133.997 li
cp
68.019 126.33 mo
68.019 125.01 li
69.5903 125.01 li
69.5903 126.33 li
68.019 126.33 li
cp
f
73.0698 132.979 mo
73.1851 132.979 73.2817 132.946 73.3599 132.882 cv
73.439 132.816 73.4956 132.721 73.5308 132.596 cv
73.5659 132.472 73.5903 132.343 73.603 132.21 cv
73.6167 132.078 73.6235 131.919 73.6235 131.732 cv
73.6235 129.45 li
73.6235 129.298 73.6147 129.16 73.5981 129.039 cv
73.5815 128.918 73.5522 128.803 73.5112 128.692 cv
73.4702 128.583 73.4087 128.499 73.3267 128.441 cv
73.2446 128.383 73.146 128.356 73.0298 128.36 cv
72.8247 128.363 72.6089 128.451 72.3813 128.623 cv
72.3813 132.772 li
72.605 132.91 72.8345 132.979 73.0698 132.979 cv
cp
70.8159 136.178 mo
70.8159 127.376 li
72.3813 127.376 li
72.3813 127.885 li
72.7915 127.475 73.2368 127.271 73.7183 127.275 cv
73.9526 127.278 74.1606 127.333 74.3413 127.438 cv
74.5229 127.542 74.6646 127.671 74.7671 127.826 cv
74.8696 127.98 74.9526 128.163 75.0181 128.374 cv
75.0835 128.585 75.1274 128.78 75.1499 128.961 cv
75.1724 129.142 75.1831 129.325 75.1831 129.512 cv
75.1831 131.682 li
75.1831 132.018 75.1558 132.326 75.0991 132.607 cv
75.0435 132.889 74.9556 133.145 74.8364 133.373 cv
74.7173 133.603 74.5542 133.782 74.3472 133.91 cv
74.1401 134.039 73.897 134.104 73.6177 134.104 cv
73.2075 134.104 72.7954 133.904 72.3813 133.505 cv
72.3813 136.178 li
70.8159 136.178 li
cp
f
76.3237 133.997 mo
76.3237 127.376 li
77.8901 127.376 li
77.8901 133.997 li
76.3237 133.997 li
cp
76.3237 126.33 mo
76.3237 125.01 li
77.895 125.01 li
77.895 126.33 li
76.3237 126.33 li
cp
f
80.8374 134.104 mo
80.2896 134.104 79.8403 133.95 79.4897 133.645 cv
79.1392 133.339 78.8989 132.899 78.7681 132.325 cv
79.9536 131.895 li
80.0356 132.26 80.1509 132.536 80.3003 132.725 cv
80.4497 132.913 80.6362 133.004 80.8599 132.996 cv
81.0239 132.992 81.1587 132.934 81.2651 132.82 cv
81.3716 132.706 81.4204 132.567 81.4136 132.403 cv
81.3979 132.165 81.1802 131.864 80.7593 131.503 cv
79.8696 130.742 li
79.228 130.19 78.9155 129.614 78.9302 129.015 cv
78.9409 128.485 79.1216 128.063 79.4702 127.748 cv
79.8188 127.433 80.2632 127.275 80.8032 127.275 cv
81.3218 127.275 81.7437 127.432 82.0679 127.745 cv
82.3921 128.058 82.6021 128.478 82.6997 129.003 cv
81.6704 129.434 li
81.5288 128.748 81.2642 128.403 80.8765 128.399 cv
80.7124 128.396 80.5806 128.445 80.4819 128.55 cv
80.3833 128.654 80.3335 128.779 80.3335 128.925 cv
80.3306 129.126 80.5151 129.389 80.8872 129.713 cv
81.7935 130.535 li
81.9468 130.67 82.0728 130.79 82.1733 130.896 cv
82.2749 131.002 82.3794 131.132 82.4897 131.285 cv
82.6001 131.438 82.6821 131.602 82.7358 131.777 cv
82.7896 131.952 82.8169 132.141 82.8169 132.342 cv
82.8169 132.901 82.6313 133.334 82.2603 133.642 cv
81.8892 133.949 81.4155 134.104 80.8374 134.104 cv
cp
f
85.647 134.104 mo
84.897 134.104 84.3589 133.893 84.0308 133.472 cv
83.7026 133.05 83.5386 132.44 83.5386 131.643 cv
83.5386 129.725 li
83.5386 128.927 83.7026 128.319 84.0308 127.901 cv
84.3589 127.483 84.897 127.275 85.647 127.275 cv
86.3511 127.275 86.8628 127.441 87.1821 127.772 cv
87.5005 128.104 87.6597 128.619 87.6597 129.316 cv
87.6597 129.854 li
86.2007 129.854 li
86.2007 129.288 li
86.2007 128.953 86.1606 128.719 86.0806 128.587 cv
85.9995 128.454 85.8608 128.388 85.6636 128.388 cv
85.4438 128.388 85.2954 128.466 85.2192 128.623 cv
85.1421 128.779 85.104 129.07 85.104 129.495 cv
85.104 131.911 li
85.104 132.332 85.146 132.617 85.23 132.764 cv
85.314 132.911 85.4585 132.984 85.6636 132.984 cv
85.8726 132.984 86.0142 132.913 86.0884 132.77 cv
86.1626 132.626 86.2007 132.409 86.2007 132.118 cv
86.2007 131.408 li
87.6597 131.408 li
87.6597 132.034 li
87.6597 132.72 87.4966 133.236 87.1704 133.583 cv
86.8442 133.93 86.3364 134.104 85.647 134.104 cv
cp
f
88.7388 133.997 mo
88.7388 127.376 li
90.3052 127.376 li
90.3052 133.997 li
88.7388 133.997 li
cp
88.7388 126.33 mo
88.7388 125.01 li
90.3101 125.01 li
90.3101 126.33 li
88.7388 126.33 li
cp
f
91.5356 133.997 mo
91.5356 127.376 li
93.1011 127.376 li
93.1011 128.024 li
93.6343 127.524 94.1733 127.275 94.7173 127.275 cv
95.0942 127.275 95.3687 127.413 95.5425 127.688 cv
95.7153 127.965 95.8022 128.304 95.8022 128.707 cv
95.8022 133.997 li
94.2368 133.997 li
94.2368 129.054 li
94.2368 128.845 94.2065 128.689 94.147 128.589 cv
94.0874 128.488 93.9722 128.44 93.8003 128.443 cv
93.606 128.447 93.3735 128.548 93.1011 128.746 cv
93.1011 133.997 li
91.5356 133.997 li
cp
f
98.9341 130.955 mo
99.1948 130.955 99.3647 130.857 99.4429 130.664 cv
99.522 130.47 99.561 130.127 99.561 129.635 cv
99.561 129.128 99.5229 128.775 99.4487 128.578 cv
99.3745 128.381 99.2065 128.281 98.9458 128.281 cv
98.6812 128.281 98.5093 128.382 98.4312 128.581 cv
98.353 128.78 98.314 129.132 98.314 129.635 cv
98.314 129.813 98.3169 129.966 98.3247 130.091 cv
98.3325 130.216 98.3491 130.336 98.3755 130.451 cv
98.4009 130.567 98.437 130.659 98.481 130.729 cv
98.6606 130.894 li
98.7349 130.935 98.8257 130.955 98.9341 130.955 cv
cp
99.2358 134.903 mo
99.5571 134.903 99.7905 134.862 99.938 134.78 cv
100.085 134.698 100.161 134.565 100.165 134.383 cv
100.176 134.186 100.125 134.041 100.013 133.949 cv
99.9019 133.858 99.6987 133.8 99.4038 133.773 cv
98.353 133.673 li
98.1255 133.938 98.0112 134.182 98.0112 134.405 cv
98.0112 134.524 98.0405 134.618 98.0981 134.685 cv
98.1558 134.752 98.2749 134.805 98.4565 134.845 cv
98.6372 134.884 98.897 134.903 99.2358 134.903 cv
cp
99.2476 136.005 mo
99.0503 136.005 98.8774 136.003 98.73 135.999 cv
98.5825 135.995 98.4126 135.985 98.2183 135.969 cv
98.0249 135.951 97.8579 135.928 97.7183 135.896 cv
97.5786 135.864 97.4351 135.82 97.2876 135.765 cv
97.1401 135.708 97.021 135.643 96.9292 135.565 cv
96.8384 135.489 96.7622 135.393 96.7026 135.275 cv
96.6431 135.157 96.6138 135.026 96.6138 134.881 cv
96.6138 134.325 96.9243 133.857 97.5474 133.477 cv
97.1001 133.324 96.8628 133.076 96.8374 132.733 cv
96.8188 132.495 96.8687 132.289 96.9878 132.115 cv
97.1079 131.941 97.311 131.737 97.5981 131.503 cv
97.3521 131.316 97.1675 131.083 97.0444 130.804 cv
96.9214 130.524 96.8599 130.149 96.8599 129.68 cv
96.8599 128.867 97.0356 128.263 97.3882 127.868 cv
97.7407 127.473 98.2505 127.275 98.9175 127.275 cv
99.603 127.275 100.077 127.491 100.338 127.924 cv
100.42 127.823 100.544 127.704 100.709 127.565 cv
100.875 127.428 101.05 127.314 101.233 127.225 cv
101.451 127.124 li
101.82 127.996 li
101.689 128.03 101.492 128.097 101.227 128.198 cv
100.962 128.299 100.786 128.377 100.696 128.433 cv
100.767 128.563 100.829 128.747 100.88 128.983 cv
100.933 129.221 100.958 129.458 100.958 129.696 cv
100.958 131.21 100.297 131.967 98.9731 131.967 cv
98.8657 131.967 98.7173 131.951 98.5288 131.92 cv
98.3403 131.888 98.2183 131.86 98.1626 131.839 cv
98.0356 132.028 97.9761 132.174 97.9839 132.274 cv
97.9946 132.424 98.189 132.517 98.5649 132.555 cv
98.6099 132.562 98.8071 132.583 99.1577 132.618 cv
99.5083 132.654 99.7134 132.676 99.7729 132.683 cv
100.329 132.742 100.735 132.903 100.993 133.167 cv
101.25 133.43 101.378 133.805 101.378 134.294 cv
101.378 134.879 101.214 135.311 100.886 135.588 cv
100.558 135.866 100.012 136.005 99.2476 136.005 cv
cp
f
106.5 129.981 mo
107.63 129.981 li
107.63 129.35 li
107.63 129.015 107.588 128.773 107.504 128.628 cv
107.42 128.483 107.272 128.41 107.059 128.41 cv
106.843 128.41 106.696 128.492 106.618 128.656 cv
106.54 128.82 106.5 129.119 106.5 129.551 cv
106.5 129.981 li
cp
107.077 134.104 mo
106.32 134.104 105.775 133.895 105.443 133.477 cv
105.112 133.06 104.946 132.442 104.946 131.626 cv
104.946 129.752 li
104.946 128.936 105.114 128.319 105.449 127.901 cv
105.785 127.483 106.325 127.275 107.071 127.275 cv
107.465 127.275 107.798 127.333 108.069 127.448 cv
108.339 127.564 108.55 127.739 108.701 127.974 cv
108.852 128.209 108.959 128.48 109.022 128.788 cv
109.085 129.096 109.118 129.466 109.118 129.897 cv
109.118 130.765 li
106.5 130.765 li
106.5 131.76 li
106.5 131.898 106.501 132.005 106.503 132.082 cv
106.505 132.158 106.511 132.25 106.523 132.358 cv
106.534 132.467 106.551 132.551 106.576 132.61 cv
106.673 132.792 li
106.835 132.923 li
107.071 132.963 li
107.28 132.963 107.425 132.889 107.507 132.741 cv
107.588 132.595 107.63 132.381 107.63 132.102 cv
107.63 131.721 li
109.112 131.721 li
109.112 131.983 li
109.112 132.67 108.941 133.194 108.6 133.558 cv
108.259 133.922 107.751 134.104 107.077 134.104 cv
cp
f
110.287 133.997 mo
110.287 124.725 li
111.852 124.725 li
111.852 133.997 li
110.287 133.997 li
cp
f
113.132 133.997 mo
113.132 127.376 li
114.699 127.376 li
114.699 133.997 li
113.132 133.997 li
cp
113.132 126.33 mo
113.132 125.01 li
114.704 125.01 li
114.704 126.33 li
113.132 126.33 li
cp
f
117.775 134.087 mo
117.472 134.083 117.216 134.032 117.005 133.936 cv
116.794 133.839 116.632 133.7 116.519 133.519 cv
116.405 133.338 116.323 133.136 116.273 132.912 cv
116.222 132.688 116.198 132.428 116.198 132.129 cv
116.198 128.41 li
115.543 128.41 li
115.543 127.376 li
116.198 127.376 li
116.198 125.43 li
117.769 125.43 li
117.769 127.376 li
118.776 127.376 li
118.776 128.41 li
117.769 128.41 li
117.769 132.229 li
117.769 132.446 117.816 132.602 117.912 132.697 cv
118.006 132.792 118.159 132.842 118.368 132.845 cv
118.512 132.849 118.671 132.838 118.842 132.812 cv
118.842 134.008 li
118.399 134.067 118.042 134.094 117.775 134.087 cv
cp
f
119.827 135.568 mo
119.659 134.981 li
119.879 134.926 120.059 134.813 120.199 134.643 cv
120.338 134.474 120.409 134.258 120.409 133.997 cv
119.586 133.997 li
119.586 132.481 li
121.125 132.481 li
121.125 133.891 li
121.125 134.838 120.692 135.397 119.827 135.568 cv
cp
f
126.649 134.104 mo
126.101 134.104 125.652 133.95 125.301 133.645 cv
124.951 133.339 124.71 132.899 124.58 132.325 cv
125.765 131.895 li
125.847 132.26 125.962 132.536 126.112 132.725 cv
126.261 132.913 126.448 133.004 126.671 132.996 cv
126.835 132.992 126.97 132.934 127.077 132.82 cv
127.183 132.706 127.232 132.567 127.225 132.403 cv
127.209 132.165 126.992 131.864 126.571 131.503 cv
125.681 130.742 li
125.04 130.19 124.727 129.614 124.742 129.015 cv
124.752 128.485 124.933 128.063 125.282 127.748 cv
125.63 127.433 126.075 127.275 126.615 127.275 cv
127.133 127.275 127.555 127.432 127.879 127.745 cv
128.204 128.058 128.414 128.478 128.511 129.003 cv
127.482 129.434 li
127.34 128.748 127.076 128.403 126.688 128.399 cv
126.524 128.396 126.392 128.445 126.293 128.55 cv
126.195 128.654 126.145 128.779 126.145 128.925 cv
126.142 129.126 126.327 129.389 126.699 129.713 cv
127.605 130.535 li
127.758 130.67 127.884 130.79 127.985 130.896 cv
128.086 131.002 128.191 131.132 128.301 131.285 cv
128.412 131.438 128.494 131.602 128.547 131.777 cv
128.601 131.952 128.628 132.141 128.628 132.342 cv
128.628 132.901 128.443 133.334 128.072 133.642 cv
127.701 133.949 127.227 134.104 126.649 134.104 cv
cp
f
130.905 129.981 mo
132.035 129.981 li
132.035 129.35 li
132.035 129.015 131.993 128.773 131.909 128.628 cv
131.825 128.483 131.676 128.41 131.463 128.41 cv
131.248 128.41 131.1 128.492 131.022 128.656 cv
130.944 128.82 130.905 129.119 130.905 129.551 cv
130.905 129.981 li
cp
131.481 134.104 mo
130.724 134.104 130.179 133.895 129.847 133.477 cv
129.516 133.06 129.35 132.442 129.35 131.626 cv
129.35 129.752 li
129.35 128.936 129.518 128.319 129.853 127.901 cv
130.189 127.483 130.729 127.275 131.475 127.275 cv
131.87 127.275 132.203 127.333 132.473 127.448 cv
132.744 127.564 132.955 127.739 133.105 127.974 cv
133.256 128.209 133.364 128.48 133.426 128.788 cv
133.49 129.096 133.522 129.466 133.522 129.897 cv
133.522 130.765 li
130.905 130.765 li
130.905 131.76 li
130.905 131.898 130.906 132.005 130.908 132.082 cv
130.91 132.158 130.916 132.25 130.927 132.358 cv
130.938 132.467 130.956 132.551 130.98 132.61 cv
131.078 132.792 li
131.24 132.923 li
131.475 132.963 li
131.684 132.963 131.83 132.889 131.912 132.741 cv
131.993 132.595 132.035 132.381 132.035 132.102 cv
132.035 131.721 li
133.516 131.721 li
133.516 131.983 li
133.516 132.67 133.345 133.194 133.004 133.558 cv
132.664 133.922 132.156 134.104 131.481 134.104 cv
cp
f
136.642 132.984 mo
136.833 132.984 137.034 132.925 137.247 132.806 cv
137.247 128.578 li
137.034 128.443 136.831 128.377 136.637 128.377 cv
136.428 128.377 136.278 128.472 136.187 128.662 cv
136.095 128.853 136.049 129.095 136.049 129.389 cv
136.049 131.816 li
136.049 132.055 136.063 132.252 136.088 132.409 cv
136.115 132.565 136.173 132.7 136.265 132.814 cv
136.356 132.928 136.482 132.984 136.642 132.984 cv
cp
136.094 134.104 mo
135.554 134.104 135.149 133.911 134.881 133.527 cv
134.613 133.144 134.478 132.534 134.478 131.698 cv
134.478 129.774 li
134.478 129.421 134.505 129.1 134.559 128.813 cv
134.614 128.525 134.699 128.263 134.817 128.024 cv
134.934 127.786 135.099 127.602 135.311 127.471 cv
135.524 127.34 135.778 127.275 136.072 127.275 cv
136.49 127.275 136.881 127.444 137.247 127.784 cv
137.247 124.725 li
138.812 124.725 li
138.812 133.997 li
137.247 133.997 li
137.247 133.544 li
136.892 133.913 136.508 134.1 136.094 134.104 cv
cp
f
144.857 132.984 mo
145.047 132.984 145.249 132.925 145.461 132.806 cv
145.461 128.578 li
145.249 128.443 145.045 128.377 144.852 128.377 cv
144.643 128.377 144.493 128.472 144.402 128.662 cv
144.31 128.853 144.264 129.095 144.264 129.389 cv
144.264 131.816 li
144.264 132.055 144.278 132.252 144.303 132.409 cv
144.33 132.565 144.388 132.7 144.48 132.814 cv
144.571 132.928 144.697 132.984 144.857 132.984 cv
cp
144.309 134.104 mo
143.769 134.104 143.364 133.911 143.096 133.527 cv
142.828 133.144 142.693 132.534 142.693 131.698 cv
142.693 129.774 li
142.693 129.421 142.72 129.1 142.774 128.813 cv
142.829 128.525 142.914 128.263 143.032 128.024 cv
143.149 127.786 143.314 127.602 143.526 127.471 cv
143.739 127.34 143.993 127.275 144.287 127.275 cv
144.705 127.275 145.096 127.444 145.461 127.784 cv
145.461 124.725 li
147.027 124.725 li
147.027 133.997 li
145.461 133.997 li
145.461 133.544 li
145.107 133.913 144.723 134.1 144.309 134.104 cv
cp
f
150.22 133.002 mo
150.347 133.002 150.451 132.974 150.531 132.918 cv
150.611 132.861 150.668 132.775 150.705 132.657 cv
150.74 132.54 150.763 132.427 150.774 132.316 cv
150.786 132.207 150.791 132.064 150.791 131.889 cv
150.791 129.489 li
150.791 129.352 150.788 129.237 150.783 129.146 cv
150.777 129.055 150.764 128.955 150.744 128.847 cv
150.723 128.738 150.692 128.653 150.651 128.592 cv
150.483 128.436 li
150.413 128.393 150.325 128.371 150.22 128.371 cv
150.093 128.371 149.99 128.4 149.91 128.458 cv
149.83 128.516 149.772 128.604 149.737 128.721 cv
149.701 128.838 149.678 128.952 149.667 129.062 cv
149.656 129.172 149.65 129.314 149.65 129.489 cv
149.65 131.889 li
149.65 132.026 149.653 132.142 149.659 132.232 cv
149.664 132.324 149.677 132.423 149.698 132.529 cv
149.718 132.636 149.749 132.719 149.79 132.78 cv
149.958 132.938 li
150.028 132.98 150.116 133.002 150.22 133.002 cv
cp
150.214 134.104 mo
149.502 134.104 148.972 133.903 148.624 133.502 cv
148.275 133.102 148.101 132.528 148.101 131.782 cv
148.101 129.596 li
148.101 128.851 148.275 128.277 148.624 127.876 cv
148.972 127.476 149.502 127.275 150.214 127.275 cv
150.93 127.275 151.464 127.476 151.817 127.876 cv
152.169 128.277 152.345 128.851 152.345 129.596 cv
152.345 131.782 li
152.345 132.528 152.169 133.102 151.817 133.502 cv
151.464 133.903 150.93 134.104 150.214 134.104 cv
cp
f
157.647 129.981 mo
158.777 129.981 li
158.777 129.35 li
158.777 129.015 158.735 128.773 158.651 128.628 cv
158.567 128.483 158.418 128.41 158.206 128.41 cv
157.99 128.41 157.842 128.492 157.764 128.656 cv
157.686 128.82 157.647 129.119 157.647 129.551 cv
157.647 129.981 li
cp
158.223 134.104 mo
157.466 134.104 156.921 133.895 156.589 133.477 cv
156.258 133.06 156.092 132.442 156.092 131.626 cv
156.092 129.752 li
156.092 128.936 156.26 128.319 156.595 127.901 cv
156.931 127.483 157.471 127.275 158.217 127.275 cv
158.612 127.275 158.945 127.333 159.215 127.448 cv
159.486 127.564 159.697 127.739 159.847 127.974 cv
159.999 128.209 160.106 128.48 160.168 128.788 cv
160.232 129.096 160.264 129.466 160.264 129.897 cv
160.264 130.765 li
157.647 130.765 li
157.647 131.76 li
157.647 131.898 157.648 132.005 157.65 132.082 cv
157.652 132.158 157.658 132.25 157.669 132.358 cv
157.68 132.467 157.698 132.551 157.722 132.61 cv
157.82 132.792 li
157.982 132.923 li
158.217 132.963 li
158.426 132.963 158.572 132.889 158.654 132.741 cv
158.735 132.595 158.777 132.381 158.777 132.102 cv
158.777 131.721 li
160.258 131.721 li
160.258 131.983 li
160.258 132.67 160.087 133.194 159.747 133.558 cv
159.406 133.922 158.898 134.104 158.223 134.104 cv
cp
f
161.382 133.997 mo
161.382 127.376 li
162.949 127.376 li
162.949 133.997 li
161.382 133.997 li
cp
161.382 126.33 mo
161.382 125.01 li
162.954 125.01 li
162.954 126.33 li
161.382 126.33 li
cp
f
165.219 134.098 mo
164.842 134.098 164.568 133.96 164.394 133.684 cv
164.221 133.408 164.134 133.068 164.134 132.666 cv
164.134 127.376 li
165.695 127.376 li
165.695 132.348 li
165.695 132.553 165.726 132.705 165.79 132.806 cv
165.853 132.906 165.97 132.955 166.142 132.951 cv
166.325 132.951 166.548 132.858 166.813 132.672 cv
166.813 127.376 li
168.374 127.376 li
168.374 133.997 li
166.813 133.997 li
166.813 133.376 li
166.288 133.857 165.756 134.098 165.219 134.098 cv
cp
f
171.298 134.104 mo
170.75 134.104 170.301 133.95 169.951 133.645 cv
169.6 133.339 169.36 132.899 169.229 132.325 cv
170.415 131.895 li
170.497 132.26 170.612 132.536 170.761 132.725 cv
170.911 132.913 171.097 133.004 171.321 132.996 cv
171.485 132.992 171.62 132.934 171.726 132.82 cv
171.833 132.706 171.881 132.567 171.875 132.403 cv
171.859 132.165 171.641 131.864 171.22 131.503 cv
170.331 130.742 li
169.689 130.19 169.376 129.614 169.391 129.015 cv
169.402 128.485 169.583 128.063 169.931 127.748 cv
170.28 127.433 170.724 127.275 171.264 127.275 cv
171.783 127.275 172.205 127.432 172.529 127.745 cv
172.853 128.058 173.063 128.478 173.161 129.003 cv
172.131 129.434 li
171.99 128.748 171.725 128.403 171.337 128.399 cv
171.173 128.396 171.042 128.445 170.943 128.55 cv
170.844 128.654 170.794 128.779 170.794 128.925 cv
170.792 129.126 170.976 129.389 171.348 129.713 cv
172.254 130.535 li
172.408 130.67 172.534 130.79 172.634 130.896 cv
172.736 131.002 172.84 131.132 172.951 131.285 cv
173.061 131.438 173.143 131.602 173.197 131.777 cv
173.25 131.952 173.278 132.141 173.278 132.342 cv
173.278 132.901 173.092 133.334 172.721 133.642 cv
172.35 133.949 171.876 134.104 171.298 134.104 cv
cp
f
174.123 133.997 mo
174.123 127.376 li
175.61 127.376 li
175.61 127.957 li
176.053 127.491 176.578 127.258 177.181 127.258 cv
177.733 127.258 178.1 127.528 178.283 128.069 cv
178.75 127.528 179.306 127.258 179.956 127.258 cv
180.325 127.258 180.621 127.393 180.844 127.661 cv
181.068 127.93 181.18 128.319 181.18 128.83 cv
181.18 133.997 li
179.692 133.997 li
179.692 128.964 li
179.692 128.722 179.652 128.55 179.572 128.449 cv
179.492 128.349 179.374 128.301 179.217 128.304 cv
178.945 128.312 178.67 128.44 178.395 128.689 cv
178.398 128.757 li
178.401 128.83 li
178.401 133.997 li
176.918 133.997 li
176.918 128.964 li
176.918 128.722 176.878 128.55 176.798 128.449 cv
176.718 128.349 176.598 128.301 176.438 128.304 cv
176.176 128.312 175.901 128.442 175.61 128.695 cv
175.61 133.997 li
174.123 133.997 li
cp
f
184.333 133.002 mo
184.46 133.002 184.564 132.974 184.644 132.918 cv
184.724 132.861 184.782 132.775 184.818 132.657 cv
184.853 132.54 184.876 132.427 184.887 132.316 cv
184.899 132.207 184.904 132.064 184.904 131.889 cv
184.904 129.489 li
184.904 129.352 184.901 129.237 184.896 129.146 cv
184.89 129.055 184.877 128.955 184.857 128.847 cv
184.836 128.738 184.805 128.653 184.764 128.592 cv
184.596 128.436 li
184.526 128.393 184.438 128.371 184.333 128.371 cv
184.207 128.371 184.103 128.4 184.023 128.458 cv
183.943 128.516 183.885 128.604 183.85 128.721 cv
183.814 128.838 183.792 128.952 183.78 129.062 cv
183.769 129.172 183.763 129.314 183.763 129.489 cv
183.763 131.889 li
183.763 132.026 183.766 132.142 183.772 132.232 cv
183.777 132.324 183.791 132.423 183.811 132.529 cv
183.832 132.636 183.862 132.719 183.903 132.78 cv
184.071 132.938 li
184.141 132.98 184.229 133.002 184.333 133.002 cv
cp
184.328 134.104 mo
183.616 134.104 183.085 133.903 182.737 133.502 cv
182.388 133.102 182.214 132.528 182.214 131.782 cv
182.214 129.596 li
182.214 128.851 182.388 128.277 182.737 127.876 cv
183.085 127.476 183.616 127.275 184.328 127.275 cv
185.043 127.275 185.578 127.476 185.93 127.876 cv
186.283 128.277 186.458 128.851 186.458 129.596 cv
186.458 131.782 li
186.458 132.528 186.283 133.102 185.93 133.502 cv
185.578 133.903 185.043 134.104 184.328 134.104 cv
cp
f
189.584 132.984 mo
189.775 132.984 189.976 132.925 190.189 132.806 cv
190.189 128.578 li
189.976 128.443 189.773 128.377 189.58 128.377 cv
189.371 128.377 189.22 128.472 189.129 128.662 cv
189.038 128.853 188.992 129.095 188.992 129.389 cv
188.992 131.816 li
188.992 132.055 189.005 132.252 189.031 132.409 cv
189.057 132.565 189.116 132.7 189.208 132.814 cv
189.298 132.928 189.424 132.984 189.584 132.984 cv
cp
189.037 134.104 mo
188.497 134.104 188.091 133.911 187.824 133.527 cv
187.555 133.144 187.42 132.534 187.42 131.698 cv
187.42 129.774 li
187.42 129.421 187.448 129.1 187.501 128.813 cv
187.556 128.525 187.641 128.263 187.759 128.024 cv
187.876 127.786 188.042 127.602 188.253 127.471 cv
188.466 127.34 188.72 127.275 189.014 127.275 cv
189.432 127.275 189.824 127.444 190.189 127.784 cv
190.189 124.725 li
191.754 124.725 li
191.754 133.997 li
190.189 133.997 li
190.189 133.544 li
189.834 133.913 189.451 134.1 189.037 134.104 cv
cp
f
197.593 134.087 mo
197.291 134.083 197.035 134.032 196.824 133.936 cv
196.613 133.839 196.451 133.7 196.337 133.519 cv
196.223 133.338 196.141 133.136 196.091 132.912 cv
196.041 132.688 196.016 132.428 196.016 132.129 cv
196.016 128.41 li
195.362 128.41 li
195.362 127.376 li
196.016 127.376 li
196.016 125.43 li
197.587 125.43 li
197.587 127.376 li
198.594 127.376 li
198.594 128.41 li
197.587 128.41 li
197.587 132.229 li
197.587 132.446 197.634 132.602 197.73 132.697 cv
197.825 132.792 197.977 132.842 198.186 132.845 cv
198.331 132.849 198.49 132.838 198.661 132.812 cv
198.661 134.008 li
198.217 134.067 197.861 134.094 197.593 134.087 cv
cp
f
200.982 129.981 mo
202.112 129.981 li
202.112 129.35 li
202.112 129.015 202.07 128.773 201.986 128.628 cv
201.902 128.483 201.753 128.41 201.541 128.41 cv
201.325 128.41 201.177 128.492 201.099 128.656 cv
201.021 128.82 200.982 129.119 200.982 129.551 cv
200.982 129.981 li
cp
201.558 134.104 mo
200.801 134.104 200.256 133.895 199.924 133.477 cv
199.593 133.06 199.427 132.442 199.427 131.626 cv
199.427 129.752 li
199.427 128.936 199.595 128.319 199.93 127.901 cv
200.266 127.483 200.806 127.275 201.552 127.275 cv
201.947 127.275 202.28 127.333 202.55 127.448 cv
202.821 127.564 203.032 127.739 203.182 127.974 cv
203.333 128.209 203.441 128.48 203.503 128.788 cv
203.567 129.096 203.599 129.466 203.599 129.897 cv
203.599 130.765 li
200.982 130.765 li
200.982 131.76 li
200.982 131.898 200.983 132.005 200.985 132.082 cv
200.987 132.158 200.993 132.25 201.004 132.358 cv
201.015 132.467 201.033 132.551 201.057 132.61 cv
201.155 132.792 li
201.317 132.923 li
201.552 132.963 li
201.761 132.963 201.907 132.889 201.989 132.741 cv
202.07 132.595 202.112 132.381 202.112 132.102 cv
202.112 131.721 li
203.593 131.721 li
203.593 131.983 li
203.593 132.67 203.422 133.194 203.082 133.558 cv
202.741 133.922 202.233 134.104 201.558 134.104 cv
cp
f
204.667 133.997 mo
204.667 127.376 li
206.155 127.376 li
206.155 127.957 li
206.598 127.491 207.123 127.258 207.726 127.258 cv
208.278 127.258 208.645 127.528 208.828 128.069 cv
209.294 127.528 209.851 127.258 210.5 127.258 cv
210.87 127.258 211.166 127.393 211.389 127.661 cv
211.613 127.93 211.725 128.319 211.725 128.83 cv
211.725 133.997 li
210.237 133.997 li
210.237 128.964 li
210.237 128.722 210.197 128.55 210.117 128.449 cv
210.037 128.349 209.918 128.301 209.762 128.304 cv
209.49 128.312 209.215 128.44 208.94 128.689 cv
208.943 128.757 li
208.946 128.83 li
208.946 133.997 li
207.463 133.997 li
207.463 128.964 li
207.463 128.722 207.423 128.55 207.343 128.449 cv
207.263 128.349 207.143 128.301 206.983 128.304 cv
206.721 128.312 206.446 128.442 206.155 128.695 cv
206.155 133.997 li
204.667 133.997 li
cp
f
215.136 132.979 mo
215.251 132.979 215.348 132.946 215.426 132.882 cv
215.505 132.816 215.562 132.721 215.597 132.596 cv
215.632 132.472 215.657 132.343 215.669 132.21 cv
215.683 132.078 215.69 131.919 215.69 131.732 cv
215.69 129.45 li
215.69 129.298 215.681 129.16 215.665 129.039 cv
215.648 128.918 215.619 128.803 215.578 128.692 cv
215.537 128.583 215.475 128.499 215.393 128.441 cv
215.311 128.383 215.212 128.356 215.096 128.36 cv
214.891 128.363 214.675 128.451 214.448 128.623 cv
214.448 132.772 li
214.671 132.91 214.901 132.979 215.136 132.979 cv
cp
212.882 136.178 mo
212.882 127.376 li
214.448 127.376 li
214.448 127.885 li
214.858 127.475 215.303 127.271 215.785 127.275 cv
216.019 127.278 216.227 127.333 216.408 127.438 cv
216.589 127.542 216.731 127.671 216.833 127.826 cv
216.936 127.98 217.019 128.163 217.084 128.374 cv
217.15 128.585 217.194 128.78 217.216 128.961 cv
217.239 129.142 217.25 129.325 217.25 129.512 cv
217.25 131.682 li
217.25 132.018 217.222 132.326 217.166 132.607 cv
217.11 132.889 217.022 133.145 216.903 133.373 cv
216.784 133.603 216.621 133.782 216.414 133.91 cv
216.207 134.039 215.963 134.104 215.684 134.104 cv
215.274 134.104 214.862 133.904 214.448 133.505 cv
214.448 136.178 li
212.882 136.178 li
cp
f
220.336 133.002 mo
220.463 133.002 220.567 132.974 220.647 132.918 cv
220.727 132.861 220.785 132.775 220.821 132.657 cv
220.856 132.54 220.879 132.427 220.89 132.316 cv
220.902 132.207 220.907 132.064 220.907 131.889 cv
220.907 129.489 li
220.907 129.352 220.904 129.237 220.899 129.146 cv
220.893 129.055 220.88 128.955 220.86 128.847 cv
220.839 128.738 220.808 128.653 220.767 128.592 cv
220.599 128.436 li
220.529 128.393 220.441 128.371 220.336 128.371 cv
220.209 128.371 220.106 128.4 220.026 128.458 cv
219.946 128.516 219.888 128.604 219.853 128.721 cv
219.817 128.838 219.794 128.952 219.783 129.062 cv
219.772 129.172 219.766 129.314 219.766 129.489 cv
219.766 131.889 li
219.766 132.026 219.769 132.142 219.775 132.232 cv
219.78 132.324 219.793 132.423 219.814 132.529 cv
219.834 132.636 219.865 132.719 219.906 132.78 cv
220.074 132.938 li
220.144 132.98 220.232 133.002 220.336 133.002 cv
cp
220.331 134.104 mo
219.619 134.104 219.088 133.903 218.74 133.502 cv
218.391 133.102 218.217 132.528 218.217 131.782 cv
218.217 129.596 li
218.217 128.851 218.391 128.277 218.74 127.876 cv
219.088 127.476 219.619 127.275 220.331 127.275 cv
221.046 127.275 221.581 127.476 221.933 127.876 cv
222.286 128.277 222.461 128.851 222.461 129.596 cv
222.461 131.782 li
222.461 132.528 222.286 133.102 221.933 133.502 cv
221.581 133.903 221.046 134.104 220.331 134.104 cv
cp
f
223.558 133.997 mo
223.558 127.376 li
225.124 127.376 li
225.124 128.394 li
225.343 128.002 225.566 127.721 225.792 127.549 cv
226.017 127.378 226.259 127.292 226.516 127.292 cv
226.751 127.319 li
226.751 128.869 li
226.576 128.802 226.395 128.769 226.208 128.769 cv
225.985 128.775 225.789 128.832 225.619 128.936 cv
225.449 129.04 225.284 129.214 225.124 129.456 cv
225.124 133.997 li
223.558 133.997 li
cp
f
204.104 166.475 mo
137.971 166.475 li
132.875 166.475 128.744 162.344 128.744 157.247 cv
128.744 152.15 132.875 148.019 137.971 148.019 cv
204.104 148.019 li
209.2 148.019 213.332 152.15 213.332 157.247 cv
213.332 162.344 209.2 166.475 204.104 166.475 cv
cp
0 .912535 0 0 cmyk
f
147.894 161.354 mo
147.894 153.565 li
149.312 153.565 li
149.312 160.373 li
151.177 160.373 li
151.177 161.354 li
147.894 161.354 li
cp
0 0 0 0 cmyk
f
151.929 161.354 mo
151.929 153.565 li
155.189 153.565 li
155.189 154.566 li
153.347 154.566 li
153.347 156.803 li
154.804 156.803 li
154.804 157.803 li
153.347 157.803 li
153.347 160.373 li
155.212 160.373 li
155.212 161.354 li
151.929 161.354 li
cp
f
157.435 158.62 mo
158.478 158.62 li
157.957 155.421 li
157.435 158.62 li
cp
155.626 161.354 mo
157.209 153.565 li
158.689 153.565 li
160.268 161.354 li
158.948 161.354 li
158.633 159.546 li
157.285 159.546 li
156.965 161.354 li
155.626 161.354 li
cp
f
162.452 156.892 mo
162.794 156.892 li
163.214 156.892 163.513 156.803 163.69 156.624 cv
163.867 156.445 163.956 156.14 163.956 155.708 cv
163.956 155.291 163.878 154.993 163.725 154.813 cv
163.572 154.633 163.29 154.543 162.879 154.543 cv
162.452 154.543 li
162.452 156.892 li
cp
161.034 161.354 mo
161.034 153.565 li
162.818 153.565 li
163.229 153.565 163.581 153.6 163.875 153.667 cv
164.169 153.734 164.425 153.847 164.643 154.005 cv
164.861 154.163 165.024 154.378 165.132 154.648 cv
165.24 154.919 165.294 155.251 165.294 155.642 cv
165.294 156.131 165.221 156.53 165.076 156.84 cv
164.93 157.15 164.69 157.376 164.355 157.517 cv
165.435 161.354 li
164.011 161.354 li
163.082 157.798 li
162.452 157.798 li
162.452 161.354 li
161.034 161.354 li
cp
f
166.371 161.354 mo
166.371 153.565 li
167.347 153.565 li
169.254 157.977 li
169.254 153.565 li
170.429 153.565 li
170.429 161.354 li
169.499 161.354 li
167.573 156.718 li
167.573 161.354 li
166.371 161.354 li
cp
f
173.928 161.354 mo
174.055 153.565 li
175.511 153.565 li
176.639 159.038 li
177.799 153.565 li
179.223 153.565 li
179.354 161.354 li
178.283 161.354 li
178.189 155.989 li
177.066 161.354 li
176.235 161.354 li
175.098 155.971 li
175.013 161.354 li
173.928 161.354 li
cp
f
182.269 160.335 mo
182.368 160.376 182.486 160.396 182.624 160.396 cv
182.761 160.396 182.878 160.376 182.976 160.335 cv
183.073 160.294 183.151 160.241 183.208 160.176 cv
183.266 160.109 183.312 160.023 183.344 159.917 cv
183.377 159.811 183.4 159.704 183.411 159.598 cv
183.421 159.491 183.427 159.364 183.427 159.217 cv
183.427 155.68 li
183.427 155.491 183.417 155.335 183.399 155.21 cv
183.38 155.085 183.343 154.967 183.289 154.855 cv
183.234 154.744 183.151 154.661 183.042 154.606 cv
182.932 154.552 182.792 154.524 182.624 154.524 cv
182.455 154.524 182.314 154.552 182.203 154.606 cv
182.092 154.661 182.009 154.744 181.957 154.855 cv
181.903 154.967 181.868 155.085 181.848 155.21 cv
181.83 155.335 181.82 155.491 181.82 155.68 cv
181.82 159.217 li
181.82 159.364 181.826 159.491 181.836 159.598 cv
181.847 159.704 181.87 159.811 181.903 159.917 cv
181.935 160.023 181.98 160.109 182.037 160.176 cv
182.092 160.241 182.17 160.294 182.269 160.335 cv
cp
182.624 161.448 mo
181.822 161.448 181.248 161.23 180.9 160.796 cv
180.552 160.36 180.378 159.723 180.378 158.884 cv
180.378 156.009 li
180.378 155.595 180.417 155.236 180.496 154.933 cv
180.574 154.629 180.7 154.366 180.874 154.144 cv
181.047 153.921 181.28 153.754 181.571 153.644 cv
181.863 153.532 182.213 153.477 182.624 153.477 cv
183.422 153.477 183.996 153.69 184.345 154.12 cv
184.695 154.549 184.869 155.179 184.869 156.009 cv
184.869 158.884 li
184.869 159.291 184.83 159.648 184.75 159.957 cv
184.669 160.266 184.542 160.533 184.369 160.76 cv
184.195 160.987 183.962 161.159 183.671 161.274 cv
183.38 161.391 183.031 161.448 182.624 161.448 cv
cp
f
187.327 156.892 mo
187.669 156.892 li
188.089 156.892 188.388 156.803 188.565 156.624 cv
188.742 156.445 188.831 156.14 188.831 155.708 cv
188.831 155.291 188.753 154.993 188.6 154.813 cv
188.447 154.633 188.165 154.543 187.754 154.543 cv
187.327 154.543 li
187.327 156.892 li
cp
185.909 161.354 mo
185.909 153.565 li
187.693 153.565 li
188.104 153.565 188.456 153.6 188.75 153.667 cv
189.044 153.734 189.3 153.847 189.518 154.005 cv
189.736 154.163 189.899 154.378 190.007 154.648 cv
190.115 154.919 190.169 155.251 190.169 155.642 cv
190.169 156.131 190.096 156.53 189.951 156.84 cv
189.805 157.15 189.565 157.376 189.23 157.517 cv
190.31 161.354 li
188.886 161.354 li
187.957 157.798 li
187.327 157.798 li
187.327 161.354 li
185.909 161.354 li
cp
f
191.245 161.354 mo
191.245 153.565 li
194.504 153.565 li
194.504 154.566 li
192.663 154.566 li
192.663 156.803 li
194.12 156.803 li
194.12 157.803 li
192.663 157.803 li
192.663 160.373 li
194.528 160.373 li
194.528 161.354 li
191.245 161.354 li
cp
f
60.7388 96.6934 mo
61.7915 96.6934 li
62.1587 96.6934 62.48 96.6611 62.7573 96.5957 cv
63.0347 96.5303 63.2671 96.4531 63.4546 96.3633 cv
63.6421 96.2734 63.7993 96.127 63.9263 95.9229 cv
64.0522 95.7188 64.1479 95.5313 64.2134 95.3604 cv
64.2788 95.1885 64.3276 94.9297 64.3599 94.583 cv
64.3931 94.2373 64.4136 93.9414 64.4214 93.6963 cv
64.4292 93.4521 64.4341 93.0889 64.4341 92.6074 cv
64.4341 85.1943 li
64.4341 84.7129 64.4253 84.3262 64.4097 84.0322 cv
64.3931 83.7383 64.354 83.4434 64.2935 83.1455 cv
64.2319 82.8477 64.1421 82.6172 64.0239 82.4541 cv
63.9058 82.291 63.7485 82.1426 63.5532 82.0078 cv
63.3569 81.873 63.1128 81.7793 62.8188 81.7266 cv
62.5249 81.6729 62.1704 81.6465 61.7544 81.6465 cv
60.7388 81.6465 li
60.7388 96.6934 li
cp
57.0444 99.2871 mo
57.0444 79.0039 li
61.7671 79.0039 li
62.9897 79.0039 64.0132 79.127 64.8374 79.3711 cv
65.6606 79.6162 66.3218 80.0029 66.8188 80.5332 cv
67.3169 81.0635 67.6694 81.7139 67.8774 82.4844 cv
68.0854 83.2549 68.189 84.2031 68.189 85.3291 cv
68.189 92.6445 li
68.189 93.8027 68.0835 94.7852 67.8716 95.5928 cv
67.6587 96.4004 67.3101 97.085 66.8257 97.6475 cv
66.3403 98.2109 65.6938 98.625 64.8862 98.8896 cv
64.0786 99.1543 63.0884 99.2871 61.9136 99.2871 cv
57.0444 99.2871 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
74.2817 92.167 mo
76.9976 92.167 li
75.6392 83.8369 li
74.2817 92.167 li
cp
69.5718 99.2871 mo
73.6948 79.0039 li
77.5483 79.0039 li
81.6587 99.2871 li
78.2212 99.2871 li
77.4009 94.5771 li
73.8901 94.5771 li
73.0581 99.2871 li
69.5718 99.2871 li
cp
f
84.9243 99.2871 mo
84.9243 81.7324 li
81.5229 81.7324 li
81.5229 79.0039 li
91.9097 79.0039 li
91.9097 81.7324 li
88.6187 81.7324 li
88.6187 99.2871 li
84.9243 99.2871 li
cp
f
97.0845 92.167 mo
99.8003 92.167 li
98.4419 83.8369 li
97.0845 92.167 li
cp
92.3745 99.2871 mo
96.4976 79.0039 li
100.351 79.0039 li
104.461 99.2871 li
101.024 99.2871 li
100.204 94.5771 li
96.6929 94.5771 li
95.8608 99.2871 li
92.3745 99.2871 li
cp
f
110.149 96.6816 mo
111.507 96.6816 li
112.608 96.6816 113.371 96.4248 113.794 95.9111 cv
114.219 95.3965 114.431 94.5488 114.431 93.3662 cv
114.431 92.1426 114.193 91.2559 113.715 90.7051 cv
113.239 90.1553 112.437 89.8799 111.312 89.8799 cv
110.149 89.8799 li
110.149 96.6816 li
cp
110.149 87.2744 mo
111.299 87.2744 li
112.384 87.2744 113.13 87.042 113.538 86.5771 cv
113.946 86.1123 114.15 85.3291 114.15 84.2275 cv
114.15 83.6572 114.083 83.1943 113.948 82.8398 cv
113.813 82.4844 113.587 82.2178 113.269 82.0381 cv
112.951 81.8584 112.598 81.7402 112.21 81.6836 cv
111.823 81.626 111.307 81.5977 110.664 81.5977 cv
110.149 81.5977 li
110.149 87.2744 li
cp
106.455 99.2871 mo
106.455 79.0039 li
111.421 79.0039 li
112.36 79.0039 113.177 79.0879 113.875 79.2549 cv
114.572 79.4219 115.192 79.6992 115.734 80.0869 cv
116.276 80.4746 116.686 81.0107 116.963 81.6953 cv
117.241 82.3809 117.375 83.209 117.367 84.1787 cv
117.359 86.6826 116.364 88.0811 114.382 88.375 cv
115.581 88.6035 116.476 89.127 117.067 89.9473 cv
117.659 90.7666 117.958 91.9189 117.966 93.4033 cv
117.974 95.3281 117.494 96.79 116.523 97.7881 cv
115.552 98.7881 114.137 99.2871 112.278 99.2871 cv
106.455 99.2871 li
cp
f
123.998 92.167 mo
126.713 92.167 li
125.355 83.8369 li
123.998 92.167 li
cp
119.288 99.2871 mo
123.411 79.0039 li
127.264 79.0039 li
131.375 99.2871 li
127.937 99.2871 li
127.117 94.5771 li
123.606 94.5771 li
122.774 99.2871 li
119.288 99.2871 li
cp
f
138.482 99.5322 mo
134.91 99.5322 133.034 97.4688 132.854 93.3418 cv
136.072 92.6689 li
136.153 95.3525 136.919 96.6934 138.372 96.6934 cv
138.934 96.6934 139.352 96.5225 139.625 96.1797 cv
139.899 95.8369 140.035 95.377 140.035 94.7979 cv
140.035 94.2344 139.933 93.7188 139.729 93.25 cv
139.525 92.7813 139.289 92.3975 139.02 92.0996 cv
138.75 91.8027 138.368 91.4336 137.87 90.9932 cv
135.203 88.6807 li
134.42 87.9961 133.836 87.2842 133.454 86.5459 cv
133.07 85.8086 132.878 84.8848 132.878 83.7754 cv
132.878 82.2012 133.341 80.9785 134.267 80.1055 cv
135.193 79.2324 136.463 78.7881 138.078 78.7715 cv
138.82 78.7637 139.476 78.8555 140.047 79.0469 cv
140.618 79.2393 141.089 79.4961 141.46 79.8174 cv
141.832 80.1396 142.141 80.542 142.39 81.0225 cv
142.639 81.5039 142.825 82.0039 142.947 82.5215 cv
143.069 83.0391 143.155 83.6162 143.204 84.252 cv
140.047 84.876 li
140.031 84.4688 140.004 84.1143 139.968 83.8115 cv
139.931 83.5107 139.868 83.2041 139.778 82.8945 cv
139.688 82.585 139.572 82.334 139.429 82.1426 cv
139.287 81.9502 139.095 81.7979 138.855 81.6836 cv
138.614 81.5693 138.334 81.5244 138.017 81.5488 cv
137.47 81.5811 137.052 81.7627 136.763 82.0928 cv
136.473 82.4238 136.329 82.8662 136.329 83.4209 cv
136.329 84.0732 136.457 84.6094 136.713 85.0293 cv
136.971 85.4492 137.373 85.8994 137.918 86.3809 cv
140.561 88.6807 li
141.001 89.0801 141.385 89.4678 141.711 89.8428 cv
142.038 90.2178 142.349 90.6465 142.647 91.1279 cv
142.945 91.6084 143.17 92.1387 143.326 92.7178 cv
143.481 93.2969 143.558 93.9082 143.558 94.5527 cv
143.558 96.0293 143.091 97.2275 142.158 98.1494 cv
141.224 99.0713 139.999 99.5322 138.482 99.5322 cv
cp
f
145.723 99.2871 mo
145.723 79.0039 li
154.213 79.0039 li
154.213 81.6104 li
149.417 81.6104 li
149.417 87.4326 li
153.21 87.4326 li
153.21 90.0391 li
149.417 90.0391 li
149.417 96.7305 li
154.275 96.7305 li
154.275 99.2871 li
145.723 99.2871 li
cp
f
121.324 157.247 mo
121.324 159.042 119.869 160.497 118.074 160.497 cv
116.279 160.497 114.824 159.042 114.824 157.247 cv
114.824 155.452 116.279 153.997 118.074 153.997 cv
119.869 153.997 121.324 155.452 121.324 157.247 cv
cp
0 0 0 0 cmyk
f
105.582 160.497 mo
103.788 160.497 102.333 159.042 102.333 157.247 cv
102.333 155.452 103.788 153.997 105.582 153.997 cv
107.377 153.997 108.833 155.452 108.833 157.247 cv
108.833 159.042 107.377 160.497 105.582 160.497 cv
.159609 .0111391 0 0 cmyk
f
439.003 214.39 mo
407.838 196.398 li
405.926 195.293 406.166 193.364 408.374 192.089 cv
438.466 174.715 li
440.675 173.44 444.016 173.302 445.928 174.406 cv
477.093 192.398 li
479.005 193.503 478.766 195.432 476.557 196.707 cv
446.465 214.08 li
444.256 215.355 440.915 215.494 439.003 214.39 cv
.470191 .0827344 .00714122 0 cmyk
f
442.708 165.579 mo
441.543 165.579 440.288 165.86 439.351 166.401 cv
409.259 183.775 li
408.503 184.212 408.322 184.605 408.317 184.68 cv
408.328 184.702 408.429 184.848 408.723 185.017 cv
439.889 203.011 li
441.263 203.804 443.92 203.659 445.581 202.7 cv
475.672 185.327 li
476.428 184.891 476.61 184.496 476.615 184.422 cv
476.604 184.4 476.502 184.255 476.207 184.084 cv
445.043 166.092 li
444.446 165.747 443.604 165.579 442.708 165.579 cv
442.26 207.066 mo
440.737 207.066 439.267 206.739 438.119 206.076 cv
406.954 188.083 li
405.571 187.284 404.777 186.044 404.778 184.679 cv
404.778 183.15 405.766 181.703 407.49 180.709 cv
437.582 163.335 li
440.364 161.729 444.334 161.594 446.813 163.025 cv
477.978 181.018 li
479.362 181.817 480.155 183.059 480.154 184.424 cv
480.154 185.951 479.165 187.398 477.442 188.393 cv
447.35 205.767 li
445.857 206.629 444.022 207.066 442.26 207.066 cv
0 0 0 0 cmyk
f
478.374 173.397 mo
478.374 162.645 li
454.263 162.631 li
445.928 157.819 li
444.016 156.715 440.675 156.854 438.466 158.128 cv
430.691 162.617 li
406.557 162.604 li
406.557 173.663 li
406.502 174.41 406.919 175.132 407.838 175.662 cv
439.003 193.655 li
440.915 194.76 444.256 194.621 446.465 193.346 cv
476.557 175.973 li
477.831 175.237 478.446 174.284 478.374 173.397 cv
.827268 .57586 .071809 .00112917 cmyk
f
442.466 157.079 mo
441.067 157.113 439.614 157.466 438.466 158.128 cv
430.691 162.617 li
406.557 162.604 li
406.557 173.663 li
406.502 174.41 406.919 175.132 407.838 175.662 cv
439.003 193.655 li
439.922 194.185 441.171 194.427 442.466 194.395 cv
442.466 157.079 li
level3{
gsave
clp
[39.3914 0 0 39.3914 408.531 159.475 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Pt;&XQ:V/YQ:V/YQ:_5ZQ:_8[QV%A\QV.G]QqIP^QqRV_R7m_`R8!eaRSEtcRna+eRnj1fS50:gSPTIi
SPTIiSl#XkT2GgmTMl$pTi;3rTi;3rU/_BtUK.U"UfRd$V-!s&VHF0)VcsE,W*BT.WEfc0Wa5u3X'Z/5
XC)>7X^MM9Y$q\;Y@It?Y[n.AZ"==CZY0[GZtTjI[;$$K[VQ9N[quHP\ShiU\o8#W]5\2Y]Q4G\^2sb`
^NL"c^j$7f_0HIi_Ku^l_gN!p`IA?t`dnU"a+=g%ab10)b(^H-b_Qf1c&*)5c\rG9d#Se>d?"t@dutCE
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.3914 0 0 39.3914 408.531 159.475 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Pa.N!Q'IW"Q'IW"Q'IW"Q'R`%QBmi&QC!r)Q^=&*Q^F/-R$a8.R$jA1R@9S5R[T\6R[]e9S"-"=S=H+>
S=H.@SXl@DSt;RHT:_dLTV.sNTV/!PTqS3TU8"EXUSFW\Unji`V5:&dVP^8hVl-JlW2Q\pWMuntWiE,#
X/i;&XK8M*Xf\_.Y-+q2YHP.6Yct@:Z*L[AZa7!F['[3J[C*EN[^NWR\%&rY\[f8^]"5Jb]=Y\f]Y2"m
^:q=q^V@Ou^qdb$_83t(_SX1,_o'F2`Pog8`l?$<a2c9BaiVZHb0%oNbfn;Tc-=PZcd0q`d*U.ddF$Cj
~>
<~84Z9B84Z9B84cBE8P)KF8P)KF8P2TI8kM]J8kVfM91qoN92&#Q9MJ5U9he>V9hnGY:/4PZ:/=Y]:JXb^
:JXe`:f("d;,L4h;GpFl;c?Un;c?Xp<)cjt<E3(#<`W:'='&L+=BJ^/>$>-7>?b?;>[1Q??!UcC?=$uG
?XI/J?smAN@:<SR@UinYA7T4^AS#FbAnPaiBP;'nBk_9rC27U$Ci!p)D/O60Df9Q5E,]c9EH6)@F)uDE
FEDYJG'8(RG^+IXH$O^^H[C-fI=6QnIt*!!JUrB'JqAW-KS5&5L5(J=LkpnEMMd=MN/WaVO,o?_OH>Tf
~>
<~!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tM?#RC\A#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47+J$O[=M
$O[=M$O[=M$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%LrsY%hB0]%hB0]&.fBa&.fBa&J5Te&J5Te&J5Te
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
409.289 162.605 mo
406.557 162.604 li
406.557 173.663 li
406.502 174.41 406.919 175.132 407.838 175.662 cv
409.289 176.499 li
409.289 162.605 li
cp
.147219 .0154116 0 0 cmyk
f
439.483 193.891 mo
441.133 194.597 443.519 194.558 445.449 193.822 cv
445.449 181.266 li
439.483 181.266 li
439.483 193.891 li
.657221 .328313 0 0 cmyk
f
439.003 182.637 mo
407.838 164.644 li
405.926 163.539 406.166 161.61 408.374 160.335 cv
438.466 142.962 li
440.675 141.686 444.016 141.548 445.928 142.652 cv
477.093 160.645 li
479.005 161.749 478.766 163.679 476.557 164.953 cv
446.465 182.327 li
444.256 183.603 440.915 183.74 439.003 182.637 cv
level3{
gsave
clp
[61.7032 36.7866 -36.7866 61.7032 415.966 146.846 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.842316 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[61.7032 36.7866 -36.7866 61.7032 415.966 146.846 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl.4H\p.4H\q.Olnt
.Olr!.kE5&/M/P+/M/P,/hSb00/#"50JP::0etL>1,:U?1GgpG2)R6L2E!KQ2`NcV3&ru[4$,Mc4?P_h
4[)%o5X7V$5sdn*6UX=177B[87n?0B8P2TJ9MA/T:/=Y^:f1(f;c?Xp<E<.%='/U.>$G6:>[:ZB?XR;N
@U`hWA7]@cBPD3rCMRa'DJsH4E,fo>F)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDD
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9\i1"9\i1
"9\l3"U,&5"U,&5"U,&6"pP89"pP89"pYA<#6tJ=#6tJ=#RC\A#RC\A#RC_C#mq"H$47+I$O[=M$k*OR
%1NaU%1NdW%LrsY%M''\&.fBa&J5Tf&eYfj',)&o'bqGu'c%Q#(Ddl((`4)-)&X>2)B'P6)]Th;*$$%?
*ZcCF+<VdM+X&$R,9nHZ,UF``-7:2i-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
476.557 162.837 mo
446.465 180.211 li
444.257 181.486 440.915 181.625 439.003 180.521 cv
407.838 162.527 li
407.413 162.281 407.099 161.992 406.884 161.681 cv
406.227 162.738 406.525 163.885 407.838 164.644 cv
439.003 182.637 li
440.915 183.74 444.257 183.602 446.465 182.327 cv
476.557 164.953 li
478.273 163.963 478.794 162.578 478.047 161.492 cv
477.748 161.975 477.249 162.438 476.557 162.837 cv
0 0 0 0 cmyk
f
466.912 176.235 mo
466.912 177.038 466.348 178.014 465.653 178.415 cv
464.958 178.816 464.394 178.491 464.394 177.688 cv
464.394 176.886 464.958 175.909 465.653 175.508 cv
466.348 175.106 466.912 175.433 466.912 176.235 cv
.147219 .0154116 0 0 cmyk
f
470.961 173.896 mo
470.961 174.699 470.398 175.676 469.703 176.077 cv
469.007 176.479 468.444 176.153 468.444 175.351 cv
468.444 174.548 469.007 173.571 469.703 173.17 cv
470.398 172.769 470.961 173.094 470.961 173.896 cv
f
475.011 171.559 mo
475.011 172.361 474.448 173.337 473.752 173.738 cv
473.057 174.14 472.494 173.814 472.494 173.012 cv
472.494 172.209 473.057 171.233 473.752 170.832 cv
474.448 170.431 475.011 170.756 475.011 171.559 cv
f
440.846 171.481 mo
426.262 163.061 li
425.368 162.545 425.48 161.642 426.513 161.045 cv
440.594 152.915 li
441.628 152.318 443.192 152.254 444.086 152.77 cv
458.67 161.19 li
459.565 161.707 459.453 162.609 458.419 163.206 cv
444.338 171.336 li
443.304 171.933 441.741 171.998 440.846 171.481 cv
.657221 .328313 0 0 cmyk
f
442.242 164.432 mo
440.224 163.267 li
440.1 163.194 440.116 163.07 440.259 162.987 cv
442.208 161.862 li
442.35 161.78 442.567 161.771 442.691 161.843 cv
444.708 163.008 li
444.833 163.079 444.817 163.204 444.673 163.286 cv
442.725 164.411 li
442.583 164.494 442.366 164.503 442.242 164.432 cv
cp
.147219 .0154116 0 0 cmyk
f
426.262 163.061 mo
426.304 163.085 li
426.513 162.941 li
440.594 154.812 li
441.628 154.214 443.192 154.149 444.086 154.666 cv
458.628 163.063 li
459.454 162.472 459.497 161.668 458.67 161.19 cv
444.086 152.77 li
443.192 152.254 441.628 152.318 440.594 152.915 cv
426.513 161.045 li
425.48 161.642 425.368 162.545 426.262 163.061 cv
.827268 .57586 .071809 .00112917 cmyk
f
523.86 263.167 mo
492.696 245.174 li
490.783 244.07 491.023 242.141 493.231 240.866 cv
523.323 223.492 li
525.532 222.217 528.873 222.079 530.786 223.183 cv
561.95 241.176 li
563.863 242.28 563.623 244.209 561.415 245.484 cv
531.323 262.857 li
529.114 264.133 525.773 264.271 523.86 263.167 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
524.745 251.787 mo
526.12 252.58 528.779 252.436 530.438 251.478 cv
560.53 234.104 li
561.286 233.668 561.467 233.273 561.471 233.199 cv
561.46 233.178 561.359 233.032 561.065 232.862 cv
529.901 214.869 li
528.527 214.076 525.867 214.22 524.208 215.179 cv
494.116 232.553 li
493.36 232.988 493.178 233.383 493.174 233.457 cv
493.185 233.479 493.287 233.624 493.581 233.794 cv
524.745 251.787 li
cp
527.118 255.844 mo
525.594 255.844 524.125 255.517 522.975 254.854 cv
491.811 236.86 li
490.428 236.063 489.634 234.822 489.634 233.457 cv
489.634 231.929 490.623 230.481 492.346 229.486 cv
522.438 212.112 li
525.222 210.508 529.19 210.373 531.67 211.803 cv
562.834 229.796 li
564.217 230.595 565.011 231.835 565.011 233.2 cv
565.011 234.728 564.023 236.175 562.3 237.17 cv
532.208 254.544 li
530.714 255.406 528.879 255.844 527.118 255.844 cv
cp
0 0 0 0 cmyk
f
563.231 222.175 mo
563.231 222.175 li
563.231 211.422 li
539.12 211.408 li
530.786 206.597 li
528.873 205.492 525.532 205.631 523.323 206.905 cv
515.547 211.395 li
491.415 211.382 li
491.415 222.44 li
491.36 223.188 491.777 223.909 492.696 224.439 cv
523.86 242.433 li
525.773 243.537 529.114 243.398 531.323 242.123 cv
561.415 224.75 li
562.688 224.014 563.303 223.062 563.231 222.175 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
527.323 205.856 mo
525.923 205.891 524.471 206.243 523.323 206.905 cv
515.547 211.395 li
491.415 211.382 li
491.415 222.44 li
491.36 223.188 491.777 223.909 492.696 224.439 cv
523.86 242.433 li
524.779 242.963 526.029 243.204 527.323 243.172 cv
527.323 205.856 li
cp
level3{
gsave
clp
[39.3914 0 0 39.3914 493.388 208.253 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.3914 0 0 39.3914 493.388 208.253 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
494.145 211.383 mo
491.415 211.382 li
491.415 222.44 li
491.36 223.188 491.777 223.909 492.696 224.439 cv
494.145 225.276 li
494.145 211.383 li
cp
.147219 .0154116 0 0 cmyk
f
524.34 242.668 mo
525.99 243.374 528.376 243.335 530.305 242.6 cv
530.305 230.043 li
524.34 230.043 li
524.34 242.668 li
cp
.657221 .328313 0 0 cmyk
f
523.86 231.413 mo
492.696 213.421 li
490.783 212.316 491.023 210.388 493.231 209.112 cv
523.323 191.739 li
525.532 190.464 528.873 190.325 530.786 191.43 cv
561.95 209.422 li
563.863 210.526 563.623 212.455 561.415 213.73 cv
531.323 231.104 li
529.114 232.379 525.773 232.518 523.86 231.413 cv
cp
level3{
gsave
clp
[61.7032 36.7866 -36.7866 61.7032 500.823 195.623 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[61.7032 36.7866 -36.7866 61.7032 500.823 195.623 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
561.415 211.614 mo
531.322 228.988 li
529.114 230.263 525.773 230.401 523.86 229.298 cv
492.696 211.305 li
492.269 211.059 491.956 210.77 491.741 210.458 cv
491.084 211.516 491.382 212.662 492.696 213.421 cv
523.86 231.413 li
525.773 232.518 529.114 232.379 531.322 231.104 cv
561.415 213.73 li
563.13 212.74 563.652 211.355 562.904 210.27 cv
562.604 210.751 562.106 211.215 561.415 211.614 cv
cp
0 0 0 0 cmyk
f
551.769 225.013 mo
551.769 225.814 551.205 226.791 550.51 227.192 cv
549.815 227.594 549.251 227.269 549.251 226.466 cv
549.251 225.663 549.815 224.687 550.51 224.285 cv
551.205 223.884 551.769 224.21 551.769 225.013 cv
cp
.147219 .0154116 0 0 cmyk
f
555.819 222.674 mo
555.819 223.477 555.255 224.453 554.56 224.854 cv
553.865 225.256 553.301 224.931 553.301 224.128 cv
553.301 223.325 553.865 222.349 554.56 221.947 cv
555.255 221.546 555.819 221.871 555.819 222.674 cv
cp
f
559.869 220.336 mo
559.869 221.139 559.305 222.114 558.61 222.516 cv
557.915 222.917 557.351 222.592 557.351 221.789 cv
557.351 220.986 557.915 220.011 558.61 219.609 cv
559.305 219.208 559.869 219.533 559.869 220.336 cv
cp
f
525.703 220.258 mo
511.12 211.839 li
510.224 211.321 510.336 210.419 511.37 209.822 cv
525.452 201.692 li
526.485 201.096 528.048 201.031 528.944 201.548 cv
543.527 209.968 li
544.422 210.484 544.31 211.387 543.276 211.983 cv
529.195 220.113 li
528.162 220.71 526.598 220.775 525.703 220.258 cv
cp
.657221 .328313 0 0 cmyk
f
527.099 213.208 mo
525.082 212.044 li
524.958 211.972 524.973 211.847 525.116 211.765 cv
527.064 210.64 li
527.208 210.558 527.423 210.548 527.547 210.62 cv
529.565 211.784 li
529.689 211.856 529.673 211.981 529.531 212.063 cv
527.583 213.188 li
527.439 213.271 527.223 213.28 527.099 213.208 cv
cp
.147219 .0154116 0 0 cmyk
f
511.12 211.839 mo
511.161 211.862 li
511.37 211.718 li
525.452 203.588 li
526.485 202.991 528.048 202.927 528.944 203.443 cv
543.486 211.84 li
544.311 211.249 544.354 210.445 543.527 209.968 cv
528.944 201.548 li
528.048 201.031 526.485 201.096 525.452 201.692 cv
511.37 209.822 li
510.336 210.419 510.224 211.321 511.12 211.839 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
341.042 271.74 mo
406.969 234.147 li
409.38 232.755 409.079 230.324 406.294 228.717 cv
368.361 206.815 li
365.577 205.208 361.365 205.033 358.954 206.426 cv
293.026 244.019 li
290.615 245.41 290.916 247.842 293.701 249.449 cv
331.634 271.351 li
334.418 272.958 338.63 273.132 341.042 271.74 cv
.470191 .0827344 .00714122 0 cmyk
f
363.015 196.164 mo
361.799 196.164 360.654 196.393 359.838 196.863 cv
293.903 234.461 li
293.446 234.725 293.167 235.033 293.167 235.281 cv
293.167 235.641 293.606 236.255 294.585 236.82 cv
332.519 258.722 li
334.733 260 338.301 260.184 340.157 259.111 cv
340.165 259.106 li
406.092 221.514 li
406.549 221.25 406.828 220.941 406.828 220.693 cv
406.828 220.334 406.389 219.72 405.41 219.154 cv
367.476 197.253 li
366.235 196.536 364.567 196.164 363.015 196.164 cv
336.946 263.348 mo
334.79 263.348 332.54 262.821 330.75 261.788 cv
292.816 239.887 li
290.79 238.717 289.627 237.038 289.627 235.281 cv
289.628 233.73 290.544 232.312 292.141 231.39 cv
358.077 193.792 li
361.013 192.099 365.921 192.268 369.246 194.187 cv
407.179 216.088 li
409.206 217.258 410.368 218.936 410.368 220.693 cv
410.367 222.244 409.451 223.663 407.854 224.585 cv
341.921 262.181 li
340.564 262.963 338.789 263.348 336.946 263.348 cv
0 0 0 0 cmyk
f
336.957 249.875 mo
335.108 249.875 333.157 249.424 331.634 248.545 cv
308.505 235.192 li
300.612 230.635 li
297.061 228.584 li
293.701 226.644 li
292.414 225.901 291.66 224.982 291.459 224.071 cv
291.409 223.846 291.393 223.62 291.411 223.398 cv
291.411 222.781 li
291.411 221.704 li
291.411 221.704 li
291.411 188.188 li
291.411 186.869 li
291.411 185.793 li
291.411 185.793 li
291.411 152.276 li
291.411 150.958 li
291.411 149.882 li
291.411 149.882 li
291.411 116.364 li
291.411 115.046 li
291.411 79.9248 li
348.448 64.9961 li
358.954 58.9307 li
360.046 58.2998 361.508 57.9905 363.039 57.9905 cv
364.875 57.9905 366.809 58.4344 368.327 59.3008 cv
366.886 58.4784 365.07 58.0407 363.319 57.9981 cv
335.996 105.109 li
336.675 249.868 li
336.768 249.87 336.861 249.872 336.954 249.872 cv
338.486 249.872 339.948 249.566 341.042 248.936 cv
339.949 249.566 338.488 249.875 336.957 249.875 cv
378.163 64.9794 mo
368.361 59.3204 li
368.35 59.3139 368.338 59.3075 368.327 59.3011 cv
368.338 59.3075 368.35 59.3139 368.361 59.3204 cv
378.163 64.9794 li
408.585 64.9629 li
378.163 64.9794 li
level3{
gsave
clp
[125.652 0 0 125.652 261.545 92.3037 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[125.652 0 0 125.652 261.545 92.3037 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
363.319 57.9981 mo
365.084 58.0411 366.915 58.4854 368.361 59.3204 cv
378.163 64.9794 li
408.585 64.9629 li
408.585 208.822 li
408.654 209.765 408.128 210.674 406.969 211.343 cv
341.042 248.936 li
339.882 249.604 338.308 249.907 336.675 249.868 cv
335.996 105.109 li
363.319 57.9981 li
.147219 .0154116 0 0 cmyk
f
340.436 249.231 mo
338.357 250.123 335.348 250.073 332.917 249.146 cv
332.917 103.398 li
340.436 103.398 li
340.436 249.231 li
cp
.657221 .328313 0 0 cmyk
f
341.042 105.126 mo
406.969 67.5332 li
409.38 66.1416 409.079 63.71 406.294 62.1025 cv
368.361 40.2012 li
365.577 38.5938 361.365 38.4189 358.954 39.8115 cv
293.026 77.4043 li
290.615 78.7959 290.917 81.2275 293.701 82.835 cv
331.634 104.736 li
334.418 106.344 338.63 106.519 341.042 105.126 cv
cp
.147219 .0154116 0 0 cmyk
f
293.701 80.168 mo
331.634 102.068 li
334.418 103.676 338.63 103.851 341.042 102.459 cv
406.969 64.8652 li
407.507 64.5557 407.902 64.1914 408.172 63.7979 cv
409.001 65.1309 408.625 66.5771 406.969 67.5332 cv
341.042 105.126 li
338.63 106.519 334.418 106.344 331.634 104.736 cv
293.701 82.835 li
291.538 81.5859 290.88 79.8418 291.823 78.4717 cv
292.201 79.0801 292.829 79.6641 293.701 80.168 cv
cp
.0124514 0 0 0 cmyk
f
339.176 89.8906 mo
383.07 64.4463 li
384.199 63.7949 384.057 62.6572 382.754 61.9053 cv
365.003 51.6563 li
363.7 50.9043 361.729 50.8223 360.601 51.4736 cv
316.708 76.918 li
315.58 77.5693 315.72 78.707 317.024 79.459 cv
334.775 89.708 li
336.078 90.46 338.048 90.542 339.176 89.8906 cv
cp
1 .866484 .240818 .0951247 cmyk
f
362.874 65.5889 mo
365.417 64.1211 li
365.573 64.0303 365.553 63.873 365.373 63.7695 cv
362.917 62.3516 li
362.737 62.2471 362.464 62.2363 362.308 62.3262 cv
359.764 63.7949 li
359.608 63.8848 359.627 64.042 359.808 64.1465 cv
362.264 65.5645 li
362.445 65.668 362.717 65.6797 362.874 65.5889 cv
cp
.147219 .0154116 0 0 cmyk
f
354.375 70.4756 mo
356.919 69.0068 li
357.076 68.917 357.056 68.7588 356.875 68.6553 cv
354.419 67.2373 li
354.24 67.1328 353.966 67.1221 353.811 67.2119 cv
351.267 68.6807 li
351.111 68.7705 351.13 68.9277 351.311 69.0322 cv
353.767 70.4502 li
353.947 70.5537 354.219 70.5654 354.375 70.4756 cv
cp
f
345.878 75.3613 mo
348.422 73.8926 li
348.578 73.8027 348.558 73.6455 348.378 73.541 cv
345.922 72.123 li
345.742 72.0195 345.469 72.0078 345.313 72.0977 cv
342.77 73.5664 li
342.614 73.6563 342.633 73.8145 342.813 73.918 cv
345.269 75.3359 li
345.45 75.4404 345.722 75.4512 345.878 75.3613 cv
cp
f
337.381 80.2471 mo
339.924 78.7783 li
340.081 78.6885 340.061 78.5313 339.88 78.4268 cv
337.425 77.0088 li
337.245 76.9053 336.972 76.8936 336.816 76.9844 cv
334.272 78.4521 li
334.117 78.543 334.136 78.7002 334.316 78.8037 cv
336.772 80.2217 li
336.953 80.3262 337.225 80.3369 337.381 80.2471 cv
cp
f
383.07 64.4463 mo
383.018 64.4766 li
382.932 64.415 382.853 64.3525 382.754 64.2949 cv
365.003 54.0469 li
363.7 53.2939 361.729 53.2129 360.601 53.8643 cv
316.759 79.2773 li
315.719 78.5332 315.665 77.5195 316.708 76.918 cv
360.601 51.4736 li
361.729 50.8223 363.7 50.9043 365.003 51.6563 cv
382.754 61.9053 li
384.057 62.6572 384.199 63.7949 383.07 64.4463 cv
cp
.657221 .328313 0 0 cmyk
f
324.228 133.552 mo
299.271 119.263 li
297.867 118.452 296.729 116.276 296.729 114.404 cv
296.729 105.479 li
296.729 103.606 297.867 102.746 299.271 103.557 cv
324.228 117.846 li
325.632 118.657 326.771 120.832 326.771 122.704 cv
326.771 131.629 li
326.771 133.502 325.632 134.362 324.228 133.552 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.036 103.288 mo
297.644 103.658 297.398 104.289 297.398 105.145 cv
297.398 114.069 li
297.398 115.942 298.537 118.117 299.941 118.928 cv
324.897 133.217 li
325.348 133.478 325.765 133.549 326.132 133.486 cv
325.667 133.926 324.99 133.991 324.228 133.552 cv
299.271 119.263 li
297.867 118.452 296.729 116.276 296.729 114.404 cv
296.729 105.479 li
296.729 104.208 297.259 103.42 298.036 103.288 cv
cp
0 0 0 0 cmyk
f
316.722 123.856 mo
314.432 122.535 li
314.126 122.358 313.878 121.884 313.878 121.476 cv
313.878 119.03 li
313.878 118.622 314.126 118.435 314.432 118.611 cv
316.722 119.934 li
317.028 120.11 317.276 120.584 317.276 120.992 cv
317.276 123.438 li
317.276 123.846 317.028 124.033 316.722 123.856 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
309.067 119.438 mo
306.778 118.115 li
306.471 117.938 306.223 117.465 306.223 117.057 cv
306.223 114.611 li
306.223 114.203 306.471 114.016 306.778 114.192 cv
309.067 115.514 li
309.373 115.69 309.622 116.165 309.622 116.573 cv
309.622 119.019 li
309.622 119.426 309.373 119.614 309.067 119.438 cv
cp
0 0 0 0 cmyk
f
324.228 198.043 mo
299.271 183.754 li
297.867 182.943 296.729 180.769 296.729 178.896 cv
296.729 169.971 li
296.729 168.099 297.867 167.237 299.271 168.049 cv
324.228 182.337 li
325.632 183.148 326.771 185.323 326.771 187.196 cv
326.771 196.121 li
326.771 197.993 325.632 198.854 324.228 198.043 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.036 167.779 mo
297.644 168.149 297.398 168.78 297.398 169.636 cv
297.398 178.561 li
297.398 180.434 298.537 182.608 299.941 183.42 cv
324.897 197.708 li
325.348 197.969 325.765 198.04 326.132 197.978 cv
325.667 198.417 324.99 198.483 324.228 198.043 cv
299.271 183.754 li
297.867 182.943 296.729 180.768 296.729 178.896 cv
296.729 169.971 li
296.729 168.699 297.259 167.911 298.036 167.779 cv
cp
0 0 0 0 cmyk
f
316.722 188.348 mo
314.432 187.026 li
314.126 186.85 313.878 186.375 313.878 185.968 cv
313.878 183.522 li
313.878 183.114 314.126 182.926 314.432 183.103 cv
316.722 184.425 li
317.028 184.602 317.276 185.075 317.276 185.483 cv
317.276 187.929 li
317.276 188.337 317.028 188.524 316.722 188.348 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
309.067 183.929 mo
306.778 182.606 li
306.471 182.43 306.223 181.956 306.223 181.548 cv
306.223 179.103 li
306.223 178.694 306.471 178.507 306.778 178.684 cv
309.067 180.005 li
309.373 180.182 309.622 180.656 309.622 181.064 cv
309.622 183.51 li
309.622 183.918 309.373 184.105 309.067 183.929 cv
cp
0 0 0 0 cmyk
f
324.228 230.289 mo
299.271 216 li
297.867 215.189 296.729 213.014 296.729 211.142 cv
296.729 202.217 li
296.729 200.344 297.867 199.483 299.271 200.294 cv
324.228 214.583 li
325.632 215.394 326.771 217.569 326.771 219.441 cv
326.771 228.366 li
326.771 230.239 325.632 231.1 324.228 230.289 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.036 200.025 mo
297.644 200.396 297.398 201.026 297.398 201.882 cv
297.398 210.807 li
297.398 212.679 298.537 214.854 299.941 215.665 cv
324.897 229.954 li
325.348 230.215 325.765 230.285 326.132 230.224 cv
325.667 230.663 324.99 230.729 324.228 230.289 cv
299.271 216 li
297.867 215.189 296.729 213.014 296.729 211.142 cv
296.729 202.217 li
296.729 200.945 297.259 200.157 298.036 200.025 cv
cp
0 0 0 0 cmyk
f
316.722 220.594 mo
314.432 219.272 li
314.126 219.096 313.878 218.621 313.878 218.213 cv
313.878 215.768 li
313.878 215.359 314.126 215.172 314.432 215.349 cv
316.722 216.671 li
317.028 216.847 317.276 217.321 317.276 217.729 cv
317.276 220.175 li
317.276 220.583 317.028 220.771 316.722 220.594 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
309.067 216.174 mo
306.778 214.853 li
306.471 214.676 306.223 214.201 306.223 213.794 cv
306.223 211.349 li
306.223 210.94 306.471 210.752 306.778 210.929 cv
309.067 212.251 li
309.373 212.428 309.622 212.901 309.622 213.31 cv
309.622 215.755 li
309.622 216.163 309.373 216.351 309.067 216.174 cv
cp
0 0 0 0 cmyk
f
324.228 165.797 mo
299.271 151.509 li
297.867 150.697 296.729 148.522 296.729 146.649 cv
296.729 137.726 li
296.729 135.853 297.867 134.992 299.271 135.803 cv
324.228 150.092 li
325.632 150.902 326.771 153.078 326.771 154.95 cv
326.771 163.875 li
326.771 165.747 325.632 166.608 324.228 165.797 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.036 135.534 mo
297.644 135.903 297.398 136.534 297.398 137.391 cv
297.398 146.315 li
297.398 148.188 298.537 150.363 299.941 151.174 cv
324.897 165.463 li
325.348 165.723 325.765 165.794 326.132 165.731 cv
325.667 166.171 324.99 166.237 324.228 165.798 cv
299.271 151.509 li
297.867 150.697 296.729 148.522 296.729 146.649 cv
296.729 137.726 li
296.729 136.454 297.259 135.666 298.036 135.534 cv
cp
0 0 0 0 cmyk
f
316.722 156.103 mo
314.432 154.78 li
314.126 154.604 313.878 154.13 313.878 153.722 cv
313.878 151.276 li
313.878 150.868 314.126 150.681 314.432 150.857 cv
316.722 152.179 li
317.028 152.355 317.276 152.83 317.276 153.238 cv
317.276 155.684 li
317.276 156.092 317.028 156.279 316.722 156.103 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
309.067 151.683 mo
306.778 150.361 li
306.471 150.185 306.223 149.71 306.223 149.302 cv
306.223 146.856 li
306.223 146.448 306.471 146.261 306.778 146.438 cv
309.067 147.76 li
309.373 147.937 309.622 148.41 309.622 148.818 cv
309.622 151.264 li
309.622 151.672 309.373 151.859 309.067 151.683 cv
cp
0 0 0 0 cmyk
f
345.843 124.416 mo
403.42 91.1739 li
404.71 90.4296 405.754 88.4336 405.754 86.7148 cv
405.754 75.7363 li
405.754 74.0176 404.71 73.2285 403.42 73.9727 cv
345.843 107.215 li
344.555 107.958 343.51 109.954 343.51 111.673 cv
343.51 122.651 li
343.51 124.37 344.555 125.16 345.843 124.416 cv
.657221 .328313 0 0 cmyk
f
347.027 120.708 mo
346.607 120.708 346.313 120.32 346.313 119.671 cv
346.313 111.417 li
346.313 110.546 346.842 109.533 347.496 109.155 cv
401.768 77.8223 li
401.935 77.7256 402.094 77.6799 402.238 77.6799 cv
402.658 77.6799 402.952 78.0677 402.952 78.7168 cv
402.952 86.9707 li
402.952 87.8428 402.421 88.8555 401.768 89.2324 cv
347.496 120.566 li
347.329 120.663 347.171 120.708 347.027 120.708 cv
.439979 .173587 0 0 cmyk
f
390.458 91.5898 mo
398.557 86.9141 li
399.192 86.5469 399.707 85.5635 399.707 84.7168 cv
399.707 83.8711 399.192 83.4814 398.557 83.8477 cv
390.458 88.5244 li
389.823 88.8906 389.308 89.874 389.308 90.7207 cv
389.308 91.5674 389.823 91.9561 390.458 91.5898 cv
cp
.147219 .0154116 0 0 cmyk
f
383.556 94.042 mo
383.556 94.8887 384.15 95.2314 384.883 94.8086 cv
385.617 94.3848 386.21 93.3555 386.21 92.5088 cv
386.21 91.6631 385.617 91.3193 384.883 91.7432 cv
384.15 92.166 383.556 93.1953 383.556 94.042 cv
cp
1 .866484 .240818 .0951247 cmyk
f
378.873 96.7461 mo
378.873 97.5918 379.467 97.9355 380.2 97.5117 cv
380.933 97.0889 381.528 96.0596 381.528 95.2129 cv
381.528 94.3662 380.933 94.0234 380.2 94.4463 cv
379.467 94.8701 378.873 95.8994 378.873 96.7461 cv
cp
f
374.19 99.4492 mo
374.19 100.296 374.784 100.639 375.517 100.216 cv
376.25 99.793 376.844 98.7637 376.844 97.917 cv
376.844 97.0703 376.25 96.7266 375.517 97.1504 cv
374.784 97.5732 374.19 98.6025 374.19 99.4492 cv
cp
.147219 .0154116 0 0 cmyk
f
369.506 102.153 mo
369.506 103 370.101 103.343 370.834 102.92 cv
371.567 102.496 372.162 101.467 372.162 100.62 cv
372.162 99.7734 371.567 99.4307 370.834 99.8545 cv
370.101 100.277 369.506 101.307 369.506 102.153 cv
cp
1 .866484 .240818 .0951247 cmyk
f
349.779 115.97 mo
352.507 114.395 li
352.915 114.159 353.245 113.528 353.245 112.985 cv
353.245 110.099 li
353.245 109.556 352.915 109.306 352.507 109.541 cv
349.779 111.116 li
349.372 111.352 349.042 111.982 349.042 112.525 cv
349.042 115.412 li
349.042 115.955 349.372 116.205 349.779 115.97 cv
cp
f
345.843 143.776 mo
403.42 110.534 li
404.71 109.79 405.754 107.794 405.754 106.075 cv
405.754 95.0966 li
405.754 93.378 404.71 92.5888 403.42 93.3331 cv
345.843 126.575 li
344.555 127.318 343.51 129.314 343.51 131.033 cv
343.51 142.012 li
343.51 143.73 344.555 144.521 345.843 143.776 cv
.657221 .328313 0 0 cmyk
f
347.027 140.068 mo
346.607 140.068 346.313 139.681 346.313 139.031 cv
346.313 130.777 li
346.313 129.906 346.842 128.894 347.496 128.516 cv
401.768 97.1826 li
401.935 97.086 402.094 97.0403 402.238 97.0403 cv
402.658 97.0403 402.952 97.428 402.952 98.0771 cv
402.952 106.331 li
402.952 107.203 402.421 108.216 401.768 108.593 cv
347.496 139.927 li
347.329 140.023 347.171 140.069 347.027 140.068 cv
.439979 .173587 0 0 cmyk
f
390.458 110.95 mo
398.557 106.274 li
399.192 105.907 399.707 104.924 399.707 104.077 cv
399.707 103.231 399.192 102.842 398.557 103.208 cv
390.458 107.885 li
389.823 108.251 389.308 109.234 389.308 110.081 cv
389.308 110.928 389.823 111.316 390.458 110.95 cv
cp
.147219 .0154116 0 0 cmyk
f
383.556 113.402 mo
383.556 114.249 384.15 114.592 384.883 114.169 cv
385.617 113.745 386.21 112.716 386.21 111.869 cv
386.21 111.023 385.617 110.68 384.883 111.104 cv
384.15 111.526 383.556 112.556 383.556 113.402 cv
cp
0 0 0 0 cmyk
f
378.873 116.106 mo
378.873 116.952 379.467 117.296 380.2 116.872 cv
380.933 116.449 381.528 115.42 381.528 114.573 cv
381.528 113.727 380.933 113.384 380.2 113.807 cv
379.467 114.23 378.873 115.26 378.873 116.106 cv
cp
1 .866484 .240818 .0951247 cmyk
f
374.19 118.81 mo
374.19 119.656 374.784 119.999 375.517 119.576 cv
376.25 119.153 376.844 118.124 376.844 117.277 cv
376.844 116.431 376.25 116.087 375.517 116.511 cv
374.784 116.934 374.19 117.963 374.19 118.81 cv
cp
.147219 .0154116 0 0 cmyk
f
369.506 121.514 mo
369.506 122.36 370.101 122.703 370.834 122.28 cv
371.567 121.856 372.162 120.827 372.162 119.98 cv
372.162 119.134 371.567 118.791 370.834 119.215 cv
370.101 119.638 369.506 120.667 369.506 121.514 cv
cp
1 .866484 .240818 .0951247 cmyk
f
349.779 135.33 mo
352.507 133.755 li
352.915 133.52 353.245 132.889 353.245 132.346 cv
353.245 129.459 li
353.245 128.916 352.915 128.666 352.507 128.901 cv
349.779 130.477 li
349.372 130.712 349.042 131.343 349.042 131.886 cv
349.042 134.772 li
349.042 135.315 349.372 135.565 349.779 135.33 cv
cp
f
345.843 163.137 mo
403.42 129.895 li
404.71 129.15 405.754 127.154 405.754 125.435 cv
405.754 114.457 li
405.754 112.738 404.71 111.949 403.42 112.693 cv
345.843 145.936 li
344.555 146.679 343.51 148.675 343.51 150.394 cv
343.51 161.372 li
343.51 163.091 344.555 163.881 345.843 163.137 cv
.657221 .328313 0 0 cmyk
f
347.027 159.429 mo
346.607 159.429 346.313 159.041 346.313 158.392 cv
346.313 150.138 li
346.313 149.267 346.842 148.254 347.496 147.876 cv
373.353 132.948 li
373.353 144.359 li
347.496 159.287 li
347.329 159.383 347.171 159.429 347.027 159.429 cv
392.011 122.176 mo
401.768 116.543 li
401.935 116.446 402.094 116.401 402.238 116.401 cv
402.658 116.401 402.952 116.788 402.952 117.437 cv
402.952 119.313 li
392.011 122.176 li
.439979 .173587 0 0 cmyk
f
390.458 130.311 mo
398.557 125.635 li
399.192 125.268 399.707 124.284 399.707 123.438 cv
399.707 122.592 399.192 122.202 398.557 122.568 cv
390.458 127.245 li
389.823 127.611 389.308 128.595 389.308 129.441 cv
389.308 130.288 389.823 130.677 390.458 130.311 cv
cp
.147219 .0154116 0 0 cmyk
f
383.556 132.763 mo
383.556 133.609 384.15 133.952 384.883 133.529 cv
385.617 133.105 386.21 132.076 386.21 131.229 cv
386.21 130.384 385.617 130.04 384.883 130.464 cv
384.15 130.887 383.556 131.916 383.556 132.763 cv
cp
0 0 0 0 cmyk
f
378.873 135.467 mo
378.873 136.313 379.467 136.656 380.2 136.232 cv
380.933 135.81 381.528 134.78 381.528 133.934 cv
381.528 133.087 380.933 132.744 380.2 133.167 cv
379.467 133.591 378.873 134.62 378.873 135.467 cv
cp
1 .866484 .240818 .0951247 cmyk
f
374.19 138.17 mo
374.19 139.017 374.784 139.359 375.517 138.937 cv
376.25 138.514 376.844 137.484 376.844 136.638 cv
376.844 135.791 376.25 135.447 375.517 135.871 cv
374.784 136.294 374.19 137.323 374.19 138.17 cv
cp
.147219 .0154116 0 0 cmyk
f
369.506 140.874 mo
369.506 141.721 370.101 142.063 370.834 141.641 cv
371.567 141.217 372.162 140.188 372.162 139.341 cv
372.162 138.494 371.567 138.151 370.834 138.575 cv
370.101 138.998 369.506 140.027 369.506 140.874 cv
cp
1 .866484 .240818 .0951247 cmyk
f
349.779 154.69 mo
352.507 153.115 li
352.915 152.88 353.245 152.249 353.245 151.706 cv
353.245 148.819 li
353.245 148.276 352.915 148.026 352.507 148.262 cv
349.779 149.837 li
349.372 150.072 349.042 150.703 349.042 151.246 cv
349.042 154.133 li
349.042 154.676 349.372 154.926 349.779 154.69 cv
cp
f
345.843 182.497 mo
403.42 149.255 li
404.71 148.511 405.754 146.515 405.754 144.796 cv
405.754 133.817 li
405.754 132.099 404.71 131.309 403.42 132.054 cv
345.843 165.296 li
344.555 166.039 343.51 168.035 343.51 169.754 cv
343.51 180.732 li
343.51 182.451 344.555 183.241 345.843 182.497 cv
.657221 .328313 0 0 cmyk
f
347.027 178.789 mo
346.607 178.789 346.313 178.401 346.313 177.752 cv
346.313 169.498 li
346.313 168.627 346.842 167.614 347.496 167.236 cv
373.353 152.308 li
373.353 163.719 li
347.496 178.648 li
347.329 178.744 347.171 178.789 347.027 178.789 cv
.439979 .173587 0 0 cmyk
f
390.458 149.671 mo
398.557 144.995 li
399.192 144.628 399.707 143.645 399.707 142.798 cv
399.707 141.952 399.192 141.563 398.557 141.929 cv
390.458 146.605 li
389.823 146.972 389.308 147.955 389.308 148.802 cv
389.308 149.648 389.823 150.037 390.458 149.671 cv
cp
.147219 .0154116 0 0 cmyk
f
383.556 152.123 mo
383.556 152.97 384.15 153.313 384.883 152.89 cv
385.617 152.466 386.21 151.437 386.21 150.59 cv
386.21 149.744 385.617 149.4 384.883 149.824 cv
384.15 150.247 383.556 151.276 383.556 152.123 cv
cp
1 .866484 .240818 .0951247 cmyk
f
378.873 154.827 mo
378.873 155.673 379.467 156.017 380.2 155.593 cv
380.933 155.17 381.528 154.141 381.528 153.294 cv
381.528 152.447 380.933 152.104 380.2 152.527 cv
379.467 152.951 378.873 153.98 378.873 154.827 cv
cp
f
374.19 157.53 mo
374.19 158.377 374.784 158.72 375.517 158.297 cv
376.25 157.874 376.844 156.845 376.844 155.998 cv
376.844 155.151 376.25 154.808 375.517 155.231 cv
374.784 155.654 374.19 156.684 374.19 157.53 cv
cp
.147219 .0154116 0 0 cmyk
f
369.506 160.234 mo
369.506 161.081 370.101 161.424 370.834 161.001 cv
371.567 160.577 372.162 159.548 372.162 158.701 cv
372.162 157.854 371.567 157.512 370.834 157.936 cv
370.101 158.358 369.506 159.388 369.506 160.234 cv
cp
1 .866484 .240818 .0951247 cmyk
f
349.779 174.051 mo
352.507 172.476 li
352.915 172.24 353.245 171.609 353.245 171.066 cv
353.245 168.18 li
353.245 167.637 352.915 167.387 352.507 167.622 cv
349.779 169.197 li
349.372 169.433 349.042 170.063 349.042 170.606 cv
349.042 173.493 li
349.042 174.036 349.372 174.286 349.779 174.051 cv
cp
.147219 .0154116 0 0 cmyk
f
345.843 201.857 mo
403.42 168.615 li
404.71 167.871 405.754 165.875 405.754 164.156 cv
405.754 153.178 li
405.754 151.459 404.71 150.67 403.42 151.414 cv
345.843 184.656 li
344.555 185.399 343.51 187.396 343.51 189.114 cv
343.51 200.093 li
343.51 201.811 344.555 202.602 345.843 201.857 cv
.657221 .328313 0 0 cmyk
f
347.027 198.15 mo
346.607 198.15 346.313 197.762 346.313 197.112 cv
346.313 188.858 li
346.313 187.987 346.842 186.975 347.496 186.597 cv
373.353 171.669 li
373.353 183.079 li
347.496 198.008 li
347.329 198.104 347.171 198.15 347.027 198.15 cv
.439979 .173587 0 0 cmyk
f
390.458 169.031 mo
398.557 164.355 li
399.192 163.988 399.707 163.005 399.707 162.158 cv
399.707 161.313 399.192 160.923 398.557 161.29 cv
390.458 165.966 li
389.823 166.332 389.308 167.315 389.308 168.162 cv
389.308 169.009 389.823 169.397 390.458 169.031 cv
cp
.147219 .0154116 0 0 cmyk
f
383.556 171.483 mo
383.556 172.33 384.15 172.673 384.883 172.25 cv
385.617 171.826 386.21 170.797 386.21 169.95 cv
386.21 169.104 385.617 168.761 384.883 169.185 cv
384.15 169.607 383.556 170.637 383.556 171.483 cv
cp
1 .866484 .240818 .0951247 cmyk
f
378.873 174.188 mo
378.873 175.033 379.467 175.377 380.2 174.953 cv
380.933 174.53 381.528 173.501 381.528 172.654 cv
381.528 171.808 380.933 171.465 380.2 171.888 cv
379.467 172.312 378.873 173.341 378.873 174.188 cv
cp
0 0 0 0 cmyk
f
374.19 176.891 mo
374.19 177.737 374.784 178.08 375.517 177.657 cv
376.25 177.234 376.844 176.205 376.844 175.358 cv
376.844 174.512 376.25 174.168 375.517 174.592 cv
374.784 175.015 374.19 176.044 374.19 176.891 cv
cp
.147219 .0154116 0 0 cmyk
f
369.506 179.595 mo
369.506 180.441 370.101 180.784 370.834 180.361 cv
371.567 179.938 372.162 178.908 372.162 178.062 cv
372.162 177.215 371.567 176.872 370.834 177.296 cv
370.101 177.719 369.506 178.748 369.506 179.595 cv
cp
0 0 0 0 cmyk
f
349.779 193.411 mo
352.507 191.836 li
352.915 191.601 353.245 190.97 353.245 190.427 cv
353.245 187.54 li
353.245 186.997 352.915 186.747 352.507 186.982 cv
349.779 188.558 li
349.372 188.793 349.042 189.424 349.042 189.967 cv
349.042 192.854 li
349.042 193.396 349.372 193.646 349.779 193.411 cv
cp
.147219 .0154116 0 0 cmyk
f
345.843 221.218 mo
403.42 187.976 li
404.71 187.232 405.754 185.235 405.754 183.517 cv
405.754 172.538 li
405.754 170.819 404.71 170.03 403.42 170.774 cv
345.843 204.017 li
344.555 204.76 343.51 206.756 343.51 208.475 cv
343.51 219.453 li
343.51 221.172 344.555 221.962 345.843 221.218 cv
.657221 .328313 0 0 cmyk
f
347.027 217.51 mo
346.607 217.51 346.313 217.122 346.313 216.473 cv
346.313 208.219 li
346.313 207.348 346.842 206.335 347.496 205.957 cv
373.353 191.029 li
373.353 202.44 li
347.496 217.368 li
347.329 217.464 347.171 217.51 347.027 217.51 cv
.439979 .173587 0 0 cmyk
f
390.458 188.392 mo
398.557 183.716 li
399.192 183.349 399.707 182.365 399.707 181.519 cv
399.707 180.673 399.192 180.283 398.557 180.65 cv
390.458 185.326 li
389.823 185.692 389.308 186.676 389.308 187.522 cv
389.308 188.369 389.823 188.758 390.458 188.392 cv
cp
.147219 .0154116 0 0 cmyk
f
383.556 190.844 mo
383.556 191.69 384.15 192.033 384.883 191.61 cv
385.617 191.187 386.21 190.157 386.21 189.311 cv
386.21 188.465 385.617 188.121 384.883 188.545 cv
384.15 188.968 383.556 189.997 383.556 190.844 cv
cp
1 .866484 .240818 .0951247 cmyk
f
378.873 193.548 mo
378.873 194.394 379.467 194.737 380.2 194.313 cv
380.933 193.891 381.528 192.861 381.528 192.015 cv
381.528 191.168 380.933 190.825 380.2 191.248 cv
379.467 191.672 378.873 192.701 378.873 193.548 cv
cp
f
374.19 196.251 mo
374.19 197.098 374.784 197.44 375.517 197.018 cv
376.25 196.595 376.844 195.565 376.844 194.719 cv
376.844 193.872 376.25 193.528 375.517 193.952 cv
374.784 194.375 374.19 195.404 374.19 196.251 cv
cp
.147219 .0154116 0 0 cmyk
f
369.506 198.955 mo
369.506 199.802 370.101 200.145 370.834 199.722 cv
371.567 199.298 372.162 198.269 372.162 197.422 cv
372.162 196.575 371.567 196.232 370.834 196.656 cv
370.101 197.079 369.506 198.108 369.506 198.955 cv
cp
1 .866484 .240818 .0951247 cmyk
f
349.779 212.771 mo
352.507 211.196 li
352.915 210.961 353.245 210.33 353.245 209.787 cv
353.245 206.9 li
353.245 206.357 352.915 206.107 352.507 206.343 cv
349.779 207.918 li
349.372 208.153 349.042 208.784 349.042 209.327 cv
349.042 212.214 li
349.042 212.757 349.372 213.007 349.779 212.771 cv
cp
f
345.843 240.578 mo
403.42 207.336 li
404.71 206.592 405.754 204.596 405.754 202.877 cv
405.754 191.898 li
405.754 190.18 404.71 189.391 403.42 190.135 cv
345.843 223.377 li
344.555 224.12 343.51 226.116 343.51 227.835 cv
343.51 238.814 li
343.51 240.532 344.555 241.322 345.843 240.578 cv
.657221 .328313 0 0 cmyk
f
347.027 236.87 mo
346.607 236.87 346.313 236.482 346.313 235.833 cv
346.313 227.579 li
346.313 226.708 346.842 225.695 347.496 225.317 cv
373.353 210.389 li
373.353 221.8 li
347.496 236.729 li
347.329 236.825 347.171 236.87 347.027 236.87 cv
.439979 .173587 0 0 cmyk
f
390.458 207.752 mo
398.557 203.076 li
399.192 202.709 399.707 201.726 399.707 200.879 cv
399.707 200.033 399.192 199.644 398.557 200.011 cv
390.458 204.687 li
389.823 205.053 389.308 206.036 389.308 206.883 cv
389.308 207.729 389.823 208.118 390.458 207.752 cv
cp
.147219 .0154116 0 0 cmyk
f
382.076 211.252 mo
382.076 212.851 383.198 213.499 384.583 212.699 cv
385.968 211.9 387.09 209.956 387.09 208.356 cv
387.09 206.758 385.968 206.109 384.583 206.909 cv
383.198 207.709 382.076 209.653 382.076 211.252 cv
cp
0 0 0 0 cmyk
f
372.375 216.928 mo
372.375 217.774 372.97 218.117 373.704 217.694 cv
374.436 217.271 375.031 216.241 375.031 215.395 cv
375.031 214.549 374.436 214.205 373.704 214.629 cv
372.97 215.052 372.375 216.081 372.375 216.928 cv
cp
1 .866484 .240818 .0951247 cmyk
f
367.693 219.632 mo
367.693 220.479 368.287 220.821 369.02 220.397 cv
369.753 219.975 370.348 218.945 370.348 218.099 cv
370.348 217.252 369.753 216.909 369.02 217.332 cv
368.287 217.756 367.693 218.785 367.693 219.632 cv
cp
.147219 .0154116 0 0 cmyk
f
363.009 222.335 mo
363.009 223.182 363.604 223.525 364.337 223.102 cv
365.071 222.679 365.665 221.649 365.665 220.803 cv
365.665 219.956 365.071 219.613 364.337 220.036 cv
363.604 220.459 363.009 221.489 363.009 222.335 cv
cp
1 .866484 .240818 .0951247 cmyk
f
349.779 232.132 mo
352.507 230.557 li
352.915 230.321 353.245 229.69 353.245 229.147 cv
353.245 226.261 li
353.245 225.718 352.915 225.468 352.507 225.703 cv
349.779 227.278 li
349.372 227.514 349.042 228.145 349.042 228.688 cv
349.042 231.574 li
349.042 232.117 349.372 232.367 349.779 232.132 cv
cp
.147219 .0154116 0 0 cmyk
f
341.042 102.511 mo
406.969 64.918 li
409.38 63.5254 409.079 61.0938 406.294 59.4863 cv
368.361 37.5859 li
365.577 35.9785 361.365 35.8037 358.954 37.1963 cv
293.026 74.7891 li
290.615 76.1807 290.917 78.6123 293.701 80.2197 cv
331.634 102.121 li
334.418 103.729 338.63 103.902 341.042 102.511 cv
cp
level3{
gsave
clp
[-31.9559 -54.0206 54.0206 -31.9559 371.294 105.855 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-31.9559 -54.0206 54.0206 -31.9559 371.294 105.855 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~F)uAAEH#l8Df0E.Chmg$C2%?oB4b^dA7K+Y@UW\Q?sd5H?!LW>>[(B8=]ed-=&r@%<E)pr;c6Lj;,C(b
:JX_\9he;T91qlL8P)HD7n6$<77BU46psC06:*t(5s[b$5<h=q4Ztni4?P\e4$,Ja3B9&Y3&iiU2`EWQ
2E!HN2)R6J1c$pC1,:U?1,:U>0ekC:0JG160/"t2/hSb./M/P+/M/P*/1`>&.k<,".Olnt.Olns.4H\p
.4H\p-n$Jl-n$Jl-n$Jl-RU8h-RU8h-71&d-71&d-71&d,pai`,pai`,pai`,pai`,pai`,pai`,pai`
~>
<~-n$Jk-RL/d,pX`],U4NX+sA*Q+WqmM+<M[H*ZZ7A*?6%=*#fh9)]BV5)AsD1)&O2-(`*u)(D[c%()7Q!
'bqGu'GM2o',(uk&eYcg&J5Qc&.f?_%hB-[%LrsY%LrpW%1NaU%1N^S$k*LO$O[:K$47+I$47(G#mgkC
#RC\A#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP89"pP88"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-
~>
<~!WiE)!WiE)!WiE)!WiE)!W`<&!<E3%!<E3%!<E3%!<E3%!<E3%!<<*"zzzzzzzzzzzzzzzzzzzzzzzzz
zzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
369.022 60.1221 mo
368.078 59.5771 366.546 59.5771 365.602 60.1221 cv
333.308 78.8125 li
332.364 79.3584 332.364 80.2422 333.308 80.7871 cv
334.253 81.332 335.784 81.332 336.728 80.7871 cv
369.022 62.0967 li
369.966 61.5508 369.966 60.667 369.022 60.1221 cv
cp
1 .866484 .240818 .0951247 cmyk
f
422.984 318.875 mo
488.913 281.282 li
491.324 279.891 491.021 277.459 488.237 275.851 cv
450.303 253.95 li
447.519 252.343 443.308 252.169 440.897 253.561 cv
374.968 291.153 li
372.557 292.546 372.86 294.978 375.644 296.585 cv
413.578 318.485 li
416.362 320.093 420.573 320.268 422.984 318.875 cv
.470191 .0827344 .00714122 0 cmyk
f
444.957 243.3 mo
443.742 243.3 442.596 243.527 441.782 243.998 cv
375.845 281.596 li
375.388 281.859 375.111 282.168 375.111 282.417 cv
375.111 282.775 375.549 283.391 376.529 283.956 cv
414.462 305.856 li
416.676 307.134 420.246 307.318 422.099 306.247 cv
422.107 306.242 li
488.036 268.649 li
488.493 268.385 488.77 268.077 488.77 267.828 cv
488.77 267.47 488.331 266.854 487.352 266.289 cv
449.419 244.389 li
448.177 243.672 446.509 243.3 444.957 243.3 cv
418.89 310.482 mo
416.734 310.482 414.483 309.956 412.693 308.923 cv
374.759 287.022 li
372.733 285.852 371.571 284.174 371.571 282.417 cv
371.571 280.866 372.486 279.447 374.083 278.524 cv
440.02 240.927 li
442.957 239.233 447.866 239.404 451.188 241.322 cv
489.122 263.223 li
491.148 264.393 492.31 266.071 492.31 267.828 cv
492.31 269.38 491.394 270.798 489.797 271.72 cv
423.864 309.315 li
422.507 310.098 420.733 310.482 418.89 310.482 cv
0 0 0 0 cmyk
f
418.898 297.01 mo
417.05 297.01 415.101 296.56 413.578 295.681 cv
390.448 282.327 li
383.805 278.491 li
382.663 277.832 li
382.555 277.77 li
379.004 275.719 li
375.644 273.779 li
374.038 272.853 373.263 271.651 373.353 270.533 cv
373.353 270.332 li
373.353 269.014 li
373.353 269.013 li
373.353 253.316 li
373.353 244.258 li
373.353 240.182 li
373.353 230.511 li
373.353 224.695 li
373.353 221.8 li
373.353 210.389 li
373.353 207.494 li
373.353 205.335 li
373.353 202.44 li
373.353 191.029 li
373.353 188.134 li
373.353 185.975 li
373.353 183.079 li
373.353 171.669 li
373.353 168.774 li
373.353 166.614 li
373.353 163.719 li
373.353 152.308 li
373.353 149.413 li
373.353 147.254 li
373.353 144.359 li
373.353 132.948 li
373.353 130.053 li
373.353 127.894 li
373.353 127.06 li
375.995 126.368 li
382.837 124.577 li
392.011 122.176 li
402.952 119.313 li
405.754 118.579 li
408.585 117.838 li
412.96 116.693 li
418.164 115.331 li
430.391 112.131 li
440.897 106.065 li
441.989 105.435 443.451 105.126 444.981 105.126 cv
446.473 105.126 448.031 105.419 449.377 105.995 cv
448.115 105.456 446.667 105.167 445.261 105.133 cv
417.939 152.244 li
418.619 297.003 li
418.714 297.005 418.808 297.006 418.903 297.006 cv
420.432 297.006 421.893 296.7 422.984 296.07 cv
421.892 296.701 420.429 297.01 418.898 297.01 cv
460.106 112.114 mo
450.303 106.456 li
450.295 106.451 450.286 106.446 450.278 106.442 cv
450.286 106.446 450.295 106.451 450.303 106.456 cv
460.106 112.114 li
490.528 112.098 li
460.106 112.114 li
449.427 106.016 mo
449.426 106.016 449.425 106.015 449.424 106.015 cv
449.425 106.015 449.426 106.016 449.427 106.016 cv
449.408 106.008 mo
449.399 106.004 449.389 106 449.379 105.996 cv
449.389 106 449.399 106.004 449.408 106.008 cv
level3{
gsave
clp
[118.752 0 0 118.752 363.745 130.023 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[118.752 0 0 118.752 363.745 130.023 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
445.261 105.133 mo
447.026 105.176 448.857 105.62 450.303 106.456 cv
460.106 112.114 li
490.528 112.098 li
490.528 255.957 li
490.596 256.899 490.071 257.809 488.913 258.478 cv
422.984 296.07 li
421.826 296.739 420.25 297.043 418.619 297.003 cv
417.939 152.244 li
445.261 105.133 li
.147219 .0154116 0 0 cmyk
f
422.378 296.367 mo
420.299 297.258 417.291 297.208 414.859 296.281 cv
414.859 150.533 li
422.378 150.533 li
422.378 296.367 li
cp
.657221 .328313 0 0 cmyk
f
422.984 152.262 mo
488.913 114.668 li
491.324 113.276 491.021 110.845 488.237 109.237 cv
450.303 87.3369 li
447.519 85.7295 443.308 85.5547 440.897 86.9463 cv
374.968 124.539 li
372.557 125.932 372.86 128.363 375.644 129.971 cv
413.578 151.871 li
416.362 153.479 420.573 153.653 422.984 152.262 cv
cp
level3{
gsave
clp
[-25.2008 -42.6122 42.6122 -25.2008 451.247 152.25 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-25.2008 -42.6122 42.6122 -25.2008 451.247 152.25 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
375.644 127.303 mo
413.578 149.204 li
416.362 150.812 420.573 150.985 422.984 149.594 cv
488.913 112.001 li
489.45 111.69 489.845 111.326 490.116 110.934 cv
490.944 112.267 490.568 113.713 488.913 114.668 cv
422.984 152.262 li
420.573 153.653 416.362 153.479 413.578 151.871 cv
375.644 129.971 li
373.48 128.722 372.823 126.977 373.765 125.606 cv
374.143 126.215 374.772 126.8 375.644 127.303 cv
cp
.0124514 0 0 0 cmyk
f
421.119 137.025 mo
465.013 111.582 li
466.141 110.931 466 109.792 464.697 109.04 cv
446.946 98.792 li
445.643 98.0391 443.672 97.958 442.543 98.6094 cv
398.65 124.053 li
397.522 124.704 397.664 125.843 398.966 126.595 cv
416.717 136.843 li
418.02 137.596 419.991 137.677 421.119 137.025 cv
cp
level3{
gsave
clp
[39.1519 0 0 39.1519 461.314 124.285 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~nA6mgnA6mgnA?sin\['jn\d-kn\d0lo#3?no#3?no#<Eoo>WNpo>`Tro>`TroZ/ctoZ/fuoZ/fuouT!"
ouT!"ou]'$ou]'$p<,6&p<,9'p<5?(pWPH)pWYN+pWYQ,ps(`.ps(`.q9Lo0q9Lr1qTq,4qTq,4qTq,4
qU%56qp@>7qpID8qpID8r6mS;r6mS;rR<b=rR<e>rm`t@rm`t@rm`t@s40.Cs40.Cs494Ds497Es4B=F
s4B=Fs4KCHs4KCHs4TLJs4TLJs4TLKs4TOLs4]UMs4]UNs4]XOs4]XPs4f^Qs4faRs4faSs4ogTs4ogT
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.1519 0 0 39.1519 461.314 124.285 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W)trr2lprVc]nrVc]nrVcZlr;?Kjr;?Hhqtp9fqtp6dqYL'bqYL'bqYL$`
q>'j^q>'j^q>'j^q>'j]q"XXZq"XXYp\4FVp\4FUp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Mo^qeJo^qeJ
o^qeJo^qeJoCMSFoCMSFoCMSFo()ABo()ABo()ABnaZ/>naZ/>naZ/>nF5r:nF5r:nF5r:n*f`6n*f`6
~>
<~gt^]?gt^]?gtUT<gY:K;gY:K;gY1B8g=k97g=k97g=k97g=b04g"G'3g"G'3g"G'3g"=s0f\"j/f[na,
f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC<!teC;sre'ldpe'landaHRldaHOjdF$@hdF$=fd*U.d
d*U.ccd0q`cd0q`cd0q_cHa_\cHa_[c-=MXc-=MWbfn;Tbfn;SbKJ)PbKJ)Ob0%lLb0%lKaiVZHaiVZG
aN2HDaN2HDa2c6@a2c6@a2c6@`l?$<`l?$<`Pog8`Pog8`5KU4`5KU4_o'C0_o'C0_SX1,_SX1,_83t(
~>
<~4?P_g4?P_g4?P_g4?P_g4?GVd4$,Mc4$,Mc4$#D`3]];_3]];_3]T2\3B9)[3B9)[3B/uX3&ilW3&ilW
3&ilW3&ilW3&iiU2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EWQ2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO
2E!HN2)R6K2)R6K2)R6K2)R6J1c.$G1c.$G1c.$G1c.$F1G^gC1G^gC1G^gC1G^gB1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:U?0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0JG170JG170JG170JG17
~>
<~(Ddl((Ddl((Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m',)#m'+toj
&eYfi&eYfi&eYfi&eYfi&eYfi&eYcg&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Qc&.fBa&.fBa&.fBa
&.fBa&.fBa&.fBa&.fB`%hB0]%hB0]%hB0]%hB0]%hB0]%hB0\%LrsY%LrsY%LrsY%LrsY%LrsY%LrsX
%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$O[=M
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
444.816 112.725 mo
447.359 111.256 li
447.515 111.166 447.496 111.009 447.316 110.904 cv
444.86 109.486 li
444.679 109.383 444.407 109.371 444.25 109.461 cv
441.708 110.93 li
441.551 111.02 441.571 111.177 441.75 111.281 cv
444.207 112.699 li
444.387 112.804 444.66 112.814 444.816 112.725 cv
cp
.147219 .0154116 0 0 cmyk
f
436.319 117.61 mo
438.862 116.142 li
439.018 116.052 438.999 115.895 438.818 115.79 cv
436.363 114.372 li
436.182 114.269 435.91 114.257 435.753 114.347 cv
433.209 115.815 li
433.053 115.906 433.074 116.063 433.253 116.167 cv
435.709 117.585 li
435.89 117.689 436.163 117.7 436.319 117.61 cv
cp
f
427.821 122.496 mo
430.365 121.028 li
430.521 120.938 430.501 120.78 430.321 120.677 cv
427.865 119.259 li
427.685 119.154 427.412 119.143 427.256 119.233 cv
424.712 120.701 li
424.556 120.792 424.576 120.949 424.756 121.054 cv
427.212 122.472 li
427.392 122.575 427.665 122.587 427.821 122.496 cv
cp
f
419.324 127.383 mo
421.868 125.914 li
422.023 125.824 422.003 125.666 421.824 125.563 cv
419.368 124.145 li
419.187 124.04 418.915 124.029 418.758 124.119 cv
416.215 125.588 li
416.059 125.678 416.079 125.835 416.258 125.939 cv
418.714 127.357 li
418.895 127.461 419.167 127.473 419.324 127.383 cv
cp
f
465.013 111.582 mo
464.96 111.611 li
464.875 111.551 464.795 111.487 464.697 111.43 cv
446.946 101.182 li
445.643 100.43 443.672 100.348 442.543 100.999 cv
398.703 126.413 li
397.663 125.668 397.608 124.655 398.65 124.053 cv
442.543 98.6094 li
443.672 97.958 445.643 98.0391 446.946 98.792 cv
464.697 109.04 li
466 109.792 466.141 110.931 465.013 111.582 cv
cp
.657221 .328313 0 0 cmyk
f
406.17 180.687 mo
381.214 166.398 li
379.81 165.587 378.671 163.412 378.671 161.539 cv
378.671 152.614 li
378.671 150.742 379.81 149.882 381.214 150.692 cv
406.17 164.981 li
407.575 165.792 408.713 167.967 408.713 169.84 cv
408.713 178.765 li
408.713 180.637 407.575 181.498 406.17 180.687 cv
cp
1 .866484 .240818 .0951247 cmyk
f
379.979 150.423 mo
379.586 150.793 379.34 151.424 379.34 152.28 cv
379.34 161.205 li
379.34 163.077 380.479 165.253 381.883 166.063 cv
406.839 180.353 li
407.291 180.612 407.708 180.684 408.075 180.621 cv
407.609 181.061 406.933 181.127 406.17 180.687 cv
381.214 166.397 li
379.81 165.587 378.671 163.412 378.671 161.539 cv
378.671 152.614 li
378.671 151.343 379.203 150.556 379.979 150.423 cv
cp
0 0 0 0 cmyk
f
398.665 170.992 mo
396.375 169.67 li
396.069 169.493 395.821 169.02 395.821 168.611 cv
395.821 166.166 li
395.821 165.758 396.069 165.57 396.375 165.747 cv
398.665 167.068 li
398.97 167.245 399.218 167.72 399.218 168.128 cv
399.218 170.573 li
399.218 170.981 398.97 171.169 398.665 170.992 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
391.009 166.572 mo
388.72 165.251 li
388.415 165.074 388.167 164.6 388.167 164.191 cv
388.167 161.746 li
388.167 161.338 388.415 161.15 388.72 161.327 cv
391.009 162.649 li
391.316 162.825 391.564 163.3 391.564 163.708 cv
391.564 166.153 li
391.564 166.562 391.316 166.749 391.009 166.572 cv
cp
0 0 0 0 cmyk
f
406.17 245.179 mo
381.214 230.89 li
379.81 230.078 378.671 227.903 378.671 226.03 cv
378.671 217.106 li
378.671 215.233 379.81 214.373 381.214 215.184 cv
406.17 229.473 li
407.575 230.283 408.713 232.459 408.713 234.331 cv
408.713 243.256 li
408.713 245.128 407.575 245.989 406.17 245.179 cv
cp
1 .866484 .240818 .0951247 cmyk
f
379.979 214.915 mo
379.586 215.284 379.34 215.915 379.34 216.771 cv
379.34 225.696 li
379.34 227.568 380.479 229.744 381.883 230.555 cv
406.839 244.844 li
407.291 245.104 407.708 245.175 408.075 245.112 cv
407.609 245.552 406.933 245.618 406.17 245.179 cv
381.214 230.89 li
379.81 230.078 378.671 227.903 378.671 226.03 cv
378.671 217.106 li
378.671 215.835 379.203 215.047 379.979 214.915 cv
cp
0 0 0 0 cmyk
f
398.665 235.483 mo
396.375 234.161 li
396.069 233.984 395.821 233.511 395.821 233.103 cv
395.821 230.657 li
395.821 230.249 396.069 230.062 396.375 230.238 cv
398.665 231.56 li
398.97 231.736 399.218 232.211 399.218 232.619 cv
399.218 235.064 li
399.218 235.473 398.97 235.66 398.665 235.483 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
391.009 231.063 mo
388.72 229.742 li
388.415 229.565 388.167 229.091 388.167 228.683 cv
388.167 226.237 li
388.167 225.829 388.415 225.642 388.72 225.818 cv
391.009 227.141 li
391.316 227.317 391.564 227.791 391.564 228.199 cv
391.564 230.645 li
391.564 231.053 391.316 231.24 391.009 231.063 cv
cp
0 0 0 0 cmyk
f
406.17 277.424 mo
381.214 263.135 li
379.81 262.324 378.671 260.149 378.671 258.276 cv
378.671 249.352 li
378.671 247.479 379.81 246.618 381.214 247.43 cv
406.17 261.718 li
407.575 262.529 408.713 264.704 408.713 266.577 cv
408.713 275.502 li
408.713 277.374 407.575 278.234 406.17 277.424 cv
cp
1 .866484 .240818 .0951247 cmyk
f
379.979 247.16 mo
379.586 247.53 379.34 248.161 379.34 249.018 cv
379.34 257.941 li
379.34 259.814 380.479 261.989 381.883 262.801 cv
406.839 277.089 li
407.291 277.35 407.708 277.421 408.075 277.358 cv
407.609 277.798 406.933 277.864 406.17 277.424 cv
381.214 263.135 li
379.81 262.324 378.671 260.148 378.671 258.276 cv
378.671 249.352 li
378.671 248.08 379.203 247.292 379.979 247.16 cv
cp
0 0 0 0 cmyk
f
398.665 267.729 mo
396.375 266.407 li
396.069 266.23 395.821 265.757 395.821 265.349 cv
395.821 262.903 li
395.821 262.495 396.069 262.308 396.375 262.483 cv
398.665 263.806 li
398.97 263.982 399.218 264.456 399.218 264.864 cv
399.218 267.31 li
399.218 267.718 398.97 267.905 398.665 267.729 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
391.009 263.31 mo
388.72 261.987 li
388.415 261.811 388.167 261.337 388.167 260.929 cv
388.167 258.483 li
388.167 258.075 388.415 257.888 388.72 258.064 cv
391.009 259.386 li
391.316 259.563 391.564 260.037 391.564 260.445 cv
391.564 262.891 li
391.564 263.299 391.316 263.486 391.009 263.31 cv
cp
0 0 0 0 cmyk
f
406.17 212.933 mo
381.214 198.644 li
379.81 197.833 378.671 195.657 378.671 193.785 cv
378.671 184.86 li
378.671 182.988 379.81 182.127 381.214 182.938 cv
406.17 197.227 li
407.575 198.038 408.713 200.213 408.713 202.086 cv
408.713 211.01 li
408.713 212.883 407.575 213.743 406.17 212.933 cv
cp
1 .866484 .240818 .0951247 cmyk
f
379.979 182.669 mo
379.586 183.039 379.34 183.67 379.34 184.525 cv
379.34 193.45 li
379.34 195.323 380.479 197.498 381.883 198.309 cv
406.839 212.598 li
407.291 212.858 407.708 212.93 408.075 212.867 cv
407.609 213.307 406.933 213.372 406.17 212.933 cv
381.214 198.644 li
379.81 197.833 378.671 195.657 378.671 193.785 cv
378.671 184.86 li
378.671 183.589 379.203 182.801 379.979 182.669 cv
cp
0 0 0 0 cmyk
f
398.665 203.237 mo
396.375 201.916 li
396.069 201.739 395.821 201.265 395.821 200.856 cv
395.821 198.411 li
395.821 198.003 396.069 197.815 396.375 197.992 cv
398.665 199.314 li
398.97 199.491 399.218 199.965 399.218 200.373 cv
399.218 202.818 li
399.218 203.227 398.97 203.414 398.665 203.237 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
391.009 198.818 mo
388.72 197.496 li
388.415 197.319 388.167 196.846 388.167 196.438 cv
388.167 193.992 li
388.167 193.584 388.415 193.396 388.72 193.573 cv
391.009 194.895 li
391.316 195.071 391.564 195.546 391.564 195.954 cv
391.564 198.399 li
391.564 198.808 391.316 198.995 391.009 198.818 cv
cp
0 0 0 0 cmyk
f
427.787 171.551 mo
485.364 138.309 li
486.652 137.564 487.697 135.568 487.697 133.851 cv
487.697 122.871 li
487.697 121.153 486.652 120.363 485.364 121.107 cv
427.787 154.35 li
426.498 155.094 425.453 157.09 425.453 158.808 cv
425.453 169.787 li
425.453 171.505 426.498 172.295 427.787 171.551 cv
.657221 .328313 0 0 cmyk
f
428.969 167.843 mo
428.549 167.843 428.255 167.455 428.255 166.807 cv
428.255 158.553 li
428.255 157.681 428.786 156.668 429.439 156.291 cv
483.71 124.957 li
483.878 124.86 484.037 124.815 484.181 124.815 cv
484.601 124.815 484.894 125.203 484.894 125.852 cv
484.894 134.106 li
484.894 134.977 484.365 135.99 483.71 136.368 cv
429.439 167.701 li
429.272 167.798 429.113 167.843 428.969 167.843 cv
.439979 .173587 0 0 cmyk
f
472.4 138.725 mo
480.5 134.049 li
481.134 133.683 481.649 132.699 481.649 131.853 cv
481.649 131.006 481.134 130.617 480.5 130.983 cv
472.4 135.659 li
471.765 136.026 471.25 137.01 471.25 137.856 cv
471.25 138.702 471.765 139.092 472.4 138.725 cv
cp
.147219 .0154116 0 0 cmyk
f
465.499 141.177 mo
465.499 142.023 466.092 142.367 466.826 141.943 cv
467.559 141.521 468.154 140.491 468.154 139.645 cv
468.154 138.798 467.559 138.455 466.826 138.878 cv
466.092 139.301 465.499 140.331 465.499 141.177 cv
cp
1 .866484 .240818 .0951247 cmyk
f
460.815 143.881 mo
460.815 144.728 461.41 145.07 462.143 144.647 cv
462.875 144.224 463.47 143.194 463.47 142.348 cv
463.47 141.502 462.875 141.158 462.143 141.582 cv
461.41 142.005 460.815 143.034 460.815 143.881 cv
cp
f
456.132 146.585 mo
456.132 147.432 456.727 147.774 457.459 147.351 cv
458.193 146.928 458.788 145.898 458.788 145.052 cv
458.788 144.205 458.193 143.862 457.459 144.285 cv
456.727 144.709 456.132 145.738 456.132 146.585 cv
cp
.147219 .0154116 0 0 cmyk
f
451.45 149.288 mo
451.45 150.135 452.043 150.479 452.777 150.055 cv
453.51 149.632 454.104 148.603 454.104 147.756 cv
454.104 146.909 453.51 146.566 452.777 146.989 cv
452.043 147.412 451.45 148.441 451.45 149.288 cv
cp
1 .866484 .240818 .0951247 cmyk
f
431.722 163.105 mo
434.45 161.53 li
434.857 161.295 435.188 160.663 435.188 160.12 cv
435.188 157.233 li
435.188 156.69 434.857 156.44 434.45 156.676 cv
431.722 158.251 li
431.314 158.486 430.984 159.117 430.984 159.661 cv
430.984 162.547 li
430.984 163.091 431.314 163.34 431.722 163.105 cv
cp
f
427.787 190.911 mo
485.364 157.669 li
486.652 156.925 487.697 154.929 487.697 153.211 cv
487.697 142.231 li
487.697 140.514 486.652 139.724 485.364 140.468 cv
427.787 173.71 li
426.498 174.454 425.453 176.45 425.453 178.168 cv
425.453 189.147 li
425.453 190.865 426.498 191.655 427.787 190.911 cv
.657221 .328313 0 0 cmyk
f
428.969 187.204 mo
428.549 187.204 428.255 186.815 428.255 186.167 cv
428.255 177.913 li
428.255 177.041 428.786 176.028 429.439 175.651 cv
483.71 144.317 li
483.878 144.221 484.037 144.175 484.181 144.175 cv
484.601 144.175 484.894 144.563 484.894 145.212 cv
484.894 153.466 li
484.894 154.338 484.365 155.351 483.71 155.729 cv
429.439 187.061 li
429.272 187.158 429.113 187.204 428.969 187.204 cv
.439979 .173587 0 0 cmyk
f
472.4 158.085 mo
480.5 153.409 li
481.134 153.043 481.649 152.06 481.649 151.213 cv
481.649 150.366 481.134 149.978 480.5 150.344 cv
472.4 155.02 li
471.765 155.387 471.25 156.37 471.25 157.217 cv
471.25 158.063 471.765 158.452 472.4 158.085 cv
cp
.147219 .0154116 0 0 cmyk
f
465.499 160.537 mo
465.499 161.384 466.092 161.728 466.826 161.304 cv
467.559 160.881 468.154 159.852 468.154 159.005 cv
468.154 158.158 467.559 157.815 466.826 158.238 cv
466.092 158.661 465.499 159.691 465.499 160.537 cv
cp
0 0 0 0 cmyk
f
460.815 163.241 mo
460.815 164.088 461.41 164.431 462.143 164.008 cv
462.875 163.584 463.47 162.555 463.47 161.708 cv
463.47 160.862 462.875 160.519 462.143 160.942 cv
461.41 161.365 460.815 162.395 460.815 163.241 cv
cp
1 .866484 .240818 .0951247 cmyk
f
456.132 165.945 mo
456.132 166.792 456.727 167.135 457.459 166.711 cv
458.193 166.288 458.788 165.259 458.788 164.412 cv
458.788 163.565 458.193 163.223 457.459 163.646 cv
456.727 164.069 456.132 165.099 456.132 165.945 cv
cp
.147219 .0154116 0 0 cmyk
f
451.45 168.648 mo
451.45 169.495 452.043 169.839 452.777 169.415 cv
453.51 168.992 454.104 167.963 454.104 167.116 cv
454.104 166.27 453.51 165.927 452.777 166.35 cv
452.043 166.772 451.45 167.802 451.45 168.648 cv
cp
1 .866484 .240818 .0951247 cmyk
f
431.722 182.466 mo
434.45 180.891 li
434.857 180.655 435.188 180.023 435.188 179.48 cv
435.188 176.594 li
435.188 176.051 434.857 175.801 434.45 176.036 cv
431.722 177.611 li
431.314 177.847 430.984 178.478 430.984 179.021 cv
430.984 181.907 li
430.984 182.451 431.314 182.7 431.722 182.466 cv
cp
f
427.787 210.272 mo
485.364 177.029 li
486.652 176.285 487.697 174.289 487.697 172.571 cv
487.697 161.592 li
487.697 159.874 486.652 159.084 485.364 159.828 cv
427.787 193.07 li
426.498 193.814 425.453 195.811 425.453 197.528 cv
425.453 208.508 li
425.453 210.226 426.498 211.016 427.787 210.272 cv
.657221 .328313 0 0 cmyk
f
428.969 206.564 mo
428.549 206.564 428.255 206.176 428.255 205.527 cv
428.255 197.273 li
428.255 196.401 428.786 195.389 429.439 195.012 cv
483.71 163.678 li
483.878 163.581 484.037 163.536 484.181 163.536 cv
484.601 163.536 484.894 163.924 484.894 164.572 cv
484.894 172.826 li
484.894 173.698 484.365 174.711 483.71 175.089 cv
429.439 206.422 li
429.272 206.518 429.113 206.564 428.969 206.564 cv
.439979 .173587 0 0 cmyk
f
472.4 177.445 mo
480.5 172.77 li
481.134 172.403 481.649 171.42 481.649 170.573 cv
481.649 169.727 481.134 169.338 480.5 169.704 cv
472.4 174.38 li
471.765 174.747 471.25 175.73 471.25 176.577 cv
471.25 177.423 471.765 177.813 472.4 177.445 cv
cp
.147219 .0154116 0 0 cmyk
f
465.499 179.897 mo
465.499 180.744 466.092 181.088 466.826 180.664 cv
467.559 180.241 468.154 179.212 468.154 178.365 cv
468.154 177.519 467.559 177.176 466.826 177.599 cv
466.092 178.021 465.499 179.052 465.499 179.897 cv
cp
0 0 0 0 cmyk
f
460.815 182.602 mo
460.815 183.448 461.41 183.791 462.143 183.368 cv
462.875 182.944 463.47 181.915 463.47 181.068 cv
463.47 180.223 462.875 179.879 462.143 180.303 cv
461.41 180.726 460.815 181.755 460.815 182.602 cv
cp
1 .866484 .240818 .0951247 cmyk
f
456.132 185.306 mo
456.132 186.152 456.727 186.495 457.459 186.071 cv
458.193 185.648 458.788 184.619 458.788 183.772 cv
458.788 182.926 458.193 182.583 457.459 183.006 cv
456.727 183.43 456.132 184.459 456.132 185.306 cv
cp
.147219 .0154116 0 0 cmyk
f
451.45 188.009 mo
451.45 188.855 452.043 189.199 452.777 188.775 cv
453.51 188.353 454.104 187.323 454.104 186.477 cv
454.104 185.63 453.51 185.287 452.777 185.71 cv
452.043 186.133 451.45 187.162 451.45 188.009 cv
cp
1 .866484 .240818 .0951247 cmyk
f
431.722 201.826 mo
434.45 200.251 li
434.857 200.016 435.188 199.384 435.188 198.841 cv
435.188 195.954 li
435.188 195.411 434.857 195.161 434.45 195.396 cv
431.722 196.972 li
431.314 197.207 430.984 197.838 430.984 198.382 cv
430.984 201.268 li
430.984 201.812 431.314 202.061 431.722 201.826 cv
cp
f
427.787 229.632 mo
485.364 196.39 li
486.652 195.645 487.697 193.649 487.697 191.932 cv
487.697 180.952 li
487.697 179.234 486.652 178.444 485.364 179.188 cv
427.787 212.431 li
426.498 213.175 425.453 215.171 425.453 216.889 cv
425.453 227.868 li
425.453 229.586 426.498 230.376 427.787 229.632 cv
.657221 .328313 0 0 cmyk
f
428.969 225.924 mo
428.549 225.924 428.255 225.536 428.255 224.888 cv
428.255 216.634 li
428.255 215.762 428.786 214.749 429.439 214.372 cv
483.71 183.038 li
483.878 182.942 484.037 182.896 484.181 182.896 cv
484.601 182.896 484.894 183.284 484.894 183.933 cv
484.894 192.187 li
484.894 193.059 484.365 194.071 483.71 194.449 cv
429.439 225.782 li
429.272 225.879 429.113 225.924 428.969 225.924 cv
.439979 .173587 0 0 cmyk
f
472.4 196.806 mo
480.5 192.13 li
481.134 191.764 481.649 190.78 481.649 189.934 cv
481.649 189.087 481.134 188.698 480.5 189.064 cv
472.4 193.74 li
471.765 194.107 471.25 195.091 471.25 195.938 cv
471.25 196.783 471.765 197.173 472.4 196.806 cv
cp
.147219 .0154116 0 0 cmyk
f
465.499 199.258 mo
465.499 200.104 466.092 200.448 466.826 200.024 cv
467.559 199.602 468.154 198.572 468.154 197.726 cv
468.154 196.879 467.559 196.536 466.826 196.959 cv
466.092 197.382 465.499 198.412 465.499 199.258 cv
cp
1 .866484 .240818 .0951247 cmyk
f
460.815 201.962 mo
460.815 202.809 461.41 203.151 462.143 202.729 cv
462.875 202.305 463.47 201.275 463.47 200.429 cv
463.47 199.583 462.875 199.239 462.143 199.663 cv
461.41 200.086 460.815 201.115 460.815 201.962 cv
cp
f
456.132 204.666 mo
456.132 205.513 456.727 205.855 457.459 205.432 cv
458.193 205.009 458.788 203.979 458.788 203.133 cv
458.788 202.286 458.193 201.943 457.459 202.366 cv
456.727 202.79 456.132 203.819 456.132 204.666 cv
cp
.147219 .0154116 0 0 cmyk
f
451.45 207.369 mo
451.45 208.216 452.043 208.56 452.777 208.136 cv
453.51 207.713 454.104 206.684 454.104 205.837 cv
454.104 204.99 453.51 204.647 452.777 205.07 cv
452.043 205.493 451.45 206.522 451.45 207.369 cv
cp
1 .866484 .240818 .0951247 cmyk
f
431.722 221.187 mo
434.45 219.611 li
434.857 219.376 435.188 218.744 435.188 218.201 cv
435.188 215.314 li
435.188 214.771 434.857 214.521 434.45 214.757 cv
431.722 216.332 li
431.314 216.567 430.984 217.198 430.984 217.742 cv
430.984 220.628 li
430.984 221.172 431.314 221.421 431.722 221.187 cv
cp
.147219 .0154116 0 0 cmyk
f
427.787 248.992 mo
485.364 215.75 li
486.652 215.006 487.697 213.01 487.697 211.292 cv
487.697 200.312 li
487.697 198.595 486.652 197.805 485.364 198.549 cv
427.787 231.791 li
426.498 232.535 425.453 234.531 425.453 236.249 cv
425.453 247.229 li
425.453 248.946 426.498 249.736 427.787 248.992 cv
.657221 .328313 0 0 cmyk
f
428.969 245.285 mo
428.549 245.285 428.255 244.897 428.255 244.248 cv
428.255 235.994 li
428.255 235.122 428.786 234.109 429.439 233.732 cv
483.71 202.398 li
483.878 202.302 484.037 202.256 484.181 202.256 cv
484.601 202.256 484.894 202.644 484.894 203.293 cv
484.894 211.547 li
484.894 212.419 484.365 213.432 483.71 213.81 cv
429.439 245.143 li
429.272 245.239 429.113 245.285 428.969 245.285 cv
.439979 .173587 0 0 cmyk
f
472.4 216.166 mo
480.5 211.49 li
481.134 211.124 481.649 210.141 481.649 209.294 cv
481.649 208.447 481.134 208.059 480.5 208.425 cv
472.4 213.101 li
471.765 213.468 471.25 214.451 471.25 215.298 cv
471.25 216.144 471.765 216.533 472.4 216.166 cv
cp
.147219 .0154116 0 0 cmyk
f
465.499 218.618 mo
465.499 219.465 466.092 219.809 466.826 219.385 cv
467.559 218.962 468.154 217.933 468.154 217.086 cv
468.154 216.239 467.559 215.896 466.826 216.319 cv
466.092 216.742 465.499 217.772 465.499 218.618 cv
cp
1 .866484 .240818 .0951247 cmyk
f
460.815 221.322 mo
460.815 222.169 461.41 222.512 462.143 222.089 cv
462.875 221.665 463.47 220.636 463.47 219.789 cv
463.47 218.943 462.875 218.6 462.143 219.023 cv
461.41 219.446 460.815 220.476 460.815 221.322 cv
cp
0 0 0 0 cmyk
f
456.132 224.026 mo
456.132 224.873 456.727 225.216 457.459 224.792 cv
458.193 224.369 458.788 223.34 458.788 222.493 cv
458.788 221.646 458.193 221.304 457.459 221.727 cv
456.727 222.15 456.132 223.18 456.132 224.026 cv
cp
.147219 .0154116 0 0 cmyk
f
451.45 226.729 mo
451.45 227.576 452.043 227.92 452.777 227.496 cv
453.51 227.073 454.104 226.044 454.104 225.197 cv
454.104 224.351 453.51 224.008 452.777 224.431 cv
452.043 224.854 451.45 225.884 451.45 226.729 cv
cp
0 0 0 0 cmyk
f
431.722 240.547 mo
434.45 238.972 li
434.857 238.736 435.188 238.105 435.188 237.562 cv
435.188 234.675 li
435.188 234.132 434.857 233.882 434.45 234.117 cv
431.722 235.692 li
431.314 235.928 430.984 236.559 430.984 237.103 cv
430.984 239.988 li
430.984 240.532 431.314 240.781 431.722 240.547 cv
cp
.147219 .0154116 0 0 cmyk
f
427.787 268.353 mo
485.364 235.11 li
486.652 234.366 487.697 232.37 487.697 230.652 cv
487.697 219.673 li
487.697 217.955 486.652 217.165 485.364 217.909 cv
427.787 251.151 li
426.498 251.896 425.453 253.892 425.453 255.609 cv
425.453 266.589 li
425.453 268.307 426.498 269.097 427.787 268.353 cv
.657221 .328313 0 0 cmyk
f
428.969 264.645 mo
428.549 264.645 428.255 264.257 428.255 263.608 cv
428.255 255.355 li
428.255 254.482 428.786 253.47 429.439 253.093 cv
483.71 221.759 li
483.878 221.662 484.037 221.617 484.181 221.617 cv
484.601 221.617 484.894 222.005 484.894 222.653 cv
484.894 230.907 li
484.894 231.779 484.365 232.792 483.71 233.17 cv
429.439 264.503 li
429.272 264.599 429.113 264.645 428.969 264.645 cv
.439979 .173587 0 0 cmyk
f
472.4 235.526 mo
480.5 230.851 li
481.134 230.484 481.649 229.501 481.649 228.654 cv
481.649 227.808 481.134 227.419 480.5 227.785 cv
472.4 232.461 li
471.765 232.828 471.25 233.812 471.25 234.658 cv
471.25 235.504 471.765 235.894 472.4 235.526 cv
cp
.147219 .0154116 0 0 cmyk
f
465.499 237.979 mo
465.499 238.825 466.092 239.169 466.826 238.745 cv
467.559 238.322 468.154 237.293 468.154 236.446 cv
468.154 235.6 467.559 235.257 466.826 235.68 cv
466.092 236.103 465.499 237.133 465.499 237.979 cv
cp
1 .866484 .240818 .0951247 cmyk
f
460.815 240.683 mo
460.815 241.529 461.41 241.872 462.143 241.449 cv
462.875 241.025 463.47 239.996 463.47 239.149 cv
463.47 238.304 462.875 237.96 462.143 238.384 cv
461.41 238.807 460.815 239.836 460.815 240.683 cv
cp
f
456.132 243.387 mo
456.132 244.233 456.727 244.576 457.459 244.152 cv
458.193 243.729 458.788 242.7 458.788 241.854 cv
458.788 241.007 458.193 240.664 457.459 241.087 cv
456.727 241.511 456.132 242.54 456.132 243.387 cv
cp
.147219 .0154116 0 0 cmyk
f
451.45 246.09 mo
451.45 246.937 452.043 247.28 452.777 246.856 cv
453.51 246.434 454.104 245.404 454.104 244.558 cv
454.104 243.711 453.51 243.368 452.777 243.791 cv
452.043 244.214 451.45 245.244 451.45 246.09 cv
cp
1 .866484 .240818 .0951247 cmyk
f
431.722 259.907 mo
434.45 258.332 li
434.857 258.097 435.188 257.466 435.188 256.922 cv
435.188 254.035 li
435.188 253.492 434.857 253.242 434.45 253.478 cv
431.722 255.053 li
431.314 255.288 430.984 255.919 430.984 256.463 cv
430.984 259.349 li
430.984 259.893 431.314 260.142 431.722 259.907 cv
cp
f
427.787 287.713 mo
485.364 254.471 li
486.652 253.726 487.697 251.73 487.697 250.013 cv
487.697 239.033 li
487.697 237.315 486.652 236.525 485.364 237.27 cv
427.787 270.512 li
426.498 271.256 425.453 273.252 425.453 274.97 cv
425.453 285.949 li
425.453 287.667 426.498 288.457 427.787 287.713 cv
.657221 .328313 0 0 cmyk
f
428.969 284.006 mo
428.549 284.005 428.255 283.617 428.255 282.969 cv
428.255 274.715 li
428.255 273.843 428.786 272.83 429.439 272.453 cv
483.71 241.119 li
483.878 241.023 484.037 240.977 484.181 240.977 cv
484.601 240.977 484.894 241.365 484.894 242.014 cv
484.894 250.268 li
484.894 251.14 484.365 252.152 483.71 252.53 cv
429.439 283.863 li
429.272 283.96 429.113 284.006 428.969 284.006 cv
.439979 .173587 0 0 cmyk
f
472.4 254.888 mo
480.5 250.211 li
481.134 249.845 481.649 248.861 481.649 248.015 cv
481.649 247.168 481.134 246.779 480.5 247.146 cv
472.4 251.821 li
471.765 252.188 471.25 253.172 471.25 254.019 cv
471.25 254.864 471.765 255.254 472.4 254.888 cv
cp
.147219 .0154116 0 0 cmyk
f
464.018 258.387 mo
464.018 259.986 465.141 260.634 466.526 259.835 cv
467.911 259.035 469.033 257.091 469.033 255.492 cv
469.033 253.893 467.911 253.245 466.526 254.044 cv
465.141 254.844 464.018 256.788 464.018 258.387 cv
cp
0 0 0 0 cmyk
f
454.319 264.063 mo
454.319 264.909 454.913 265.253 455.646 264.829 cv
456.379 264.406 456.973 263.377 456.973 262.53 cv
456.973 261.684 456.379 261.341 455.646 261.764 cv
454.913 262.188 454.319 263.217 454.319 264.063 cv
cp
1 .866484 .240818 .0951247 cmyk
f
449.635 266.767 mo
449.635 267.613 450.23 267.956 450.963 267.533 cv
451.696 267.109 452.291 266.08 452.291 265.234 cv
452.291 264.388 451.696 264.044 450.963 264.468 cv
450.23 264.891 449.635 265.92 449.635 266.767 cv
cp
.147219 .0154116 0 0 cmyk
f
444.953 269.471 mo
444.953 270.317 445.546 270.66 446.28 270.237 cv
447.013 269.813 447.607 268.784 447.607 267.938 cv
447.607 267.091 447.013 266.748 446.28 267.171 cv
445.546 267.595 444.953 268.624 444.953 269.471 cv
cp
1 .866484 .240818 .0951247 cmyk
f
431.722 279.268 mo
434.45 277.692 li
434.857 277.457 435.188 276.826 435.188 276.282 cv
435.188 273.396 li
435.188 272.853 434.857 272.603 434.45 272.838 cv
431.722 274.413 li
431.314 274.648 430.984 275.279 430.984 275.823 cv
430.984 278.709 li
430.984 279.253 431.314 279.502 431.722 279.268 cv
cp
.147219 .0154116 0 0 cmyk
f
264.172 306.275 mo
233.007 288.282 li
231.095 287.178 231.334 285.249 233.543 283.974 cv
263.635 266.601 li
265.843 265.325 269.185 265.187 271.097 266.291 cv
302.262 284.284 li
304.174 285.389 303.935 287.317 301.726 288.592 cv
271.634 305.966 li
269.425 307.241 266.084 307.38 264.172 306.275 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
265.057 294.896 mo
266.431 295.689 269.091 295.544 270.75 294.586 cv
300.841 277.212 li
301.597 276.775 301.779 276.382 301.784 276.308 cv
301.773 276.285 301.671 276.14 301.377 275.971 cv
270.212 257.978 li
268.838 257.184 266.178 257.331 264.521 258.286 cv
234.428 275.66 li
233.672 276.097 233.491 276.491 233.486 276.565 cv
233.497 276.587 233.598 276.732 233.893 276.903 cv
265.057 294.896 li
cp
267.429 298.952 mo
265.907 298.952 264.437 298.625 263.288 297.962 cv
232.123 279.969 li
230.739 279.17 229.946 277.929 229.947 276.563 cv
229.947 275.036 230.935 273.589 232.659 272.594 cv
262.75 255.221 li
265.535 253.613 269.504 253.48 271.983 254.912 cv
303.147 272.904 li
304.53 273.703 305.324 274.943 305.323 276.309 cv
305.323 277.837 304.334 279.284 302.611 280.278 cv
272.519 297.652 li
271.026 298.514 269.192 298.952 267.429 298.952 cv
cp
0 0 0 0 cmyk
f
303.543 265.282 mo
303.543 265.282 li
303.543 254.529 li
279.431 254.516 li
271.097 249.704 li
269.185 248.6 265.843 248.738 263.635 250.014 cv
255.86 254.503 li
231.726 254.489 li
231.726 265.549 li
231.671 266.296 232.088 267.018 233.007 267.548 cv
264.172 285.541 li
266.084 286.645 269.425 286.507 271.634 285.231 cv
301.726 267.857 li
303 267.122 303.615 266.169 303.543 265.282 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
267.635 248.965 mo
266.235 248.998 264.783 249.352 263.635 250.014 cv
255.86 254.503 li
231.726 254.489 li
231.726 265.549 li
231.671 266.296 232.088 267.018 233.007 267.548 cv
264.172 285.541 li
265.091 286.071 266.34 286.312 267.635 286.28 cv
267.635 248.965 li
cp
level3{
gsave
clp
[39.3914 0 0 39.3914 233.7 251.361 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.3914 0 0 39.3914 233.7 251.361 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
234.458 254.491 mo
231.726 254.489 li
231.726 265.549 li
231.671 266.296 232.088 267.018 233.007 267.548 cv
234.458 268.385 li
234.458 254.491 li
cp
.147219 .0154116 0 0 cmyk
f
264.652 285.775 mo
266.301 286.482 268.688 286.443 270.617 285.708 cv
270.617 273.151 li
264.652 273.151 li
264.652 285.775 li
cp
.657221 .328313 0 0 cmyk
f
264.172 274.521 mo
233.007 256.528 li
231.095 255.425 231.334 253.495 233.543 252.221 cv
263.635 234.847 li
265.843 233.571 269.185 233.434 271.097 234.537 cv
302.262 252.53 li
304.174 253.635 303.935 255.563 301.726 256.839 cv
271.634 274.212 li
269.425 275.487 266.084 275.626 264.172 274.521 cv
cp
level3{
gsave
clp
[61.7032 36.7866 -36.7866 61.7032 241.135 238.731 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[61.7032 36.7866 -36.7866 61.7032 241.135 238.731 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
301.726 254.723 mo
271.634 272.096 li
269.425 273.371 266.084 273.51 264.172 272.405 cv
233.007 254.412 li
232.581 254.166 232.267 253.878 232.053 253.565 cv
231.396 254.623 231.694 255.771 233.007 256.528 cv
264.172 274.521 li
266.084 275.626 269.425 275.487 271.634 274.212 cv
301.726 256.839 li
303.442 255.848 303.963 254.464 303.216 253.377 cv
302.917 253.859 302.418 254.323 301.726 254.723 cv
cp
0 0 0 0 cmyk
f
292.081 268.12 mo
292.081 268.923 291.517 269.899 290.822 270.301 cv
290.126 270.702 289.563 270.377 289.563 269.574 cv
289.563 268.771 290.126 267.795 290.822 267.394 cv
291.517 266.992 292.081 267.317 292.081 268.12 cv
cp
.147219 .0154116 0 0 cmyk
f
296.13 265.782 mo
296.13 266.585 295.567 267.561 294.872 267.962 cv
294.176 268.363 293.613 268.038 293.613 267.235 cv
293.613 266.433 294.176 265.457 294.872 265.056 cv
295.567 264.654 296.13 264.979 296.13 265.782 cv
cp
f
300.18 263.444 mo
300.18 264.246 299.617 265.223 298.921 265.624 cv
298.226 266.025 297.663 265.7 297.663 264.897 cv
297.663 264.095 298.226 263.118 298.921 262.717 cv
299.617 262.315 300.18 262.642 300.18 263.444 cv
cp
f
266.015 263.366 mo
251.431 254.946 li
250.537 254.43 250.649 253.527 251.682 252.931 cv
265.763 244.801 li
266.797 244.204 268.361 244.139 269.255 244.655 cv
283.839 253.075 li
284.734 253.592 284.622 254.495 283.588 255.092 cv
269.506 263.222 li
268.473 263.818 266.91 263.883 266.015 263.366 cv
cp
.657221 .328313 0 0 cmyk
f
267.411 256.316 mo
265.393 255.151 li
265.269 255.08 265.285 254.955 265.428 254.873 cv
267.376 253.748 li
267.519 253.665 267.736 253.656 267.859 253.728 cv
269.877 254.893 li
270 254.964 269.985 255.089 269.842 255.172 cv
267.894 256.297 li
267.751 256.379 267.535 256.388 267.411 256.316 cv
cp
.147219 .0154116 0 0 cmyk
f
251.431 254.946 mo
251.472 254.971 li
251.682 254.826 li
265.763 246.696 li
266.797 246.1 268.361 246.035 269.255 246.552 cv
283.797 254.947 li
284.623 254.356 284.666 253.553 283.839 253.075 cv
269.255 244.655 li
268.361 244.139 266.797 244.204 265.763 244.801 cv
251.682 252.931 li
250.649 253.527 250.537 254.43 251.431 254.946 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
349.029 355.053 mo
317.865 337.06 li
315.952 335.955 316.192 334.026 318.4 332.751 cv
348.492 315.378 li
350.701 314.103 354.042 313.964 355.955 315.068 cv
387.119 333.062 li
389.032 334.165 388.792 336.095 386.583 337.369 cv
356.491 354.743 li
354.283 356.019 350.942 356.156 349.029 355.053 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
349.914 343.673 mo
351.29 344.468 353.949 344.32 355.605 343.364 cv
385.698 325.989 li
386.454 325.553 386.635 325.158 386.64 325.084 cv
386.629 325.063 386.528 324.918 386.234 324.748 cv
355.07 306.755 li
353.695 305.961 351.036 306.106 349.376 307.064 cv
319.285 324.438 li
318.529 324.874 318.347 325.269 318.343 325.343 cv
318.354 325.364 318.456 325.51 318.75 325.68 cv
349.914 343.673 li
cp
352.287 347.729 mo
350.764 347.729 349.294 347.402 348.144 346.739 cv
316.98 328.746 li
315.597 327.947 314.803 326.707 314.803 325.342 cv
314.803 323.814 315.792 322.367 317.514 321.372 cv
347.607 303.998 li
350.392 302.391 354.362 302.259 356.839 303.688 cv
388.003 321.682 li
389.386 322.479 390.18 323.721 390.18 325.085 cv
390.18 326.614 389.191 328.061 387.467 329.056 cv
357.375 346.43 li
355.883 347.292 354.049 347.729 352.287 347.729 cv
cp
0 0 0 0 cmyk
f
388.4 314.06 mo
388.4 314.06 li
388.4 303.307 li
364.289 303.293 li
355.955 298.481 li
354.042 297.377 350.701 297.516 348.492 298.791 cv
340.716 303.28 li
316.583 303.267 li
316.583 314.326 li
316.529 315.073 316.945 315.794 317.865 316.325 cv
349.029 334.317 li
350.942 335.422 354.283 335.283 356.491 334.009 cv
386.583 316.635 li
387.857 315.899 388.471 314.946 388.4 314.06 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
352.492 297.742 mo
351.092 297.775 349.639 298.128 348.492 298.791 cv
340.716 303.28 li
316.583 303.267 li
316.583 314.326 li
316.529 315.073 316.945 315.794 317.865 316.325 cv
349.029 334.317 li
349.948 334.849 351.198 335.089 352.492 335.058 cv
352.492 297.742 li
cp
level3{
gsave
clp
[39.3914 0 0 39.3914 318.557 300.138 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.3914 0 0 39.3914 318.557 300.138 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
319.314 303.269 mo
316.583 303.267 li
316.583 314.326 li
316.529 315.073 316.945 315.794 317.865 316.325 cv
319.314 317.162 li
319.314 303.269 li
cp
.147219 .0154116 0 0 cmyk
f
349.509 334.553 mo
351.159 335.26 353.545 335.221 355.474 334.484 cv
355.474 321.928 li
349.509 321.928 li
349.509 334.553 li
cp
.657221 .328313 0 0 cmyk
f
349.029 323.299 mo
317.865 305.306 li
315.952 304.202 316.192 302.272 318.4 300.998 cv
348.492 283.624 li
350.701 282.349 354.042 282.211 355.955 283.314 cv
387.119 301.308 li
389.032 302.412 388.792 304.341 386.583 305.616 cv
356.491 322.989 li
354.283 324.265 350.942 324.403 349.029 323.299 cv
cp
level3{
gsave
clp
[61.7032 36.7866 -36.7866 61.7032 325.992 287.508 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[61.7032 36.7866 -36.7866 61.7032 325.992 287.508 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
386.583 303.5 mo
356.491 320.873 li
354.283 322.148 350.942 322.287 349.029 321.183 cv
317.865 303.189 li
317.438 302.943 317.125 302.655 316.91 302.343 cv
316.252 303.4 316.551 304.548 317.865 305.306 cv
349.029 323.299 li
350.942 324.403 354.283 324.265 356.491 322.989 cv
386.583 305.616 li
388.299 304.625 388.821 303.241 388.073 302.154 cv
387.773 302.637 387.275 303.101 386.583 303.5 cv
cp
0 0 0 0 cmyk
f
376.937 316.897 mo
376.937 317.7 376.374 318.677 375.678 319.078 cv
374.984 319.479 374.419 319.153 374.419 318.351 cv
374.419 317.548 374.984 316.572 375.678 316.171 cv
376.374 315.77 376.937 316.095 376.937 316.897 cv
cp
.147219 .0154116 0 0 cmyk
f
380.987 314.56 mo
380.987 315.362 380.423 316.338 379.728 316.739 cv
379.034 317.141 378.47 316.815 378.47 316.013 cv
378.47 315.21 379.034 314.234 379.728 313.833 cv
380.423 313.432 380.987 313.757 380.987 314.56 cv
cp
f
385.038 312.221 mo
385.038 313.023 384.473 314 383.779 314.401 cv
383.083 314.803 382.52 314.478 382.52 313.675 cv
382.52 312.872 383.083 311.896 383.779 311.494 cv
384.473 311.093 385.038 311.418 385.038 312.221 cv
cp
f
350.872 312.144 mo
336.289 303.724 li
335.393 303.207 335.505 302.305 336.539 301.708 cv
350.621 293.578 li
351.654 292.981 353.217 292.916 354.112 293.433 cv
368.696 301.853 li
369.59 302.369 369.479 303.272 368.445 303.869 cv
354.364 311.999 li
353.33 312.596 351.767 312.66 350.872 312.144 cv
cp
.657221 .328313 0 0 cmyk
f
352.268 305.094 mo
350.25 303.929 li
350.126 303.857 350.142 303.732 350.285 303.649 cv
352.233 302.525 li
352.376 302.442 352.592 302.434 352.716 302.505 cv
354.734 303.67 li
354.858 303.741 354.842 303.866 354.699 303.949 cv
352.75 305.073 li
352.608 305.156 352.391 305.165 352.268 305.094 cv
cp
.147219 .0154116 0 0 cmyk
f
336.289 303.724 mo
336.33 303.748 li
336.539 303.604 li
350.621 295.474 li
351.654 294.877 353.217 294.813 354.112 295.329 cv
368.655 303.725 li
369.479 303.134 369.523 302.33 368.696 301.853 cv
354.112 293.433 li
353.217 292.916 351.654 292.981 350.621 293.578 cv
336.539 301.708 li
335.505 302.305 335.393 303.207 336.289 303.724 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (banner_on_blue_bg_14.eps)
%%CreationDate: 1/17/2019 4:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",+G@)<"dsqA2cR81t\MR3'[MMJC>rEjk"B$k3(u'RnZ&*>#r*K=X1FfFW[MNDu2R`s9X]B!io:7)i`f3Uj[+FU8%P%Flf1Ld-
%R&*g=d^50O(fkA$p\cVWh73!^o<peUjXaWED*rKqpWJ;l>Bl/&dc]NHe[9ktoXN]rD%6?dp2F.$GPd$O>,h?oUK;cp3.P?SV*E\i
%DZ?n<V;#Z)_)9'+]c2.+mBAf7DN%1_=edXp?+Tge&?^Tdn3-f#Ze+Q8[b=r)ICln4%)3>;(O)30CpunZW&i^6`u7rbrpa6qc!![h
%]9_n(3kTH;?hZ-uUVV0D`n,=UG"X?X^Hdf4Y3gUV/H]<2GdY;rY0L?jHt`<SlYX:-Yj&CgDRWC[K>sk=mm0+0$BS<Ha&9%Qh`1"`
%=@5\X/pKIh?,@fRQ<p3A2ab1!.;<lYe<23Q8b_9^,-C/*+(\*[_tQXB/6V='>?`ttLVY`*>04)/B7jQaVf%%BXAC3W=9e_fj2U"j
%GUCSK.sK^f-f)e@c)Ad?Cd,I3LO:^\S+WVf(eB<cBPU)jngTX]4(XIjC0FZkdcmWt%`9a!M^Yn0B;b^[>3Tb5d:s1Oi<=k]G3=??
%?k1B_Qj`iX\#8'Ui*ENB_FDst4r`@FrDpPR.#VFRFrNtfC7!C*c`tq9*4/3iV>B"H*8S#c-h$Wko_:l8TCuY@$M8OLT<rr,rV'8g
%_mV_p6g0iAl'-;AZqK%f:'*+l9=ghFL+!iG_'2;+/e7ao9T@YVc9\A;[d!n43/5^kc'(Gk'hoUu.!b09RSidCLG'^][a=`qW8/-;
%f8\VObGZ[\/&0m%pXhJg4l5K^3nSY2=7Y8k.og:NI;4a="'TKn\d!fYGH(/ZLh=!uJ#8(KNe>ZlO3c@Vpsq:leMQete&5TfPPlDS
%F?-tWEA3mBi$ZR]ClX/$*%).`TtZS5HlqtTN"P%gbi\ei%H$,#Auere>IB?T<ic!g[>K7H&:Y-Va.^\o&2St_]80IU<LMBnh37ep
%Q\sZp'/%<Ab_GN%B?Z+t'!5`[@AE<0o3e?_RG':)K3aH'_Ire"NP]<ZMKK[b)B4CVe964l?Xp_;Y,kE%%58_Z%A,@N(ufaKPc4/S
%VcdB4Y/4gp.;M(^!38;a*P4O9?4<+?_Yu5.[Lo.:-oR0gjm4oiE;0XD@2m0VZ`[^Q@iOqU5@FX3*T/`W4FW"1Qjqf+cYP9Q\Zj@j
%28FPG>+j"G8eOM3WlY#XZa%dhID]77)F0R#<F^5bAW'u,=i;EE_$15b`<OcPXQAe]Ca2,R2Fd#b7b06Z@XQ0XfKcrO:q;rbXS^X5
%(o7U\(.9D2N[i@GL(T-,,[tRmn$Dkq^1VY%SO\q]"!cO?WfPiOrE8Zl!;8MOj-=6jPu0FYHe(KaLlhTQ.7^_:>m$FOfc/0ld94jZ
%@$E;+5X^HNGskA9k!u0uqDoN(XHVjC\if6j;-d%1EG&<+]2[B>qSQC[.Wt`')!n0aQ2Oi$q]*;T5IfLWfiQQOqf?':3I57dT#X$A
%T"M\Us+5e"'YUfe8qh\R?J-E*?E:?7U0%%iYHuR&/,RfV+6W5TLA9!4Q[KXAfIODXYc=!0K\e^1E;=c3>O]i34+HfO$LfKI-GAF#
%kIgHE]_bS9g]_'!<!.@7G@-qm]D0SL9B/5'Ff>T5JhLK2J\1]h0Clm^J04rE7&#t`IJ:]$pOLI)e.L\[_0;O7\50W)[3!FVI?cs9
%@<Xs)^g.r5W3d,2$Z"PR_\q9Y*ofHP&^`roklH)1^C@10C%;O#c'hMks8?r0oGTSgZ4#DGI+q>VL*RA^BsYDJ^GtX[/s!=D)K![e
%CfB^Hp-'2(,3`Q;Ps=0Yc^8NHm(oeCU#EP)KbikaGl7!2im_\KP;;0r:R%(#>pWAD1CTH;rd87?A.uCcKQ[q"9T38%[N.b[bQF&L
%PKec#`sQ61i!TWY2YJ#DNd\cZkNr#Gf<j2Gb$3N]-s$Oc"<L;J]Hd-)Cr.a.c%N5U[BQN2G]2'IqdU^E>qFH%qFJHokBLD)AC;GJ
%9o1S)Ym>*KP2n/SmJ1Li<.8(BiHW89%7Q270VSZZ*+.J^Hsmp=qT^i#XQS\HXCiD,8-fWuMSR+^K:;n,?qqo8Cq;[Jh.%]kVRoMr
%[%-QEjFA>'<,=i5m.F%8T6ppe'?Wg5#pJ=s(0tfs$DOUoQ5HOq'mnch%R`rL[b8!<P7sF-lgPe&BJ'W/4(2:8Z'V0"82Sb>1L>Sj
%6;t<=fKo^'`P>0BJuLMCEkhMkkQ743$aLCI>I"Y'F#!+47DonM<!h2feR0jMj%?&l1K?X%^h*.[nhHj$-Vd\.#L+uN2Q^Z4Yq]iH
%NV*@"FmFU>&)LG)lNPFBi[\<[Ul6)lU%r"BF<(cgQ"D!I0;!Mulnc=Qf>1[(*;E#B7i@3qaAim!cC2e`%3KeSS\pOf4X;+p0Pdr0
%qLQXTgao5kP@2ejEG%CFbTg'jRJIkhET&2:'VboQjTR(HY=jm7'?6.Y8sJe.Qia?`4b9&Wc]f"YmkBJK&d3TREDL[hR-muYf8[Jf
%c[N'&0&#[CJM_aJK&Yg<5k"bP6Q2%b7^)tl,*@j*(E4%VSfj"I/2N22'PoRc>aWsW?6r;ollsD?Y[&N/9fC$P?!*UL/>A"u;*s)"
%:($1c`Wgh9""ZW%fK?Lgr('fm15KJrOG7#(@r2aS5=5%LkSJ5a2N:;Bj)FA(B7pj(HJn-6.Q:``c<$8@`Z,+%0Xd,g>#rR$1<HDK
%EUnN%YE*"dR)i_I#r8=]Bb&QRCHiUK32Y%g*^^RW:5<=4oa>-j(RS9=>e\p85DY'8c`U2er-q!QaLloS'IE0TEm?>lc@irG'f$,V
%,t(ZW"b]4SYQU[91+#3M'1CIEE?EM4%H,o>n\E>5O6clrX8N>>"Xc=PGJhlLc&H+_QlKqJ&G:Z^aY\s<CD=i\Qm,"fiZ\H<F2R@e
%a8-s_R)"/0.UL)j<3Og(""kC.q+mSq\Zd97To6pDF$,P*SBj^-L3I5T*X%c3?m+S4;2#Q)S6]O%MQ4ojh+dL7F,df)37!=+)VE!.
%"fYBgWe2*!d+&,'Wtr,#W72PD),rh84he54N\H%<cH&3Z&J,XE^G4-P5SM`q,FV+G5[EGD#/OJ-`Xm9iEKALt_2#P?FW"jIl;.1Y
%@m<C]+4W[&G-6Gfb%m#NXni$r!9u&&?Y.D$<CGISflgrHqn0,gG[IAg4g-2tI.aP*\o3K3d_,.54eUmDYNOped@[&lo;4S#fk_Ed
%S_/OPj"GOINiJ<7SaIoqH<TILaS:A^]U7r(e78!8.>.d"6o'd,`^JQa]9rjHBKhNN5fa$fmY]AX5U;h1`CE,nNR%A]amd19`MH;!
%#''!XV@IiEj>4'eg+8=j1d+Y`+Pj(ST(>"oH#1KaMOh*qNGSZ6qb5$nlQP>+HlP,P_@]96(8K+9G"gW%C^*;u!5I]E*iFHT$lQQ!
%6^NW60)QNU$Xt`K+WG0_:UYfWk>u6sT.o8ug+%q%YS5^b8)K?)a>$(Eo5RRRJ^>aLIh"fes-Pk.BCQ/2)K@W*MF"%bQ"VG4Yi@,s
%WI0GW29m*e9pr=$9PW?=^i56($]`#Q!?6N>D(ME-:)\qU=cWjZ:frAs":<KYFWFs(C+YU@a3hk[Ll%)I:Q'")-<qU+7OT`hb8ae&
%PskLuP*tgB@ou$A4B,\3=FWb?gWq\L^J6\ecAmFB[?0`"8X:O=#2'_RK,1ob%RG;MA6rZ-->kc(#,i(\(0[,nKXG9A1sp1PJ"-aD
%At+(p;jQ[+BHpFY.%;#b9LN>o9S^he!_Z(=&UEM@1RT(g!fM,',TN#@<tMAP'id;Akg&S@Ml86I\RdH*`WZFiW!bIK=qC*M2Ti$6
%6*$g.+X3d4i<1ql'7oXZ(XQ)cL=sG.VsGV\7>aNe@I!a*7nR0SpY#0mi%)eSUdUpE@YCNK#W'340<4]\:U1@:6W#q'qSs;%,L.pe
%1Z-N%#r=]$cO"J6=bND6(`&kRQpg#)@!2^qBouQ&%&cal%#M(9%(_Q%Jsi@D>E]FDVOsoSSB89:A/^?10m,DZ^t:V&ioRB!"ehRs
%OtJqVmRY5MC6g06KhjNK=__In7N)kd2,T_1_`0/i0b.DYQ%ZAB,Wqk=3)ZgZ?U,,INehXRAh!3r1I>$l0nKrmMJSM8]*jcug&R8W
%kKi`:it]]l1WCM=-a1CDQ:VZdZQc$;c!&7oDlVHAM2R`o9/$bO.HLJbLrZ`oO_q*&86$Nfa4R#NCj6JpbG@"W3lDfj=$cjWl]1,k
%32GnfQp-0VUe?VKiDdEWUl7Rd'E`u,c#cWL'["o+0,A,<#&J8hFqLX..oA")n3G"8Opt>83j<eS$hOg>(P8\UECFk`Tr=m'i&8Z=
%\130.3Eeg%kt7!U_D@+,q!7](_`Ujm,S[Ki%XK8qOE3WVQSd%$1(88u2$59m^p0j*1&&+e(YjO6ATM"7hr3b"C0r6uM"Ldm?kLt0
%fJ"LsV"%m?#`$[bMS83l5oeNP-;Ti@1hOA(\Kd:]WG&Z<BU_j$;TAWN(\B0sc87aZ:"noXYbQuN#@n9[3-cXJ`=t,%IR,$9HGih9
%"ckUJfR#MjP'hcp*;.XjC_r778r?]),p_BL0Y^%DkZ-8N^]Rac1h*+7bLe%A#J28L-]-M/7&cU@@`j)u<SI\('gdLDp66@SP^T7)
%G$82Pp&SZk*.2dK_(6N4FQ28Z_MK83_-s($aj4ZbJ"CX%F*ZPd(!7pko$I4]rNL8_B53<gaXWh^"$S)[JLusX.OK&\S"AV-#f:RM
%B%S_J2XZc8,K0q8!"h,]n"t`iJ^JP5"(ObB+ebf%Yg"[L8;tA[edNm[7Ju*)io5@b9ZZ3uA.s_.9YP9N!2;T@JjMlS-RNj:coKce
%CDF0WN(HJu;M`M@O_LOa[=-JRc@fIo-D1heZeFsG=D=?K6t%&*&W03bf&EXV(P^dC!XX>M<-1KRU5Zo((Mp^F""#?MHPN8!EB+t:
%&s-O\#P]]Q**pnp[9aA3\;nK;@p$ZoDA9@6F,bTsZ4Zd!V9\=Z4L3A[Jc_'G;CH$A>n)/c)AQ)k\.)aqTLt@OZ4u>ETSirJAcoq!
%3?j<9FO]e^NiFU'X-C+hTP:C+#\^5`PuKD-KTQmFF7>-!\h"#AUq[^?PHG@,ULdtej0.b<nIQk[0N0`%PaEUk;JbA;fu7((SoSL6
%QWld&#su`NKl&RO:+\b<=83uCN#I@Zfgf"o\TpZCIL._@AJ(YgYm/`BahO0dQNBaA7-<,LAjr/)ig3me]?'2]WNjGal>H`iMqBOt
%mZTA9$"8qV!buf9X>1gJR3Is`+e56=,as`r`kC#H&[j9/[h6]=.j)2.1AA+E3uVkAk;/s'o#ST`(MC@AUEFPF,+^qk5U-Ii*K<Wi
%Asj=pW2q0X7\*#Pj%4Aejj--aB-j#a3G5Po=!0!Y,3/rjiJU-*6BCo!Lf@TUXSY`#2M5hc<d5tO5)C=iNmp%`L][_DNCk0ME!8@A
%To?=3OD?F^Cmhk]K"GQuN*dS!$1&io3%CE=Rd8A_>ePr&b6Z!UbIWo^_ZYgm`]XE49u%S^C[-jBa4\Cab>lGToU7Z*Tuq5lZ&/"N
%8B-gVZ]4pOa@<QhV6E[?@,e?uD(.WAYRB?H#CbedEiP](guFuiCaLS5=cblhbf"m18Ks.%dmYV'I2k3a7i)tm/e[p(SC#r5:GtME
%M/55oEoW1FC['_:T)XLac^Qe-dcLQXA'>N&j$&[Lk9'SZ,+HQ^qb5$.P$Iun)YY4q?_2h\prf"=i%Ffm9/UZ)I<i7:H+(cT\NHsI
%I(O,7c#TT9CZ3S<r,&ikN2JAf^A_s#s/eT%gHXW27N^j'mIoc9"H20EGNk%A=+.TOe&.@QY5J!NrT<KbF\gu:-\ME_a_#J+J*"/)
%T[hq8QX4c[m1T<$7).S2XaDjGm>G\Jm,:!49Ljkn!>"t^JqjHcg$n:<;ug10fkNI?UIiUfcH5H&GMYMuO.(j=FDk3u\aKI2h&Q(m
%Sc?*%V:U&Yhuhfi;"(0c#Moj'Zf/V6r,*JKH\q]/\bl[q]$S=?2LKG$MF-"eIX*CZFrLN<.W?tf'X)ebYI4+u,GG7RR$tkVKCs8m
%W,B&(%C(.&i7/E&Dj=F-p"l>.DZ9k.c\ftGJZWgbf,,ogHN*gA%MqLq\n7BDJ-+@/=Ft'?FbkL%4(C_5UQ;tNg`?l"@$E^%VC'72
%%*DAVDUfREQ7C^6Y;Q7NhU,VP+nZ2Vg*/b)^^I(R]2Pjmq9SS;^Y9VI7l/PQpH-p@M?qulph\>gQ!$uRQKCY.R2@uc)-pb4%sf[n
%@oTJEEaTh<rgg0"#<)j^::&^3rb"3*k9@`WUYG/U$lULKSS"iV3#s'+G5D1*%/S^T#Ykr%WUL@To*d?+\faO=Z1u/dU2G*fT[`g9
%Fg8A8M.tH\oNq8/<R%bEL)D^*8$kgF`dC*gK#*7CkeGgcH.?_FO,Fq.i%r_f25LA4ArPng9qn_",BQ3`$A5,"/uo?e*S)@LQRou(
%G`+R/E!6b.=<jM]I`oo:9g29Eoi;;ObnskL1!fQ#%019!3dXf$&e=P_Vq6Maffne^g'jeAna<W7eE:,R7#Rm\B$QrQ;`6]eGWVpV
%]aOU=`QtTc=+2sM;Pg8mlmIETWrr-E%I2qfr/a"u/M>hJ%_m'jId!?I^Or5"TcU@hVr6OO&gu\D9TDuu25nB.b:@9QUJtr5q<dd=
%h]?%uc#BO*QW!af(JDK*![ocoU^Eru;1f*;ZW*j@(I(aE+W6O6c_=s>TNe0='h/Lna-.%5!iZO+7]C:V/IdjQae4PDbGO>cJtBk[
%]2f)5ou_2Rh5\:9ZpJ!'Fk_ELZ\)$>EGX8#E"0>ufMtI"]5ECILs]YXHlsQPVUMnWa*.T_!ibJ7YPdO9:?ZGq%[FE(r:YsC<jQfm
%>Ggr*d'$8Tr#7$W?6iTta5218c@o>\hQp9j!sKC2GmYs"+9bp`;MC^C=q+A88YHpb)E`+Ie(L-\"sfD(ToSWfL-`TbF6VZK*^)XA
%LIV?j'hVJP<:q.ll?]D\%8@?B4Dd[1_j5fa?m#oJdjS+bMp$$ahp2"88P3NK<p?kj>p`9%jKf?BphIraK0Q\dPb:GD%]IXJ^=B0/
%CY"_\AgAUeF<s5H23"GIaA\Y-)C=oTTbL>o.=%"[8he_o1ad8rTI[e9gddB&,q:*r%3a89[j3L/rrP_T,dsrjc;ts1!:UKZ8k=^S
%f3*l.]CHos[R-m/iF333OqZIKn;Y3d:8[(Ln3atYf:ZRfN,.s3ht(.2!IeH#:BDT9qjJ=IFg'p.U[]g?i;&u-\Xk$:[pI=E.UuBg
%:Jdc-9:h;OR2hW2Sh-I,Set7X\HjLu1Rmd>OA_V^qdVttSQlONq37Pg2&DEC$2CAa-O,MoUBj-d@cYLqZgef@/OnGl`gD`=)dO<<
%/&1WEV9p$+)kQ`+4ukoc[EMTEV+N9BZ/eC]9(ZY7ATD=eA[6P9H/e.n6_,Ta,oA47=n0N:9;Nh%.4TJ=1_EReVZS?0;Z]hsorV6*
%Z!/(WC=(+h%1'#1Q$(h?9cMr&3Zq.h:-/VVC>fJsY+aS[^&cZk9KYJiec:25=:Up:]).E)</+Kgh1?&!?#!TT_%)SZH[m@AeS/Te
%9#7Q5UPq_<Q.5]'j'oZ:V&$m6Jbgu?#oYThJjp@Z6BRoI!+8&AXMYH7DA`GsE=)*dJ:(b7:ok=QemX<n*2WUWE2R>6:A>'H8pC]1
%#XB0$?\YtgKY7FP@>Ml6P;./k&QU[n\"O@"$=mBDk<<?;jK!t1!"!rk#9k@F)f_*uIge=]L*UcYk6g6`67,\m$>##Ma?ZdUQAqZp
%1^\E4n8]LG$ap271&QX\g4X5Qh(YWlW.uN=NeXPR*F\L>0eqbME?k^d$;d$]#g3:NA\rMA^iY.N(eTFV@Q3;]$G$mq%se:g>:db@
%U-OeiY)K.#3#]1<BJkKUF/*-2ieUb^6,G72']C&*XNP7-NAUGNTdP.5g_M'7g#0:Vs'9`'$52tNi4L+=QiO?a'ngtj$\:?\Qm"FF
%/XZJH+<V2V&E9Aj+JTj2R?4c^*TiSXprN^cKm3qO0k@'N9F5Rd82Q#cKh1Sj029;r2ISJsmueqYi]-j'YYZR<#""V()&NhA5FgQN
%1N;qVL(Y(e0]\&"JtYbj//cSEIgj[0i!#hp8q^i.=<XYG2NDgaE,Z"fN[&:)]!?1SAMqjjeh3dfC26pU6n:\(WTI<$=l60$GYc7f
%%%/8.6`e:()aeRhCXrsmi)iSOF.hA5k8cTZN2I$,-nqI4PS)&sOJdt+r<-:u@+bjbG:ZXP,AN(@7@i!*7Q"33aD7[&8%g/5$p]Ca
%>nPX#fLo[.J^"<u'A+m'EtQ:LQk,:OX'e3s,::cI**K/$VaR?fZoSBFk(1Qm7%Hf!\KOoZr13LQLA/su)%F'6B.fO"*IL=&bmt,L
%1IcuYD<g9i$2QPU/l*N7T@eLE=F?CD#L4.%k)n&\C_%Iqo>'E;`8Z?a"3X1aeg5B-f'[Ota4NDX4N?e?@WdXK<J[o6`6_14Yq;TG
%J1$(&CP4J/d]03:WueV5\Ra;ZZs"X6>/qA<B[aTa)^/Fml?Ro("(os@p,iGgf7n29Yu/;bCG97@J:eVn7?9iG%;)d2RgL'j/1Ld9
%-,)rSoGhSQ'A1IhW/I?&[)i&rbK0+Ef]VaPN=]?Sj#CYG@p"dpkCdE,XE0;:2&!A"?%XGa-^PIp5&AY4E260Zei7j*Kd$!X)NAHb
%FsN=K#\Y=jf18^cd0X&5I7.`n53X:%kogho6T!`YFj`K(5gn*?k];UFF!STb!]'oRA-ha>[Q*%^,Rd"M'&lA(1(+-5<'3G$1p+hU
%`7CQ5MIRdQ#=8\^0%GL/.R\KplN%GU5`)G7)-fh8K/AqS:,TK!$uK]'>@_Wn1:UH1i5.dFC33l22.f\VaIn:-1n0G<-5k8hDG7);
%6X!Z$fUcSd%^8pMF*qApaEJ),)"Cm)f3JW,1$FuYr5a,*hpFRE:6#W^+B)<Cpog%'KF0/?*qF_e&XZK!78"lY"LH1b2hh>IKPrF3
%L,f:?,hl"MS"Fr1B.RBUUnN?]Lq;(\FIFCIQa"!XEO\c[`/[Vl/E#NcWeqll0K%OqO<,rA&@3-Fe\q)[Vm)]*>Qe619p\XaDV5bg
%Qqq*JL"QSep]M(@!a"%X^@IaKKoLbR,p8MOQrp/0V33O7(m9GM?sX#lSDnKDMI9_KEM9AM-KBoubopcs#fs7/Or;+>ae4d4!M(te
%2_*Hj8C14u>e&G5\RKGt2\h4Z)Sp0ZbSgtZ4Y!,KTN_\m68ghD;,P7pD[\E$3+Np7Qn+8'J/5]o49>b1Jcc8^D!p"E!)P$DJmr(H
%nnK<:aaM245)^>YT1n1<oa1;!T*0V6kgnf+aTl!Y5fb&JKEI5QDNtnde8%cfP7H4=OF\&.iEDh'4>)1+TpaKB#-*k&a##cQ]m3L_
%"89O<[8?'J@`5&KWN)b_1bYg4-MAAI:BAjp)`'IiK4r.LK9INS:)7$f\C&FZ?pj+cPYcc>0F>8jWle"35Qf7&`#]&)#kTeqPGae6
%>])_<+=_tD-9'[mgi+K%c'hB\YXHI[6='!-:uFUhaW$*Q6B_\Iq*9B!W)q)n*g5.1+E+eb5'$:S#NQ])R4s%T&(S0SS4s=^K)=U6
%Y;-VJpO>!f\+"h+cHb5:9dj0@]`Fn=^oDdBP&#l;am3g5M1^<foHV5r'uJ.:Qp;QuAs9Z&8=5T+*2j(<\2d,<-4*T`1F.6&`L)*O
%P6N;\04:7%A3*=u(qQGM\5LAGO9qa)Rr1-VC1n^j<m(ps@\UtY7ZJ2F6F"U_7P5?pQdrU0/0NO]F,\f-+bm-R9fg+jKZ=@X!U=\3
%M$Y.;+g@DWB_i]q3?3B#8#AOX2=A?RR0s[MY=U@jMKE8r:/"#p@LBad6s(0nC`HViGSSV@,j\LKat]sh/22a<<+S^5Y7mdo"<^)(
%*pISL1bZNMF>aOto-=l53""OEpFJi?Tl@FH#Ff\68V`aVV$SN<E1fYf1KTUJ%5]1IB85\.P>9SqU]fX19fbq$X43Tr.a<""1A%/l
%hjM[;&-s=h7&[[l1S!Lbg`]0sH@b@LP?_MmaApM>I[.;<5ggTmR\SWm+^4rA4-O=gWDCm5J7o"I_&Q*50e]XjBR&Yl_L)m8_:=7]
%#daRJJNeT/T3sUnI+Mk)g2Y<)A(h8Ns+Ne,[UA.@e4dp02:'Y&>7b&4?D-6aY1G4Pj'\9OK&r=b9#du/^JN#L1]q[9RXpe^4A"*S
%E)&ZW[iR81ZJdS9/[O6,`E(W*d5WX(3XHIT1l-\#8-m/SHk?jM.12+SM%,3d/8:9aWDNb;TiWHqAJ!:p.%JDC6FrlsBdT]%+YCWS
%SHl[h#qW4!P*$0siMN?j4QI)8%[adsPf4Z<8V\^8LN6IpFG&/?lVfc(afR"O01$=\CcTp5"A;KGj:jZkA]a]b-@32[M+,_.j(;at
%1JHT"VuNsceRd3Rij3T),r3Ku>C`!cU^TZ[gLOO^!>siReguk"])c^C(31Kqb]"N>UMXYs&S=tugt7<8j4I?V't\eS?lp0R;km_@
%(7+"'J/c9):a2T`R/F.LjS+J`\-gY?37;;75/MW[.bDf0B1B>qf_+bICA`CER%M0OLdr$\e>21"8D:ZulV1ndLhfSb,L/_lmLo@b
%l&Bpi6Ym0iNlbsqjKca81!*fMI;)mp1:dI3Ak!;.@qCN*]N$>`;BbXacXSsLUa76FWYE)(&Tb5];Z`h-8>]AJbbu_F&f*3!K,?)L
%l<-d`C-r_69RTf4*E#@h*LjW7&Z:MGS)5%NC>g2Tn:C=jmU4,!.pUp'\EUn?`XbsU\[i,H]12<'aF9mT#SHM:WM8q(!tf7/9SsH2
%7=lVdFrkE<o%7+]f3qOHLD(=c!E\,n9F*(V#^ShUc>nKsni1IuNEtZB@pMQ2MqDeWH#8a/l%k^BMS/I(>I^DS`jO-[rWt%%5?/.L
%dQtDZMQoKG'9.*2ToCgU1lB9'A2H3n95TR,G0+CT1ER)41t5?uW0EG!e+?^AH_$hEP4_!V&eW`(?,^HroiS38$=-\e77;\=ZPS!*
%AY7N[WG9dN'L4ni/da&FFF4^*)IA:F#tbF7O*Nhub!S"$Ps(LL--M&0JAt%>Aln!i`1B/&Z)8ChH:=K5&ZAb6l=H5_"R6_QH:=K5
%&ZAb6l7H>8Sh]7j4XdKfJ.r3L_>mIN5RITa@/sG4",K$KZ0*IQSe@aUZ3UmN5"R,q`GqZnYp.)@KF8(q1(8tP%i?^'4eH5o.`Z)7
%n<\^G<0q-g\0R&e9<nnt<k'D,d]=XjA=]IU0kAKt+\:!)*nN&1ZTpgu@c_kG@:J6GkLr9toFs/[i,2gCD][0=EHfS(C%DV,/GEeq
%CfON:3'^4.a*.)_YtC:;=Xq%-=Cc;Yqf[cds(X=/+!A2@"8ebJS8D0*s-[,oO\'&AZW3B'F:_MY,XhdV<J44LMBRV1+42%['<(&I
%>g0FF7Gt]:_Nd3NUtiQ*G\6Ig:.%'aRAm8;iIfJ8!t4E/Ah/LA">ghX*Kmq98Y_ON':pmWET+*UoJ$mg)5`'Y$HSE_p\;=QLq]-^
%f'tA'k!Wf6j@gqA'[m.^+;WM&`:Oo%#T7Ze`=.iZ1dT.Y:@oTZ0Bj)[cgS$^FBD%a^`XOaFHe[AQ9U8h:I[jZ?<$fa77ctA%r(G!
%r'DVO)Lo;j=iAcnB%aGs=ZYiC''CVVB,j!C`+*G%-5Vkq<R1!,XZOIJTlb97!"WA?_f/fgD$(C'O%:`k*gJRZKi'$HY1"q%G@G%Z
%gl_(b&Gn1*=/S3L'(Mnurcj86-qT(M@g]43)OEuA"cT3]_F^U-j?W*TP"1H=,QF%AQagHb3D-SgiXI3*)0*n<hh:f%O8('^Qt-"i
%3)cPNiJ@fe&V#^jIM-'R\1:_C>[^l4grg->a]FYG,;riQR?0@afM0J]pmNEK_$M)1O>38qdqA1scbTY&q.ZN85s]CsDV/^2RfU`$
%a#B<ghP>A]Qpk/m#2(Y]=3cL9c.FS4>!C*f2$;G_),(,4eb(Ia9SRTkZY1aW"$$EbM]cfNJUL6f(SP]H)E3;2$q^S[PgE4Y&VM`e
%=V@+jN<<=_bIcQ]B*uGm_32$_d/"!]pbZ/<(bHe&/0#@Ljl/Ho$(#7C5QZPEY5?C>?Q]=h[kuQ!1/Xj75j+Vm)&)5#$C]iTR^%e.
%9Y'pOenLNIVoM,"/\*.Mj3+_XZo!^0rho'e.hkH5TBSRf]o)HO,rR(hQc=B9<<!QG'e$=6p%Y>D8+lAMhOV/Xa5t#Tm_8dGV0[$H
%QUZ:,(44kZc4XQq'K>Ob^HaoXpH"6$CkgaN*D--r76?lJ/uqg7<)gCu+co>G*5;<;oI6F`1LgFppBX<m>of+YM3O#<M;gp.)<l_,
%9FAblPfg=o"p?J5P\6=ec%XuD/E\#LeOU$IGdN2q(3>rrjT^WLi'sDTY#H:.Jp;k[`Id_q=h7-Rl4^5cD4/>f$63XJmK2BVD?j_^
%Crj<.26W>)C,C?HI3i'XNGZ(j_pACLV_bLsP;QLW`j8uD$7@#P*H_SW:#a.'b8l3F>6UV/s4c3ZS"$diAh.]!@^hD-[uZs#Qnt"*
%m.O<Cp/*;_qcJO-5-,VTdXgs%i[#gQ3DcH8/K([l.C%#1A`jFk`[W4[d\I@Zk?<*EWN=)gl`"!F7#Z.s5.gAi,!%`pEiuR`,UY<X
%&lfQ)a=YTkABaRs-t@m")%4YkP7AOSO+rT1A(mKi;>+RWp0o^Rn\qnh.n;Hj#(.A7[P>E5<?+GT\?S$QGV!i8"L3n(k#',9Z,1"G
%K8i9@YV)\C6u9(G%igK:Nbt(GUVD:ST]V7![J4>oao)k%*>?pc'0JBt/f)hR.M9AaG[=0`<g"?D)o]IAm)Y'2ob6l-C@#i:7-u=r
%FX^ED.mc2C`\XB0P;T[WXl=Iq`St>`0!C+f`3lE84;innO2?m(.`.h'I40IFD'KgCCM-&B7PVC*Og`[N![VHsejb(N&OgI]U1hja
%6d)6<ZQa)Cn[$@$fgOo&&iY^fT;SGra2Q4K[p.1;MB-?RR+6rQV?nY;Rmf/K<72Yn/Y>TkmX1,8N&N;Cnt9:N=ce?*M(JR`ea!ED
%^!9VMFTn!S_[`cdl6kPnb<cqk]b<EeZ7uMM'X_$[a#HKGjhM=/!]NM_PChH@,aV#^3dc(56^B6\gTCf>aF0QC$>-6V0LMY1$K[PV
%63?.iATBP(&gO?UMU$q`bQKCL@]1E`@RtqmpP<!4<,`V@mu5pE.DAH<ga<D=^9l06HR1D'DtDeJ>XbY>jh77MWZ^oR8c(<bqHOXr
%H10t2n[g:AS0'\RQKME!]FpFjEETHGUB,Y-,u^"JeXJ,/s$_2R?gj.R>/s[RE-\!#X2h;Vact=qBoG`EX%;Ln=b?GEiBssWQgC]/
%\lqYpbKN;i4(ShrT7qrb-#j604.^.?3=UR4aD#&_n3mAlfOm`?"OA`rm7.oe^KT-:#BO!'p<6usal$ZK*`>^YV]lXOHo!F.=HGAg
%Oa0]<i[%@/Jn`5!F6XWEd5G=.FDPsgS=C@lZ@4,]T./YuA'o!rZ?C%5A`?ZAoj"Z`6nVeaFir.4#8,+:.j%*gnptXABZU6.O.5`P
%kSFd,MQM?#FZ4+u_J(MCYh1@'9E_b\^fEB+[\X1ER62faO2A?8V*kO$db:$kCc-BH/I>nPYK9B\"krTc#:FFN=B2gLjFQ!m'$stD
%4'mUrg;[%ND:/h*4!#Uu>`-)MF4b"S"(jH8Z'B_QY*?a+c<1-+]"5=Gql>"V#(2S@/IeHn?%mtG?tNK\XK:TrIX[5h`g\A\WD/V8
%F$#;$4,\/AQY+EqinVi=gs4p7cJmX),sA`dZc\$%40poY;\\mH4296bArI"dN6QEdWFT')Zul(R`2T^',L3#E*82fl0iae5mTee!
%3hrU7Yu9)cU)fbdQ,[ub<d#'V6O\6>RBlNdLRD'c`p.i0B4:E?59tkM]t!uZN2/b3*K>UUNlM/$eH6`k:/rIEa7]^M>FLCCbqs"<
%#-hG9Wgb2iN(9-^.pSqH>96sEk6CFsn6P)#W;*>eoB=_kprnqW)5tPo45hlS@`@?I)K7.?aI#P%XVu&$TUn*(4E3VLF!/$DJV)`e
%A1RTUJJrO<OLgJ2Gd6@]`FHh+^@?b)UW@[ZRBe/^dO#4@;[T79%\f-oQlVc&ioPFh>3b#a7rEY2nJJMR(.0P1-m:#i:DI5!hi-9^
%#cl$%5K4A_^"kF/3.S("Ie`OV>,lFGffO!#)_bf*=_C_Yhin#/Z!f(+a"J2b8+A?MGH6og+?G7"P[/nIfbcGVK>G=QQ(<SC$EbNY
%6H<^E9I&*gW/#&>MG:G"&Z_fLVNEhtJ^CD7[q`na,LcM3,b9Wqq10M*f:Eq`:AIg\XDnZ+(_`%-_=/ZAUY(PT:f^=n9!9\a:=*J.
%,hD]8b#`pClEMm':L\b9$)Oi$8)!!pB_"HQpUR<j.\uDZ`'pY-&`Lj^&:.T[bX+/bRjH4KYkWKIFkWn<k;t/u*an@G3Kt(<i:0ej
%d6:0[LRX5,WL]5b=79;iNTl:eR8>UN7QW.MAjU($-!)f6#2GgNM0?8+9$]hpGo$a$BW7ij!dFtQ+u:C"4dYq1!]iEF_Y7E;EmmR,
%3J#3%GT.X"Yb_NIe0k<TbP`(S>QD,b0*V2$.a#J+j-"WK7,A(n\fsqmMSP#o-uiLF7fJW^n(7IB6KL9=$D>lC"/02E6#dGnodD6H
%DpuBTQ)%c!P#hjt]&K'unAkUK]Aue.#u*+/$6fkAl*Lk/a<P*@*guU7^e_"MJ2)=cfop8g5$jrs_P)Z[0Q.6qLh5og\T^r#R9qCS
%IUL9i0imjDlZ^<9Eo[p+DO"kQ/A"h_r4ag!jg5ccGsu@kl%B&3I;4.TGbmC;$WlWW)(Thp;^XJ[9[ciqp*^3mi',jkdG=-:G$U4Z
%L_;oVe'Cce$cLROQ,HOh2Rb)BGT^ainV%552X-ScAOR4!<l,Upe@8MP_F9AQ)a_P':1qCq()Kk`d\?pko$G7TUfdCj+[5,jT6PTV
%1:YA_LZ'Qq5bBpH-Y&@oanSsVKZ8eKa0qZ_ZO(ag[*HS?q6>DnPg/73A&WW@'b9tREq<lahBi?F25sFDUhj,'OlS,*=Y_OTo5,Ym
%e3+D=>nQnL8s!kdliRj>kDJbW8ut6,4K,I+%md;ehI/u1@e0bk>'<N[-)UTT3^4(u`r-d2_7Spr7kX56XVoP"l0O`l=et$%EMViG
%\0hg$0m/7pmfa<@p7[R<ZG@Im/7Z*rrq3SZ-C=':0?1:r-RSf(;Io-$HnRZ^okd=rW!3P9=Xm]sj7p;;)<Ccp'tId5K)*e(JctX1
%/fE(Y)6G'*8.t^)OuQ!8,tZD$[U<[t7p8j8/WZSf<1)>Zq:;RO*TM_ZoL)<p%SKZ@A?5oukgCq^-4qbKho%"*S;=8MRT+&joRo1D
%R0?cfljb$Q@C!LK>[fa7o2n+/\XmG@M>5sfl&kPc6&FX7FD:b[g+sQ>ajFchM5id8n\no?PT>UdPFb<CB#oi9WDZZUfp)K]J4h.@
%k0m@lg=2BV[E>f/UfSN1H$kgmfJ\F=!c8@\%h^Ki7:lfS&fp><*:?D1o8Z&ndnou/Tl^eOf9#L1a8G=T!JJKV^54'$Q]uLfk;bPL
%8oORFK#F5oGsu$4ee;]2H@BmK`jTG?AQg_[TIBN,aS/d&5uHu7EOJ"Y(3RBI7GJnn52p.nHfNhZF/>^_MOf".4B(T72R-a.>N[D$
%3[2=t`P#4tH)gL>18-Zp;V@4bP\W#GX.ioR[I9QTLcUaiB!`q`Q4[n5Ri8gsB$3@R]-s*F%+eEI]eTBseNhf(dsg)^+.;kuEs*u?
%@H6,S7n,J@>R9q*`_M/DR4W;Y)fsF@,6LApZD6sBcAXBBecD,Zl@CDLme$&JqScklFWJViq]m,f?bLbn9!j%4>q$=l(Jp5!WUPRF
%njW657PIN;'/UadU[qt^7-okgT<\0/(,e+:M.dff#K^B;.BtbE&n;TOX:=a?CoN1omq&)TQ$X$&;[;G\gW,jt#J93bgmcr-f\>t'
%1I(:k@qQ162gpITi]P`M4Oi@Qe/:j&=oK0!Tbcgb(?_A,kFp3"4Oh>2TCb@Q42["Y^c3e+Al=qd2e>VK?VH+a;@A%'V6"o)@C2:K
%1WD+>+JL!EWj/A@$G#2J5[4X#MtTWeF_/=@B`A3&-;u8*dfNl[//$W5-,)4^R-ZPaHUVWbpN1FSBu3dCp_%g"0s0f^(W4E"nM8fu
%P8,ucnZHCq#&V0<g41gm`62gqY!7_0Q0L)ZE"qIbgqL4=qg-]Xb?PbHJU(*l.iP8/P`p\N]rB(92LmrPXGJOA;>.Gcr`:,(C5E)A
%$;+"1j,Ai98U=ptPEL/=0*>$uH`@?pG[u%oDFk^Q![F@.I.Ki44.qAjQ;JAX7^49NSCAt\?5tsS`,aX8<9']SQ[<kJ2k'-ciU@M$
%IeiKT/0DOiT[-pUHhPCSGJZX13E;q%2&%X1r6455,WD-#McS76FlUYfj,8*@96Xs_!'_Z3=iMsdX7=0AWf^:=Z_j%@"$R),>Y1;X
%qH2N/->.@N'((W7D4?'\gB1u(&<Pa:.)"soLb67/q'=3eEl1%.@RDCs(5rh/?R,_,.Vd<60UO9T+pttZ6SDR2Ke<HQ6o]i*K]#--
%+oh[d_,LDfoI3PkRYCVOZViOo+35*tYom&GX=/^&Q&.GW01-#T1"G=ICq;a+eKHTBXfRkK8)J'd[Bkf3WmV0m"H8[$L&j)'RDVAZ
%dhLpuG']^j7A_XG@**IaRFhtY.4[I0e.d\D.&WKU,J'$CQqO=e?Z8AJEjH6aM$KGnNeXdkoN]Ed0pA^mNl5s_*.)9oak8<-JWDj8
%(FfrmB,_Nb@NqCV=6%SD(uLB(KBZ:enBMrY)ZJ@3R[[nCitJ1d#=bU$DN*Q'fNqs*4KBo=2rlS,9u4ne9iob<);d/BUc8]Wi:BV^
%YHHsVVXCCO8/$*)F6YFmoq?G@>$3nUEaHEtF:j43L`h+Q1,bD_l"om>Jq^JSUT0K."d4SM*(=?mq9d&'0ONj`rD9cbf:i@-!QPQu
%^X)F4>Kc.Wf)<\,Db(O[(pi`_G5g-n<nV+f9saK4PF\Z`M&=Z\]$s+W/5'WFn[d@6LRAk`#SHJZX=SbSlH*M_g1'_[0jGgD<l^p`
%NNJ2ZFg5aAS-n/cdHBhPh:0#<AQ>f5CZ9[]!H=b2)nf?U9/^`diCd3NWFQ^YKHk$/=q[%1dl8?uop;M]WCok'mm*LV`JdWqqA1%4
%Gdp&Vc5=#KWYWXbh(`VlUm-_r;eSBo-cjj[`p"CUX(=>Od;^Mu6g)n)13Btgb]4qLR>=rj,*n%@`?BALeq:u)Y+[J>8M$JO^OSdZ
%4qfC1Wd6;JEB4n&ok4W'7\l3JSrH"`DqqsuGW>I6V=@hA-@%VKGrP(`I;"KJ2-C#SlYKL03(*m>FAT*-Lu/K&fSr]sD3u$i`$.*E
%DT3%ESrI9Fi_-JocA]2PBWe7Lfd\pt"d'QPX#=G1WMA8d4_\F>9;lVDL*jWZRT<IV0p<8T54(n3`01BR?g971Q\i'g3BYMB`KTSa
%80XgK3`\il9C$Cs*eX(Dla3PYCB\_&+fDo6\O>`,f?R/JR.6=f2g%;a!dRa*g0e$8i=$Tj-hhuu#VT;5%+)M88AGBY25>;F4Ik$d
%k>On66C@ZZCJ]AC"7BI/:IMQ;Z)0oS^l=Q\l;a.c(]ldBf-GOt6jtHN-'Pn\'5b`'j]0mpVcW)G.m6$Ec@:MRjd0i91hUjEHW1bf
%g&A%m>pne#Cs&7%'Uj#`Xd@au3%MMiM$;Lc4Lg]2m'*^aFEjo:&+7$U&<ZUgk75)J%_G^m`N"'*P#Zc)[\5uBk]V>EmW&KkNrO6B
%OD]FN%^?7ofS(P+9NV!qBL`OW'r^FHb(CVN&;U.Ni<aTK`E7''7,Xt0^JI6]!WKCBG8\GV]94e3%,`uXXZhX8Et^a_j9FKV`QL8R
%l/PHhH8EEaYP]`6HDNuUK2`b=#'MPrGC7P:l[I5I[q?!Rc2qeE\U&/!B#_*iWI7d(?13\Wmu(K?QR4Dqf_)u2otK)O^=`+-8U%k/
%RfRu;R/bfVpV&Xt+D>BRG+Z50-S>+&`IK=;$Uj/?1/1LnO`\C)V4>1H<(Z'=69S6#$D`i;al[C-/ZIY^AHj#i[-K[9PlN1f2-].F
%6!m>O/A+IL<R_&n+Hn`oqc-UPKnSYsM="?9%(?s;%1Yla2W5Nn'H0mo;2qXhNksqIO:Vg7!LUhK\$*c5Mbk**%VD)0c\5qn>Lk-^
%?r`C?eHLP`#<GBS&ZLANINj&0Eb099Z4i/`eE(ifFTcQB0=MUtGN!9aa1ARGI$?*9"[#5#8]:@cYa!%]@s^aOq2GV9Y^!9`ha+di
%OW@+HGDhO]KN@I0,W=c+g6P7ThNirJe@Gu00]IV5_1>bXW8P0sdnD1#ZRW46!,"%4)';<QjV9:bM\Wb@$J](oDFTK%$J](oDQs8P
%=Fj\X^g4Sf\GhGRi;2[q\/-W!1B2I8-u;O&Os,m:#9>3V<`5Pa^(/[>o6qF6q94dN=hk/1H]/-i@6)++TYu)rXNClL7\DMfpuG4e
%-^E>nSP<]V3A6*H!JW,N#/fK1&rmnm<V%PZ,agRN)lO)7V%F(gYOeNUOoa^*4LC!6+44p:aoe[or4"5"<0\3c-9BGo*Xhb(#Q;]n
%$<L(JC`_T^e,kh78F\Q8Zq;en_(-3%[T6"+/LAt@`?KGta2K2jrg5QA%jjBlPr.?3T5a6dM*WZm5Re-@PpEGI;.+q\2%W5#em5f%
%0FLS$phlHBh[u'\*<)4o^X==aXI&)+o.,1^i%nUr5A;q6AR/,=_X?nHntLpf("/t@2MJLeUs1PbRt$Fls8-hRR^CareaI>a3k\Cg
%GAuZQ="!X0Y-B(Xh`hE/h,,-&l+VOP>(]Tm?bUd8DmehXXj\84qRso,T.*",QWF)Lme5SZe])8Zkj4k#g;D[AH]Ts!$l[5Mc,3;c
%2/)_4LJbXtfc*@Eim[+`P;`BLdbjrLDN64Fdp<F9;<e+/]6&NAma+%O?h%d(Hce"pVoHC8F[j8'R<sp'Q5Ag#bC+;(XUI+3^R1J`
%`O*lCVJCT7*I(]?Y!0P,SQ:b?@]"FY9tN-n&c^p*_`s(8KQ2[E2W=-#2$(3VN^b"s3sUP9*%_a?(V;\WF]tQX*3J2qmcCM>U9R7!
%H:RU&O'ah9NBc0C322je?K4+.*UHL=et>/gmH,QnO`>7IUo`7uS$U]`[_kE.k@qQ[bek#+q<-;<?@R=O))]H/1o5ajb.#jak+]aq
%mWfH)Bbrh?4hZ.-Wi>BKL&XcIoguQ_%[#I,e(UYJG]M[p0Rr<Y`pq%c35SqlU9Et`l(H]6r-i\=C$',,Xp3.S4_$"@1noKJ*]-@b
%6&qg1=m%nSWr:tArie3$2dJ&7(8Rs(YJC*?HbZpoBQf<8fia#@=(lc2Ap<+or&6IE*)**Rm,kG'jfm,IMV[8@G5Hmr9SMo8IV2c]
%G)O<2$Iu:Um0_B]WDu#a/(n*4Fma*!RA&]4(]FB#'NP=$<)?UmERi]ggP4#Yr+N_/9,fWH3rEYIm?TN=r'H2%RCNiL)0,SIIF;un
%Yoku/Xj3m:B-*u`AY#GUBXRRr^%%%;L?D@dND]("O'kfTc4(agiCrNuM*&JH-;5MjGlIN<ff@d;au*M-H&bk-hodgZRa'=Adr$Ck
%N/qPAg[LI"F[I\D2EYb$Gc\f0G[6(H9%2NfDtAc)O`=^p*1h76Gm:M+kVceb=#l]`AY#;b+NN!c_^MTKV>up#?;5-Us(_IqUH*u#
%E7>`c1t]%&o4l^HIG>np@H6"BRh)lKkH)NWHCa)$XDJ!GI5d4,WE!a6fkFiBE`naYm.46VKC6iiitA<iHekqt?l=s4q3j*TXlQ5C
%(JbsI_dTIjX,LuI@e5++)p/rQoTtcW(4FnDUr@7)%;H5Khs8a2I-MODg%#t8(QAg`YS/&=RJ99nSG,%&Sk%hp)/Fjg8(BCc)pCE]
%0Gf'U`];X\D6T<15q]fD4<*`pGhL^dF@M&+m84qCZEuAB#;>ku$HZk$7%A75cS>gi3MnIaK7c(*jubf:X;6L#\aUaY53,lDOE2sm
%.t#D>QkVaF_M;CkO:*-c8Po%')qoU5Bt?-MA+UZuEgTr:^N&3k0)W`L3*P9"0)W]si!1e1`cIOFQb[O0_h-G(m-gPVgXU``Udm'K
%NMWeF)goiFiD'XTTG)2FFNK/Sin<MFY(,0]DZ?p)NU,Rb<62;tm!!N=cBB'g9eFN2na_]E/GFbf^."AZI!T-DTp3/XKnZV4O=c]N
%//O)V"D0F$0U")mR>g*eon,QBh-1+5f3X4]f/`&us4QX\gS=F-]=$K;1jWY[H\MF"Yb)[(ZQ.u8Yb*KW=E8G,"57&UPgarUjIMd1
%ol@F=n\<B>Bs+RjABm3)BkeYD7(gUMJ())hX9^6n00!]N9![&%X&T="asAsF>S?)7n>+kCZobe%eH^.&"3<3pGg"E@LeV5356WZh
%"7(H/J=:SW#"FpnL6odH;A`^I_omPInA<F$bj`KO0P#Y^$nm=nV(fOrL6odHnt.kRbRYb#SiE?r0d(=SKkIA:8=+0rm[7l($ZBIa
%F?<N.\B/EUS8#MmXN7`i^nPaLO_;"U7Gk<ncSuUX<\.,kg>YcEbI2WlV;88JgDOic3b.REKlC:)_6W:AZ.R=#&<:g0ZPHk4k3'@1
%Cn15:'tZG2Y$IRC0WrA):;m]<o-2Z`fNq(V_m_=?fX=8Zf9,I9O-[aC6,GdF/;(XqSjt]r&BPrJ^Wu(ZQqKB>lBgEcfR/Z\o^cJX
%bB4kBY3$G]_$W>8GrNFH4P$rMgP[L)C7\7Cl*n@I_$+"fA5m?)67PbMnplGF*7;VL=d7:jh]K9s3#`(h<mJ40V.!Z2EL2H+]q3`F
%`F`?Oh1!,X,0ng6\rGk"HAR(#5A;r9UOUk%E\;b2:VKh3/Dn,(/n\Sjd`eJVm9,`h'I)KfjX`G'[pB,[6=0LlFCBL[im0573Z&nr
%>5c49Q]&=YqRD)c:VVTfIK%i,Y%<bh]DfIqdVj\JDR$%qb[f.r8H\,g/s\86#_?Pk/2`4S=Y:%F/^.t/bHTetJTmCnmp$K9E(TfY
%aYBc\HFo_(lmMF4ghs"i7EY^h$;<;JMA.S^`sLF."aOOmT+_J[N8<Y;RUQHr@P!Zm<feuS,.V.dq;TQ99>=*%&<;Yp*/bQmM]j'u
%($(8r*/bQmKkt#L1&B5=`auM"T.c!Ws!4,t^n,Bhq4`km`A#9m)350-`DTUPjZ3r8O)M4GHMk?7CAaK85Bf!V]Ge2!3nQO][X3:[
%^fVL.F'6]FP1sa\gYnh(o+W+8B=V=ms1I(:lYhhFUZOO;@ViRek1f-BEtMn5pUhER5A7icke?>+nlX>mF]2KkMk?mqR6&Y0S!3.a
%NMik%nselR[PWbFS:r[M]]aYC<t?ZHW@]?Y5Ai`+3VMQ;-8%U-H!X6\fOD1DbIu$<AHB(Q^ERQeF(jh4aB6+aRq/V_5i<$b9?+qR
%RHDqffDj9FfQkdA-/N1l4N"K.^619[c\7uWQS-&`>mX&AW9mhRB!C>^"Q_a=OHpJRT8i+OSh$baag%:Rfk/X["7"&TJWSGHm^EF0
%B5g/VS7QdL)l4OgR8IItgO>dHrYWgAYL04>>V6[kGhQrI>tR"QG"Z#<+LC/QZR<pfApV;;QANa6Et&U&'aL'.mgL,JiI7@3(`&4q
%cb/1DiN4/6_eBJh4"mGhK2LHPO`Y%.a;Q'+Gmh4>6Gkf:]bVcW(DC8'5rC&#:Kl&]PB<-5RUkrpOmq;)*:Wp4Dgp<.nbI&k_!fK:
%k(5/6o3!$!a$il/qYo(JI2@'9?$<ZKCHh.sqT!l74Ct!(B5r">ANp]*p?1%b62RJ4a:lDFBXKmrcC]Ao=d4&X`e[ZB^XLB6N@"3^
%].p>InQ`)>kLHq%Z:Z,qEVEPaN9OggcTeU6g>h7Y)B>,[aBJ0TXBrZ.B50;nVoP^k7NPK%/G$NCea<"_N>u0$2B1K7bC1MW?-,.2
%7Q%c,2?(]`G(=6rNBp>+bAtmh\KCRdEpU;R4jK.T:o_.<J]G`s5oRG^ENXS-EJBil?`8,#2JC<gWYaKQE09"@j`*$iVUOdo6:OBG
%%p[/1b7'<3q8IFaG3HMKj,r^UbM\cS1j47Kg2;pn,F;[:r>-6Bc#^am3>AfeEu-t%E``W#qjbjW"iZu^k1o_lLJu=FfN`JSk")gq
%3VUO1d.\WN@QD#-ctIPso@X(3`d*-obI4rtX#%T#ZfD,dAUeZ>f^JMEEqmldc8Tgik7jF>7i)l0YMad3k?A_I#9;&J=O<;5E]fh2
%7+^7+MO4+S[<D/[&tOR_c=]?M6b>(d)0s(tjqs8EY7Z&g-CNo>,eB8=&Vob$#=cgoMqso<3iuYbO7@Tj$5SNdVj7?Aj?'#UfbRgD
%r@7WdYj58[2D"^%;jZSCg1[,Pb;\%>Ga#-%.EuWg%tbp`rlKB$29Rp3R_,XkG$blJJ>^0sa'%RJ]&G^8,uHWe+bmbrIIt8oSasNU
%lLfJ;Ah:N=_Tp\hr:Ytm@Z7F<V`;)q#`AO;6+ZQIi6q!CEM44^T)<942j>^#jAai0*6<Eaj0/psEaG'L3%pb*]f;/G^FL:j;$fFE
%V>#"J9=/@W;Ok[NJ[HocJVn<=c5cM!T`Im2-o>rqlRY@[jpjh<:lU0nmmX0E&ZTgo!5:E/lnYVS(NYhsnu)_M2DQ(^\6>Ii.<Msa
%='K3@D8s1Kc7-KF^9RU`*P!)nk_i6\@e%Rmeh$RTP8l)Q$]E$[Fe-CDZ&hf7]*&n/4DcJt)@NV;0&)mL//j42A'mcCY\4^dNP_Ep
%L_^HR[Li2fd+Nd#N3""Z_fd#?h-'3S2P9cgjgTA;L2AiUb@TqZeXZYoV'CbiZZO5sND9_*QY9g-<n<.lZ'OrkXO4EH#F+AUX/<<u
%(-YM&?(@sW_FX9'1m*jV/\IdT3*Ds%pBl?;r;'_0OAP.fMp[2EhcmbUr&=8]*20rt^,KtY0?51MlJCO"HP_#?EhVt;$=BLr'ae<A
%n6KpccXn-]UQUD9QGpb.naiU04[3#<l%1F2X-XuYq3#TdY8:B6m#,nEV%-.Af$7i`>/'3aG36-Wd3[5Uo+9T6GBC>C,^RIoNs[d'
%Dn7Ecf/s,r0+mfu@i$P\f>"*D>_Y*]Q[i`9jj9H_B7A08^T!-[i(JIi9!2T)oSJ\T?sr5HJU;YRj0D@%/J%h44G!Mi:Z0)bXCVu+
%9CC*LZ*7l.pIqYK+,6&9W#"84HR[=W?4O8E)TeDF0amG!H^hpl<'>'iHL:-D]A%5cZaZ_`R909;*,`Qu[kE0OS>Ar^1Han[RdK-Y
%DtL>TZBQP'.u@4t^"$V2ViN:?bld&q`eA"K$d[CFR%]h#XWKKp\/`=,bCQU5N6JRMl7/Ajqf:-K/2i"$F84oRDYTKT`YP/"jY0Xc
%%1CA.R*0qd5`XO+5Nj3PM;+eAo,>dl6TOGpO[K*C[:.E/E&tZYNE3)9lMR&?Y!uRWeZ'V5>&B_<q($3uo_-8qc].kBJS<TOQtI'u
%Q>9gOkk0:JaKO8Z4[,DJI1R>?-1ed<ea<"_N>ro,2&kB6bC6&]W0FCTC6Y$:jS%:4\KD(%2m9)8\plU:ajD(.%&:fb-a[8AkLHC,
%6+d*1*-5i/e*Z9*MXShnZY8tla18)F]o/o,-.n<%oht-gH3k:Rk%0E<ajZVg0jcJO,YG4J=S.HDk:di.>pr>:EeU5%RueAi-jsKE
%cSMnn7J&-V/4pCc\KnF.\VP"j@o4i^*b\lW=Hkq-.:Q/3=Hn;&g0Dd&'`C6-Mis!T/3I,i@SmmU;&?Jc$cCjSCFi(1)I%G%G*uf:
%nhar]B)O9o1s6_7PA;_q0Y?I-QHO\q<iu_3@O.7Xa,T0uL^U?(4DSo8Fu?)or_/eumS8--\JKC5f.ot*4>sudg&'q6%o\ukHeO,B
%XD#_"Da!-h1BjQN2+EqmW:e?Zk]1c2_<;4q="l[CF>neG?/)LU>*@jlG;aoXql8Q.Jl5'7d-<+\^4K5%l7Z4fHZ_ZiH0i#BmO:95
%VB)Or=1.mOm8@M73]nt,D"JVN^f"MM>#<7R5F0s*eOI%&3FEMNBAMhH]D(:[[!A&/oDRF?19V6G,$pfJB\JjM@11**&:['nMIDcl
%9qqq?K6^X4?[\RF((<[eUOTlB+j>](^&DA%qLhdV-0Y#K-/EQgTH%3i5r3,bF*uDQb=l+(2*M=b&>kKtr'ol,IJa=74bIrCi4Has
%?)<macX4(XlO*RbQ=^$IJs*S]:dZMC8Dn)[aDa:`C5'g%i>R_Xd`T"6HOd]'Y3p!f^<q&Y^c.!Vg@WAtD]J[r0=h1]Dbb5d^Y,AY
%+`#ITA2!TegV1)N%Ii`Kp&?s"_Xj['.,;H$3KE3(fPd)<l.ED4DsN-PD`$:j:,Yf'd.*+WHC"@[e3$N&Q@5^.Ba^PZ=a(>0U>a[G
%f<I!CP0QshX)Ar86EZrq\@VRV[@P_^f.l6DKcf4RmiD2>dbqeJ%sW5fYNMlC<iGB[StW^I_ldQ28Fql+3?"'lC\j?R5NsMV&UpJo
%]']:b#0H.?E2M4Pj',;=!jIH3,,W8?X[]c_)RW`.[e?p_Y3!9M:9F&/T3C8in/]d_9t+r*f+kpLcrlE5#4#P&HILEtX6<^0L7Y5=
%q]?c@]GFlLD6')TlRQ=I9k9$AFE(i6Oo*`7K9^>aXE96Ha/n`+I0d^tO$DRmr#q_+=gVc[RV(QTKo:aC_VDP8Zc)X%lWA&CLiE&X
%Kt_tKQr`In6b$F$nkcfcW;k!E<):OB$sU'#.2-3Dp:8,8*QF./0i2d:#"BYkELj%G:^C+HoUm+]@Y#YL:LcNf49c1ZFYU*3a+-LN
%k1R3-1&<?bRV1jNXV;#G1uIgC_i;fjU9MGU6c3qU@>:Om2RYt/FO/u'W9dtr,_)1Pd7#LqlXMXR2@Gs%MpX+!8E-/ND<W&"QTZ!O
%&6nI!&'IiZh4VnMM,I`?TWM%Z%>^0XS8R%_/<1@0+0H^i09UK\0fEhh<Qq\Ac@X/M&1r0^ja4XL(/Q>P:>aJkW[8(*R1"_ZDPAfi
%8;/CuBjfD7@A\aC7"b]-7D4F$@>`Jq(CRRJ0J0"%&396Bd?SXu&Enkl#M'O+ks0#U2L-u#RO;mL&UE'2:gY"7X!/"1[]-iW.jS@c
%FZL,#k51P'1_#h>KKNXki>[ai0(cFRBS>U(KAo=f82M*B[NAN"[krjmL)C-R%PRNu*(D@%nea7K==eU)+DRCN"CA6f"Tq=_<D?Po
%l?Qg%QmY/r:o%MfQ1`eN!b:dYO#W"e(Yca>LlH,C2`3=3L5"\Ab&s@Z'2!Ds6D7F*&No&#AQ.2#bG6ku2)b`/FN`:7?Q"jn67jI/
%'8O_k#g7:+ho,qI4qqII.[@o34_`><1@["Um*J,HDD,H0^16Jp`t4bXCVEA?iUj8\HC)Oqk*;kbOsl<L&[?`q""lLb"oa8[b%;45
%\B25cU\6\9no6]o$-qYL#[:7@%^me-7s7SD_5Ffh-rS>0/;e&!*H>&r2`2F-C5Qd.iNi8g1@jK-!sb:uOt=dD;UL<qU'Bn[%rGig
%Ba/Mu`X-p5YRj:QOqm8V&1]4uF*sUKi;e]oQ=-V"j=D,SO4Z;6$;m%=ZU*3r(b14?=7p6-JCnfEMtaH.\MU(uCt<a70I0bU`0Y<h
%;D8?YQf?>#QRgK[2g@88_'caH%oX&G0^9BW,AK'q![8(_`1?BX/k\%EdMTIA>h<QX&9p2K-9e%r/dQKY=:YhF(("o;jK=9U@Mpt`
%h'HVh@)T%^$t.EtPE!/qX!K*WbNl(H\1#oL0a0<[b>UG:8;EQchuXNeY)2_:(!1b;`g^rmX?F4SLrLcH5XaXZZ]XECCM,$BPsT+,
%L6^b1/i.(lZ]ghTF`YcX(q&$$or[>DQ:]NMe/d.NZm"A8/\%\&Gb$*gU,UgL(8ip=?\-)"G$C5&[uqZZfke;S3lB?*<7J:D`sOl*
%iE=dbO5'[Sn+F:peGlL#LW$[^m_G;mlShUZSOKY8K'p7UHXD/O)Dlo%\Zk!"`P7].o6==KA<tN8J#eqSh.<*Tl,N-Z\(lu!Q(,JG
%m[oKTE.+a-%Pm&T;n]*72T,=1V=1Ft%NV$"4g#dq6C2T!7sXgEU)L#amk$q;F6t:Xq7?Oe;1!%c!S'SKSL%/2H:L[$]AD2b2qFP>
%?B1lK=H,G<486QU4&]8Y1I#*Z]Sf):fZrXDE7@*Y!;:W1,e>mMT]I&&-nq+fPko=BS*fHE`r+Ta\Qi'Y\Gt.^d.\/lnmT#V]KC"X
%<VKe4Cr9WErnDUk4/(V36^O_is""H5??OJtl\"1RX]\R=0!\)#8@*EqpWAf*\Pq7JmkAa]MK56^r**hR/t*9OkldF?HuZ/XFMdhN
%gBS^sddKtHf3Wq0B]DO.J+S'6ag&T.<@3.A_>ju'Qn2@IdQd-,('@]i^fuV@*4JFt(-o#?<6"t"b$8_%]1FWD;f^>gR[CCGDS+^k
%>(!LfDJJb:@+-dB4rp2aN_44/_bkd-q&_2U0"l*4qqY2]FrL5/Na;:_4Zo6Xai`d"VP1<rGfthsou4:Trn]9t+#F`N0/C*9'f4S9
%ri=HN_5=B%Ue(lshs!]]m)"EjpY(8Jet>0BO%P:AY'YOAZ7^OPkT-0O%bdb]rlOD]R#=O"A4jsddV-%O]OQ37=#un#fB@C4amY6/
%_^#/O`N.MTG6dDhd$Lku:,s6E@'^Q;Nr$&V,M$ZK;9Sl8@kcX&2[6B^'=Ruj)5Y#[Zt0uN$O!/fNd@AVpL2hf#(>2"WT>00g8PsV
%cH%e$2S*)3QDTuQd_IOoX4!Z?Q&LSXP\d*\UGk;L$ujf]BLet#)Fb`.p&8^Da7O$MaM0HE6WMlOH:mAo9.,]4T[R>)p?>U)=0+e6
%j2%ATdSB].;5rF;N#I&6DJ(4+SaMl:.4Zp)]%ZBHfbeTW6mCjg8[lIdke:o+S9B\84l\Za/HQHJ8]6,8l(=n=AdN6eq1YI/fDe&!
%%n<Li"[eZ?_rpE:17IKo[SK[oTXD\cLVjUDh<R;[K+kUBM^E\S)I)UFn>+mY*VQ,@i9_^eX8b=tkK-AVMe0>]Z0(rdq9,8V#53-&
%7JkDS2l"5nBjWV7Qohh4H"f5VoT,dr?dZ!]<`V0<3=7[^dr&6/c[2T0oGmdt5ttMDO+7MUFaF0LCq%#P)^Dj+[&lLDX:=FWClfh3
%^?@Kp?"BA.ghMii*(RYa->?Ebmj(Fo[`D<LeEDlQ-0X:,0Z?>"@s8kO.GMh;hb$2A7,Ki5SJ.BZBI*BmVY^DdM($i4VK(sc!O:#%
%5A<cj'$Q+8m63N"2CDrXp'"_kC,C#uZTi-2>8]e,])ScpMZ5:VljKa^^q%X#/P@8i#H2QXQX8V.6VcjR(?5O]AMV$e#qgs!G(c2:
%.@n+&IQ+#);Wc1^UT8Fjlg+[T=8?F2+8(&]e"\Yd%m)"mP<Q`t[lUG-b)I'RJLW\e,/gGq,qb?pJ7KQQEKsEVcg)iBW$FbkW^rja
%:82[IOsh8+-K":,B>dpj9:RR-CX*g+A"6%^ej*d#M&;%pB?E$p`po)*)e\i&2R[qSIJ%-'VtXPA,H$S].t>ut:Re?cMVX?c[/3)a
%Hf_rdkdZ0p+\q!:<iGgi%ZZUmHcR9*qtjs%&dkQl2ZIc,E&:8Mf/'E?0E-(GL5A@CGc4C-e7F-%PR"2aB9`uFS,FCed>1@QPm(]0
%50."Zb_h>-%MC_d`?tD67OfU*9ZI''ZTg$3lZ@.W'Ru,;j>!r]%QQ$8$UIYiAD3#u)2_^Y>)).t@AD?oW4X<K;in%C6K-OK>>NPs
%eWCG&-?U6fK&.N1@rbJE?MgB=O%l'>e1pX;A-.CBHQAX.'+3L_NM(dqL8++uQkh.WE*P-"m`AkO+7ZQT1OGeIpTdu<MEQt2:l[;$
%.YUQ+7;<!HPhcM-*E>%^Zk=(*doseWmLE!#'Aci-q7@+)*LBK70n%`,Mlc.NH5Guj$KJ7'o,0\L*-KH,p3u&/4!K7((:ZE;>g1Lb
%.I:J0hNJ_87^n`!(+65`V(suAPV\Ng:Bir=,`7@Nr4Y:[BBa!ba;c_O)`'0\P7-I:*!7Tfa56OWo%5]tS*lLb,>t(7,0R'NlJu!N
%r%Y1]!`XtDkJdZ6aUV73+Xg9N8G*V=+G>aaP0#I]7^7MsD2f]>X@$7FV!H^XeQ'kAK>b(gq#MPcDAp]b-#sRQd%o=S<oL;O8Hk8'
%AO7^pY14S:%XP.7,J37qmh@c6CY.J4FE;#0$lN*8e<'*kXK^At=etVnf53@*-=n7*b5D>j6]F&`bUceF.o:L[8(qG[-$<imM3)Qr
%JCS(Xn@sh05]o1;$OYCii<!VdD<]6-8X5Y9k61LsMJDj\[%2Nd5Gtl0fKACVs-[%DkhU.:A85hR:,f&l9J5^O6>7]'gHDp.9P4<h
%On&)nj@hRh(u@9d5Tp#&B/I:]_>tiZfs&L@!"^WYIO,h3G+iT"!Bjj0iNng\-K81NErt.0e(a=e)OEF`;+/t04/6Y,Y;$mV06T1W
%Y(P;5Ql,D!g%J3gbt0mPA`?>J0PMVe&`dq7R&-7ls%Hrp;9o1):u\3(Kdt;cj^!/D>l)h(.olJ+&ZEZU<jk6*hYM9)oVXDRY2R&n
%rgY9H+;4g[aLn!J(A1+kfB_V@('@*F((UQX.;nKVQWA::.0Uo.8MP1]9eI*\3Rc1Y=oB@4WbtnJ)MSo093:'&.uiE%A:B%h7@@oY
%E=rqIG%3?\fC5_[!]%!(1kCP6<_Y#\!:&*Bf^@3H10NZ.XM;4N/0K"5[X4!t%u3Dc[6`iVR#N`gqoeu2nFQ(PI=Of-$q$GV74--Y
%cJS$W<dV(.SoD_e&5kOV#cdE'`pL2RJ$r\c<:9f)"c6YpiRSQmBgrA+?&S0SZW.Bq_tQqrN:,^!:$AV*C\Es,k&NU\Z+\/`.:/b?
%=Mm25U[E((P]J=PZ5C:"hGFRq$R>pO3a344i0-V`m:])&Dm4FSD(?W(dpTf!\`qd)W,7IDleeof^V9O>mXl#\Dlkr^hKrkkI(`_:
%(d'fB>W_.TI26/&[rSP'Bp=D)STdlqcF('>G>B9nZlZEapi>]^`o+5gL3;OQG=/j@CRR/_rMUale#mVjIk0F0G]<+^\1rAKgkXX#
%XM;8+&@nBl.L/c,]\%I:[C<3-LQ@n3Er"9Pl<Z,IJ%uNL>'OQ%rUaW"qsh('I9O<#*;<eKJM'EIG98is:;`NCrBo[:pXTSZ9l46a
%[[1.NFk>MphnT!b-.o2_hiGOQRW%TZ`e1&Ulc.Y_I!iDHn&B(Ont`Z(\"Wd.^[Jm#XmLW:i)[E.h2c@KQ,?Jld/Bc\HK=tJ>#Tq@
%F5t*s>9?s5;!DE]gVL?_]Y"!G[b9BI>$:NI>S"8EYOu!D4uQTBE#\htb2$[CBtmfM*a62A%tYb_c+B6BpV,P@W8;h:<njNr*kd&H
%m;TblC`MEGcJA?rMaMZ'?+]!5#G(2<f/hf\[49uOO)M-1mX@/*?>SNsM%-u.Z2X+:K\JKPn%W`C^#lHW]+88Ohfk-r4RBTGrSbI.
%%%<[^h4li5(>5cP)nq*!F)SJB&#Ro]lW!=3@$(&J%p)g#[4>O,l^5*=Nu'`5WgaO%IAl&pD;8$_[e\Uep;jB0^YO>-^@ccrfXpjB
%b'hdO!DRn$gpr0Wo%Eis]]ij+4fTLXG#gVS^2L^3oWQkQf'YI<g^LCCrA;=E3;CBM.YY1DD7%"62_FlFpJL^9^O,IDrg`)RhQ)-=
%V&=b"Rm=e3[C_J@eaFB``s3-#5p%.3=E"._oo2F>eelPV?*V@c+BRZmXMWSf$Mqo_\!X45d<G<78o9p+]@J#e[[^.=O(PUpqf0*R
%J,f>jHD>KGHH"QapVu+%naToS\m!dem;I2tDZ'FDFo]"N=F]](Z4?ioZp*#aot0ZCf#Q]k=SqVs\(^Z:ggAr'^2X]bp[@=mLQB0]
%mb:c,\tQV3oD!V#qSf#g@I87(3U7^5f5(d:$&hX%Dsff<htY<^oZ6P@)s]S\hh.J4UXO>F&tQ)qKG]Z/K<(`FD4!VmX16`\ri(&#
%_"doeED6hUCm[Tq&&(76CHs+gmbP#;rGTgJMKc3a\7.-/q)gh\Sl.d]CXfM5p>SZJqb/BKH#WLgrHl&[s1B=b%sC,S\$(:.^hOMN
%&a/egh[W_*T%pIi3cC)EG@-TPLgFL2r6Zm(ZX%JmTl.[43kbo[]6:f4E*+3nlcjWl"8A#L+ZU$::V6(*L&_.J^3X_DcPdT!W;X@9
%[g@4a[dF4'H0!R,0E*rRW\7p`nicfdh1s*N2`0QOoeK6*UTO%Z<d-^.fq458O.La>eS%h/TO#h@Y[4ZlMR30U4n5,Lrq-.P\ng^4
%pQI\(+/@D,V;$@S%sAFI?AC;-hj"A8eF3';)<&h?pN,hIs6pe/p@W%:\bkBJZd.=5rEE&<W,M]tZ,HM9O&#pLLH@Wu\mpI6#7j$C
%^].WpZOT2&mqst;nU*9J[l^4ohN.*i"6+3\>eo)^)>_[d#F2'LP>:o2M8#^gqG2%u1t6CDfqP]g?/%HCY<;aY+d+sE?]h!_7d^:V
%Ye?UMi-iAP^,asRrnY5!=7ju0k@"2aZRZ"*&&)sEGZl[dQLF9n+2#*dd6F2i#2?%;<qInR7\0hA*,c7SCH'q.W>"t'nbUk/hK@Z;
%NGJCIiR>8^F7o=5hRmhUe=QX/d"dZ0)t<CB[b`RmWpsH"+$>/D?:!]m=0(s'DF55>=-g$k7Fp!:nFUg\516XgZ_LPqH[a`,i_TE3
%.Qk*?GWMe=;e&1A^@Le+s*2/]:#BAp=Q.km2q6SY"^0*B^YsBB*<oJ/EPiS'TZBU<93_5i(nOnGrp/e@"3C'$0g'joU>&M.=;U>j
%nCpc,b&=NW\*EJNC'C1mm-krlk45EoU&aO+<ZV*hAYFFafk-dEI8bWtp7/XZBHc5`g83SS22mLsee9O,4o9?e't\;N?s'29ZJ/'S
%5#ifX?VpO%'"\60Q!_4%Zc!bP[u%LGe[SCV?\g4pDHOY_FeYbN\C,4le9Cir,>33LL^L+(??=NkDr/JdVs71u=L]J>;,=huBe*4"
%b)6NdC5o`nh_;W9RaP,69)Yq-Fi+!3DSrWQnU7S4mlBQ%XIEon52?jR&bX,2bbbgA*&TN9q?jq*3iNf5>nM2\A7;UVVFAEb[0on"
%#DuK;J__79M>OX1A5SVf8*+(,"]65!+%KCg*e+$Qc$eRVXG9kPOOE([LWC%_7\LskJr";^>d)-CE#b"\(^_MO31WPQ+9r!@d&+Yj
%,SpL`<@BH<NFU2&q?tJHH9W<mc39<UI#15?42K5>k<6=L\8eR_".I?GTh7.+k^bi\GS,CSq8ZZ`ohP<ZC[\BN!g'Ki#C'61gA#XS
%h*JI?D:_U+52?H,k]t.X"[MPM)ZiEH)hs2mSt4^YQh;@!A34"h;c2&^:UOhf45U^/)E-h4i\].c:j'GVlJ\WG0bg<egN\3`V,D)O
%?[O0QR^e?hroligfGjSBeXir9Xp*/Of^?_-D1$=-Dk8-ZCckgBJ$2#IHd.RbW1XTp3^!LW<;$f:m5stWZ*q@U_qj'K&#g#23UQ_Q
%[Pi&R_:E.kNQN;@f^D#8[f1j.%<Xm^fR$h2OS142T5`Mp5lR/_52>:j+J0Rm<?(o$QWg0Yj9)>Gc]5lR%Vk=<iu=HD^T"c!f@nOf
%*-CU>Ac>Q2@l/'N\k4AC:*k9as&,/_@!T%-(j-8U[.1.=QKGdI^:'Zcp>6:fmru3(".QClXKklr`p]NICU_eJR:?o^DEn%Q3Ea#,
%EQ$gODEWgM',!-F<UF2ep1$Q?Dp4jPi;&.hf3oTRrL)r]Dj?YK"J2JTheRqrf'shMq!"6S?e</fetu$!(`MQ4><X7\WuiCc7T1J0
%g8HK_18I\q?0C-eUt%kVM7%!9l3^TTP]?eLp\1_Z@E5A7YC>=`DI;.GMHTB=]*@!PHHU)Q"0p:!C4'C'Z\?//CTZX"VEK:#59hM@
%QsY(WFc,Rr)sbiMq#/=VmtXsj$*9i/niGEPdeX!/p2FDU]Y!I8M/r(]rQc!U:5sGYl-@P%p4K/dY?N&1eaKV>rKN0YD@?`)n#Wp`
%+!+?Hle:Cln#2gX[=,g$amC+HJ(t<9T2_C_XOE'(hg7;HPP8i1R-<^OJ\V23<W94Tf"n!?:;G*]4*TE4Z_tRA6_B_6Y4&J5]!Jq)
%ga;@T@rBP(E7-RRHoei>4oB>C%91a2h,q;3cRVL=mp7@oYdJDga5L7aaEVqeqE`7jUXm0Uk#J84Y3=E]e^(^T]2me<[-NK5]m98A
%-B3i]A)N.$\,H0*0R0o1bl5_R'rabD:2lEglAs7@UugK`q=[I3Kq"3q1<l-f?/u[J3*$`_`[D+ic/be';CYG0`dTl5mq5@)_ubd`
%XB#O;nrogfD3tZK*hX+pe=T^4GEYIid6jIBpFDg"iTD[aGN\(3WT'r>`pFFhI(dF9rTNE!Y_%M.)a>E'gL;:DSHds-aT8_E!&<iU
%gc5)([U6a`ZS$\$CbX?s5<jEY>_(#!qV&9q?<Pod?>4A^S\%Z>I^)l)@QaU0/(gi8hQE.$[T5?<?6+/4&Je4c1C)fbqY"FWIVjK[
%T%8C:)Yj'=GG<Nq%?o!CYBr@T[aF=+]n=1k$IIf..Xa--RGVf+TD-s<hiB6&!"A%5D6nN^%=GX;,etQ)YJS!<_-shlCnIm.mVT/"
%I&cYkf+-a';ePLJ_0W#n[r_.R*8Zd-q<[M(]Y5ES?G$"kgt`<,BPu^cl7N@2=6nea&IbH74.='Y6BQE&dWOI&<?Mec:<nKWNPVWE
%)SEUZgTR]][8.EZ?.6KfYJT%DClJEokq*VX]X[k.q5[PuFmS"DD@J1&=TQ?Yo)h\L#?L2H>DMq`gY]`'!ntf#0SWB+_XqYmg\=q!
%EOT:_:?Jt\lIE2(*1L']7r/"<oB-dnCcXfLY8aGlh<c.<2FfGM[m!%R;K"b5C"Jqp?JY=aDYsc!L<j3(TWF[:UhQg^q>InBkMo_d
%.T&4:QR!,a[NHAG\9Islj8Jth$BFb8MB$nUGFs8*Dr2)lVdDCCn<K'Kf;UUlha6@/n7MX:%0[dDJb5)&eXd5ZH8*[9nrk"g^?c';
%-gqsnHQ"Ps&RN#Ui?*LT\hKId08$_q)a@>)c7=&[E:&QFJbs#l]!:tfB*W>7IPB#iYS6Y-o>\"qITGgicDR?0oZkeP6.d/,o^_4>
%A+FXpZ[eY>nOng?*cENm(+0gZg@%k!p;)L4^](M/k!n62mG6NZ)!dk%lI"XeN<bM>?3Tfc5CZMe]4I&JnfCB\g]$R`b/Zb&-g]3X
%f>;:lo`1RaGJi.c9-[`^nD6WaFlt2IT(PI>*b3r^X>=UooPUT2IBIu!TOGTemXB6p%2EjGk<%3]HaG(m]#Pi!n.-$]&/]>@ot,Df
%EdB1m*M-;-Ft;H.hHq@a@e9<jWPA,mdoWB^aHFdec!r-dCPLtsGJ)@UmEt)lD?&bI/h2SK@/U3'QIagJ[LP+W`^,Hi$,#HHc*1CA
%mi[.-"b86Ce/R:0YGahBgc2DV>l4'skU%h)HIKG'+OD/m4%@:'Vq^n<4/5r*p@@$0i2odVJ[@X+M,0m(QsZJh1YgOYphCmcraZ/1
%oAfT!Z\PDTs7Ud-CMeR!=,mWAgH9^agO2a&.#<VcBAAm[\jVuqIeSKHrT8t:b2.ON_pWl>+LJir\Gk68pn[i(TFngu,hs,K"O=EM
%^`;10"`J`@C\>C>h1t7L5Se.SIgr\PHW+j3f^P%[9cMsd7(.)c2n(t?!^l(rT:OlWQT&n(WjQJ@pU/6"fUkoG-d#6mGkB:]#PR3V
%(ZEO.-[qjpn^\suD4\ijU]0!JDn^#[B&ch%g3NJGK/u.K8+&>,hlL-IP54PHZ5Baq2E)3bh61p9m0DNt&%:>BH3I]Unkta(IW,^7
%iPTf@BlNh3VdOl?A3[/<onm?DCfaT4n?Zl4YTJ=7*j*,a;lY:MN^Me"%YC7B)]p?BI_hg-qr-?Ae4f>$;JY+tJRgZf]Ei^OfCgEh
%("GF02fp"3eh>q>nu!j#o04`S"L>@^"C5SE#;5Z1./_YGKo/BKD`((<)M&6c7jkF"d&tW/'7n0sdq`kDGlRnM2m`&u(D'_nE'EQ#
%>Ne5\;/;N=hV*JX_>K)l*D1jR\Ei=rlpK[!9!V5^3+][+^sk;M.D1hbpu^g4RktuL)5sO-"_o&(bOLJAYB7t\DWSp"Xc;%HlclC%
%Ch4pR>[VX5rQ]""%(ZllSicVmc-<<Kf$@(p_YeDL=;_ChrZ:d5gh@l#hSHVN`e2=_4W'[EAlrmklNmRaluYX_QX;!i2+0R/<c_p@
%e[N6@nG>0)(uYC'F#"W>bL"$m@0tR(2mf@+W(*igj$($9N1Q(OL:c:4I3h+QdG")M]CtX[2W;S"OdW\*-En)_&QlM[omQeVoD=+5
%KJqt'5nS$Z)SHAO\io9PUK/o:9)FZu_fHo$T-?T"%_Z$FIH/-_o,CNOKAWL-S^e$:iXr,4-hl!<p7?BPs!R6Z[WOTfF4#>qiHJD\
%DJ5!+/,N#N6^g=YZT'cW)pI.sQBhXZ1F4RtHhc_cqoS%HX0STJ"s2qsbr=t7b/u%T1?+55G3fA`4&c-ef)H$9D1&Mch1'hN+5_D;
%q!Po3p%8jqlIG4XqoeV]k4\]\4l)$h;Ak2JBp!*rGPK##g,o?.Vk:aZDJlD&4oVS_a76bP++O76L[L3G5PU/Or7a0EomWJ.mZ!jO
%oum7ds#ue>Vr)UA5C2Df?NHeD[pH+PWm]qns,.@_J,>9kqaW^8\2jSUc[H&)PHVcamJfqpoZr$`k.e\(Q!]%,B<U1hfr7PVmpf7P
%DuAfp5!bJ?I*LC54PbG[S[ZB5[;Z'i>4q'nIdm2@r3[KXpO;tTO6.MZ]79VL4$WcAGLarp_u.u__LMHLDuAfX+%+=rqsdoMi^h&Y
%qFPr'2m7pZ^AYD;cB$lXdDmp?%@[4Gfd9rohl@E^T\o9PrpZtmdbaugGM`:fqVr[1s&X7XrqIG5pU/:Vf@tc^:>Wa8lPEq(qnE,6
%q5^JXlau'PkjaGcHg>$frUAt6iVrdos8!0>2EuQSmJ_;o6U14GnbV'K^%oQ)riEi%J+lfWm@E.K^N!c0fg#Ju/)P[Gg&IL!`g`TL
%2BR53A%r.qpj`<clHqOPaL(DcpZk$ElHk<-)1CVqdgNRWT>1A`2a@,\)]uibMm*!=-4RZYrI=e6\))T"4nOP;)M")2gN`1VJ,S3l
%Il`qN2h$'2"9,J&E8$rAHi#>Nrq!W!iS4>.ht^<8n+Zg(P7_n+rPllB$RR*,DO.cXD>7^8m-.">-Xc.hq<#lirnH>q5PbWVchu$H
%5'uV/\%hdbT7"'FjMQ3@)0a$K#-\!3n(ld?llH#iqNH]L%r\7>hP[PSoC:/*[4+/PJ:!R=XP\Eui4l[J:tsI6rn.t<%,_$*j-tPs
%p:GhR8cSe9ro@k807NoSp\sH)s7\anWt&b35N^kbO+7$"j1g!?)m`%!Hu4?2^O8#,r@e3AcU1;(BDuE=r%GhX]tYQ9n:'u\F*mo[
%ZZ#i`hgb$Cs1a%rSACJYp_FY'=dXtW3oCtPT0N+q]-$DqQ-6LmcHfu^@T"[$W\G5ePLV.Z!u7VE^A,ulIe+F4hEV##"XP&b:SbVi
%W0]cTr4uTUru<O8]P23U*?S@S4]g1DBfEo8msO]oDh%Z#qp2a?iCQU$IZ@/V4jYrP?f9,aq;fGkmm6s3o6nF2rmRe6Ie<WOT7$/m
%]_Qi@eMb.+E;IR%T,L!SE&QBS!OP7&U2+aO@qAA1V?aH(P[X"5H2ZgF:LS;LXWdHCY.u5,i3-QBhKo&&[>jWn[b+dG<,)-r8jA&C
%>'n(+4)A2<8mBY"rMA*8_gEq]:+$C_lYAV+R*qP3CPYpXn.2/K^MgdCA3:o%lnN=uQJ?$3^k3lBj$cG"#:%F0DH#^cZHX[gn;pto
%]7lEMpGb[4*GTM\@$sh_4iEs<[mi,KE:M-0)_[0E9rj"1W,K_[TRORnK:_Jjr1hn!r1:ijqLpt1du-*P;;9VmOK$[*%bHX7`-4Ck
%lN?E!A,tVriV/-bKn!0,&*F8llcII%:@`J,hG9(_e$e.^DP-2^6Q8%W`Y)A:_i;_Q)>)Jb^O,XqLVNf#M@b[_qU(biGq4StoYE2o
%."(I1\)7/?Va("8^&S&i#QOIN]CF1Qq+^GD&)R9H#N)e.XQQB+anZI>bnAE93B,&s![r1Ka8,8]hbq:k%mP<QSqT#o]oPDSpslQ3
%q=s3,[m'epO/R<oV%V$246Xj&$+eYS<'h+q/q*BV%k%qqo_8q\rlp4eX;L+Q]`3Y'J+E#W^B4chQC2aa`QqUbH?PhXl*L,5pVEbG
%J,I]l5D!FZ0/,uE/K<1-Ie_<3R;SX(^hQqe_/%iZX/47to4*M5ctUjuqj?1pEM%>O4l]2$8:8.\c`GH02$Pqs0STDkg%T3Br7Au]
%r;.9gA7,T`Xa11Q3.(X[T3paI\]qo/i&`$oRN$UfEnLWBbL2l.oQuRZ$+Cai[f1/N^&tbGhK\MLs84&k8n?QnY<MdW]lu\hq<i`^
%TGDhP67^GXNE_:dpNYMY?`M$=Z+%p8MbMFV`ui!U$0g>mInnFI^\CV=pqGPUGSU#O``YP#]'DP0%6mcDmW7L5IY.QSM\i?jf@#=O
%`lcn".C[ajMpu?e<oHu*'X0^VZ(eZ%fh$c1rT2XAFMeM%&ME)&bH34;_L-e]s+iG]s8-kPbM7mZ[go#,Y%\_JCBhiZ98Gk-X8hAS
%$Imktbg4E"59I7^o"eKCk_lI(cQ<Af'l:^15Q0N2?[_Y?hFI$`pm]U7B(:e.r4<JY'u"`=cu<q&dS>).'m[42eG0+3T1=%1S=4ic
%4*0#$o#hR#J+<L3IQa<J!C\DD=Og=D>f`-=%VamoI]SfDYGpR:Cu71#o:(7+!;bXAf"&AcgeH(l$aosRY2k2affsZ3HD02hH_COK
%,7XZhj$ee&"^[AcU&b&\4h05`,o7W5n:^`aI-nnrO3fsH]=GNiiQ'i$lc&0C/jK:0r#tn*Nh=X)r`I?H6MGs>=0:Gpej'*dkh6uj
%eVhVcbb`![i`b[_@sZ48J\l1GNU[S7S>rJOrhERSpr`g_%X-+P^e62m\/i(8nC;_II/W^uc_%rKd4^"0YA44;jbNm3_*@n`h;<\N
%qWn1NmRQaGk(?It.Mh"r2,eX3o_$gciX0jVofF8ok>^p=T3gWNIf/u)\N)ss^]&QU_S>pZ<!f"CT\gd)kO4RNXmMHOhgY4cq]C:\
%4*sW7rUPHj<_[nKdI;L+4oSair5IRUIs$.<0DbWn(=0k`r%)(Wp0SnVS\]:;5%lb-FQrr^+Fa06%WD-4:O[ric^,Ia=_f8369FqP
%IfK$([!I&^4!/kVKcI#T%.uJ_!JJocrkZ4=]_h?5Rm4*>o!:R[,9T/i/1&VdA>W2p6Q*R4fb6un4.8I@V2unV5+DY/ruAG>XJ4l^
%"$EB7emftQe;'VbfB8WQIVk]f>BoZR^*c.pft)[Ze*2(%4OfKK^LuQ&f)9s*?f`FN7jWQ35/%!^5F/"ZIN7jtT!b0qNPj0%Nn0XO
%j)FM2AK4$_mX<j`rAYcK53+QCAK9LoE#^'__qk7cI[,[u$lXn,qqH*];\tDoO4F4`C@0f90Q"O]dp(a:l6*tPO411cLBcU7RZ6mb
%ne(Qb=PVq0lcW`sdR2.U*D`RT[0O@ZSDF9MZgD*c4\?5T.?2C0h":=+h5]f6@DL.8[MrE4NmH+SQdrdP;VMZUI(qium9b$(5,s+Y
%GrPBd:lej6]A`0@DV&a[hi5O9iR7NC0>$1V&#2g&8lef_IaI[<SThurWnXtsm"U&BcmSjbVpk,4DReGt9>CCBfX/C6LGkLtkl&.7
%N\onHU2fq^JY$f?Z6+7jDqk+D$9:3o?:B<1/ALd<ib"B,]lJI/fDasT7_^Hee6BTPMHcLV?%(K$0=!;Sq6DOKn,0>ugT>f?]P[[o
%fbfc4%hiebAE3$*X@Y>)NSH;B\:7afhoeLbdF7>MoC$83r`@ctf-=L<S#5Xc,AOY(itQG-//k5>E:1;p\j^.(d?outc]@4[?^e`l
%N;B!@o?Y9@R8Ugl``Di;\ObXqqjUHMgLs2EhD0-Y*<Wnc8"Po*LL12lI4[\?JdTLB4XYc'c+?i?YNZQrp&tDaVtF]4iV6f+,HfX)
%JQO2*Z#+q?(6:aGP(ck['\]']2G-f=YRs@NPAu=dZ)6[ed'ima(ts3?Ch1Y7T$G*'/]YliXgn*'!l:6CO3b64HSmgX/uC=mRVXHL
%C;";o<I8TEcaNY-Q=NQ2ms-to%^o[n:.npToo1ld[f8?kEY46elqR1WXAS'GSc7?aTl'*3/P-"4hstmgSX5<piqc+`Dqi%YOs?U[
%UDri*52IcmXWZ=TJ"n5iq<3=jjl;oahWs0<qfb(6be:Q)*Z"_,3qkbDgb0"Qd9WCe6ejim>/':Ai.(:XIkfP`DIN[BC4*HG[`EVD
%hs&.,d%lpj]3g.gN]<KSm?!?J<Ha;O!p(9qmeLr$=7$j)s4u0"GO6PDdJ0X\H[W>0]#_>)DjB?^-B/I/Y8qtFq'CU%BLdHaNg"Y!
%dmMm`]jBoD,PBP&/c9_eS^WYo>2/epl,R*,gMt;U)L2uJqD$36jC=(r/,VLMg/1)#r1"h^[_M%H0R#,k]:==TIqSWJ:2d?7!r\Kg
%5Ao2i2jT3@&mCP_m+"kO[@WAM`JW?LTj?t#>:KFk4e7$);O>'$H]<G`Nbt6a*%QkWMDLEakrBMQ\&QTts6Q2hfLUDBP1MgeJ!NV4
%R#SIMepCV;g]$Bg80h*]a[@=qdR;dFR4__:ZYTNZ6IOIJSUUk72p4d<YH2XnZ#0C4(=Ec)hYILj$]4LKl;sHfZ!DP<B\WHEM57>#
%3rKP2j<;gS]uIc@`O>0kR7R.H=nHHlL)g_"e1\.(=.<hW?FK]Dg]#_o$JE2Wl23WH-L]IYee[!uIqp8L3/^]NZt%fNAgc!icJBYV
%aO,*F`dj<gj7_H>mAm(jr9EP=X7D?uPVYGS9&m?IC5M?3]sj2=iWeV`(7h!a"$4&BjENP/(@q^RUtE/;YH;06UfcI!T$BPno0D#b
%1Qk4UY#DdMG-14T@P::T'rY%lgIQC:-OKp=D3<K5^uqa&>hV`pfco2E(E4g#LRNP\ms-tm%^kbfq)s)ZD<Y,qA+[s6p:')/kA]sb
%'D4u[E@>lAZ-NJfM`erOK'17@]@]Z$>@cLf1(GVV7Rlt;Grks8e8Q.lE,W??rGjgEY5N^:\Vkc8,DjFr\b:s6??`jE`[9BII^PPK
%TV=8U1%XkX::`C?p6PN_rHjHJLjiE0.I]6%NJqKYfr\,WC]7crZNJ5#9'agI<k:*Gmd0L]qp4$?c;`dXDrrck@Y*o@ftC+cC&D]t
%LQeF=r5dVa>O1[r,2]eVD_DXKl4""]-\H\%P3smS]f!*4s2JMSXX*X&:r/E&ag]:EehGu>IqLIUit,MMVFBGpAp"R$0"0B&.D%H,
%[`r/Rjq.K<T$G(Q?!P;pgtQ^nbC&(BS]*]U=]Bd$2k.eA7JfhQj'i%mQL)mLfsZ>eR"I36e6^^uJXmLnBstM+DX?q"oCqB&:#TLI
%A*,NU/Qs(OCAfbcm*7<<[XL*"@s2d93r]Vi-*[Gg9Xqc-^2*](</*&#+[4C9\^"0OJXr@I=N9%j?0kZIQ;c;RSO[[:r+[`0s,O#+
%Y@)[?\B^tR>dnW2>N<>]n#b]-]YJVO9XX1QDAC2+\hH_`=8R1rAAMMGIK06!rmb=Mec5(%oXd((U>mHIUHI9]Zc]bZh]'cTYmY&$
%K=RGm;oJ1:1M!tlaL;&J_)rK#m-4G[6D%oqo@7fl1!I,oh]'d,oQkH+fuk/r4keHa?-Ls'.C*af@P.JMp!K;;bWe`7EA_P-C:N)%
%jkKJna''gl&tQ;oU:jP8Y<+O`B9DOa^DP-XFC"ds==+b6DULVaD/YYWg]'BGGqkP"d)j.\@Xm4%Z!3,sg]!2CXRA0=bK`qq1Z3/P
%nnmuFCKV@MfLX2A46tnWN85EtkE^&QA7lqI0>(`#[Fb+apo`:3'03;c_-'2h_HjOM>"*Y$ldl'f[XL)qK=AOcc9HANd@I8F2oBjA
%hj_YCB;eR_G:8N99lt<]m`^`/j&b8#HHYX=r%h0^<U@K&TlsptmomIbNC-dZ,p[+A&$nR%Qs+]7lcojj2Li,oA,!0P3r][!,A.s&
%9skoRI,"S4E?(/\0?qJjX4h3]6uO+7m+/9VZ>KVV*iJA^o5sgL(e<8Ia#fc-DhW,!J&Xa.Fe>N>.8ab]0^PH$W>jm]@WgL/YD(Q$
%4?f(OQf^4bo'ii.3rcA-eLjTp[$$Jio:D-p^2<l+;GLnPeiJkAUGtn,,jn-o'7I-5]`edeEc1_qnK-SqorFXRMgrq!q0-DQaq1)>
%*6S7D(OLPark5/pUA*%Qb)Yaa`TF`f@(0ahY5+!Hm"m7#4$2,8*Q16iA$b"Dj4j8lcV?t.6K^6bPg(]m`TXn>@(01X[eZu#*#9dc
%Cal,3mU?UmNOHMd^2<l+:`a5hCb0/)1toI.^5EH41JG7%hjMXXR]#cG5TaVn"`FgYX[Ts@rm"C_m!Y6n#051Dj_fMjnY+hXYWL<E
%g\TGq%b\PWl23?aa5SH%)KBuPpoa9/.s[^D_oZ0C!Ugdj>7=kW.;b'-?*dTgfmY29ZMqjJ8NY+4@tS,-]f2'@4]t9;\jQ,)=\!\e
%leW-)[XU/tj'm^*SUY;7dB1g)\&Gi$hj__B>g+E0Cbp7o`pR+@fW>moD>e2sVo8pg3rR>A7s?lGNB+^irn^P59s'aabYi%SPrF_@
%:"ZQ_Z>KSU.?iZ6)b8*?^c53smbVQfZ,jEAhj_b;WVrRZm":60Yq(ubmu7Xc2++gs?S1B0r+hnL^FQYkbZ*F9D0q1gg]$B(7uKu]
%p5rF5pP-jlq/"g#1Q]7E>^kjXigm++gL8k!n*HghVbaK0SUKQuik=$NdluO+n#Rb3&so59Q+5Gp2`B<kofLp,o?e5j$JF`-i8"G\
%=&W`d=g$Ilg[s#K$;TtPSUUh&[ts'^X/,Kuf;@q^P:0rV-JA^gm][O"&Z'heX_\a"[f*7('XN;8e+n21HUZh/eb5R$[;Gp"/;boM
%C3F4:YY[oQDX:)a]cu1<I^P3!J'$19.hoV@O*K7.2tkk+ja/5/:7=p4dV,tR!]:>*C@7%I]`QnGJ$kE[k9@*T3rdJS``ml)\&GfC
%h]#-9>SJCmq'"T&<K+ELb>nX\S%i,uH-sB&kMJ;=Gc.``XKcX>GD]67D2UME`Rr^4RYHXO4,('S5hjknC,&]fQDa?CS5A!6ko8`r
%D>dck#4k*b=<t".c;O1=@;X!0[eZt1N/R=V3rdJs`>`66UOK\sheP]e1qd"e0m?Md`8[oYg52M?o2k;r([:g=qOL3tHXXTh_V=5A
%<?rHN.)&#&'j4O%McdMk?!AbbD>pOYdisI;cG+-?+]Lm:L%_&ahR<HCMB"+[=tq&>`tT4<;5EV\II2a8[e5W?*<%NckMI!]YIqN7
%ff,pUg\ea$,SbsH0A4Ie@41)&G1rM:g9/,+qcE#!X+/IEl$#,@@KPHRe/KjLD?!p+P)f'Z!p-1/nL?Wf7VlpChR;sTFA1)sk3;e*
%^E[VSlAZM7[XTqOl/:uR":dKI-d.O[P?ZeL[r)*o*m*2@[Y4[OD2J.L\ei9=p@%`D[!2l><oKWX6%m!cF6n@XDVqp?s10RKYf_<a
%cG(mJ8ppHYo\AfHD>Q4$5K5`V&,F37,&6YXq="(XplF]uYC>lX:Og7A6oF3]-(!2oF#XG>*(1/9I28T[m2h)h?`0;Rqh&:DB)i,D
%<3sKgS'm<6n-r']o\tut4,lVME5:,PLKf,(D%Kej`bZ7&@nMCsja)qL%p?*/Kpj)QV#7tf<iO;\:2iDELdlN;T,:b&-C6"Kf*7/+
%;&9Sd>DUKfn^%d@M#!ID<dD4!"b9O6H_q$0R';^!0XjZKW=(:OaY;%$'?kO$;gRSjmOaA2#jq`7&"j[H+*3UgPV#P7,>OX`o%Jj_
%V8*?lN]'8O#Oqj)@'U>\CJ5*I^216SR>Q9M;EfYC9_gJG1Nq"&"k\,\_:C)<Zun"[m1O\ulZ$8Rn>ccsC8WrUb+cTFjr:L1IJ3<.
%O$A'E'rg7<@0sYu9ne,ifdPB."pj\6G`Qof&kl+`-u0Sn*d)WB_2r_K&C%LNCnX/<Lo34nnl,B\0[=6'T,qE3qNtZAUCKGSVVInS
%9!EE8N$*MNmP\]hK))*^@Sk>L%(S^*);6J/57m0Bc/6IWCk5X&>hshPhB_ldep(mRHa`t\gmh&6cIi4fdOY#^p(h2=,.Pal!eI1<
%I(kJLNm;$fKUtI]35!K>fcgj#CDO#E[e?B=;4&krLX@FSH8)/-fmKalS9V`#UV^Y/^n;Z(61(@s[D.<7TuRqIB+ChA"?pYHc5t4F
%#^tGYP!A.cr!^fZ3.HXg%AH'E@@p=4.2raeE%[\6@%;7cg7(GL7K?omi"at>5W^0$;d'-O;dC$Le(h0p"-$)sd3o!U&N[<2_:=pP
%Df^>lWGs:F7m2r25)!AcF)OgX4MZOMCbFC5U'P$';[VP/80H>2I70^9$6Ah[F(YL%J_j&:qD<#eJ[o/T'R8OPJ5cH?c^e*14pm67
%Wo>0qF)gMP3g(@%"a9;J3Ts_iJW-G9f8^=MbUqVh"lEb)dpb?"(7PPVZ!7nQ:FA+tP_k>a3-(h*X!Tf;<Y_54s0toe)#ZEZY9u<-
%X4*GH)RVCl(,QGfFWd5*Im3(ha9SBKVfRKncEFCA"rjC9J1e\-OtSr6kJbA<32Zk:ZiLYk-FGO]gsHuAkqfTDg8Zt`_:JE$k"_8P
%9g$9tTo4YsSAPiu6mgJ1R4lek$I^>q?[":cAj[/b+*LY$o_Lg%)]8+eC7l`*"FlIV6.n'!iEWcWDG^Bq8<3aY'?VU`M6!1NQp&Nt
%>\;.[BYb@PdiQSZS6\+iImd(5Rd(4=QBE"]XAQ^*:k'E94TNrI/Amg*9FJ4`i5p-NDP>9/e5;%0i5:t'$OP$*ZbWh(3\C-[C^PrV
%_sC2?JalV$P7QA12!+ng+)l<@/.%acfVgV=E&=H=dp*u.q+X],qRF*dXb,>$Aglmlc4r-jVD(1c,ksC0SO2`QQJCHtF2>7/b>OqP
%%V]?TD_/IHhRJ8+`\)d_VSQ$Iof]Dil9hH/'=AD6!YQ;bJh8f<dp/&uFs?9kC3=Ep8;D_9fEc")mmA/8m=m]JC<FD$Jg%!S+6gBa
%Ls38.iqs88K@uSH8/>kfTepsJ;OC:t9G<@Q*2rQ^ib/\d>T:jXkTl%q5q25#F\jR4P`^$J`84V;g)*LgHI1p/L@UT#Oe@7*dmT?X
%ZTn]5Y78^hgBoB`q/$/^15PST8c2OibdaG2fk/_dlD&kOO]i%%']u-Y4#GC'e%-=A[+.aS4ehY?#DsZ0LX2choe]P/$X9OImf6*O
%VGhb&JWp?HE=Vlq+[ksnb8ed[.A''S?f9Gmdl^03GL$4[#7b?6Go+:>:/csJEo"UiV^=BSF(pA4\-7Xt[7rW7ph&^P=1$J*+2CIm
%VQ];<*XF89!W7^="n.sgCe*FpC3*(LIk&O\dF:00HBr[Bgf;g\KG23'8O\WN33@m*B8L?J-12sT,j?Nm=Aq%KEsohQ-9,#<521T'
%kqOlHHYr\-KAdB!-NVgGfGJSK=ZR+l?/-p%SQp*l6lY(_rj,_dmY9X14N>iTb+1=DkLB7EhJJ<D;N5q8"KBUNSD$$Q!HT0LR6S?:
%)=`RpQotT?GqXE\"Yj2eJ5b:"':>IqkhlXb5*]!^o<>V@^ud4km6L^i<-ap<GJc8o+Vqb=(mp[J[hmdrp]HR5j;Xs]I4:89cAUB9
%;tDkO$5G+q_B1ca2i^$LOArcKo4ZbO,H&,QO[^e8,Ok'L/"o@[2M8YH^jlV)s5(T@.QHq!lP^4O-7XH25ld0'Ve+IaXBYrmn=MS_
%E"Z?D1&-B]nrGa/T$M;f4]=_n,=Egsk('e@'\ISRQsuhBig:qs"fWo*D@1Tp@010W-=LJY8b0uJ:>8afjNRgk$?YYt0S0Umpu)6(
%Es8I2K4R_.3.)2TR$LCO#:su$OaS;uGd&Z"3d`b\f@XO+aUPa8l,@fcrkM8;3#rU3qLFE`;EifBTG+(.@nQ4#'*EGj*mESj$e>Fm
%&Z;HccR58RBo:fr219LK1H8>)CtYgN%$Gl>k:"Sb8)tF*%Z<O/_q$C.RDEWAqJa[?&#M=3+C']<fhh!mjicfW+!J;L%Dj33Pl3]c
%5iB5Vk6%j_ds@VC=COLskLmlad>IOASte-Ee$La`q/B'<^cVl[;=\im*s'TrFZmc"i:O@Yk;i$1ch>P.NhZW]W%CXY*\J!ph2]DQ
%e9[,W*<YKt$pC\cY3Qt>Z+!S+CMEbgU)iFi4@]\a;sP'eQ>j%nHA6%0V0H.hcj)+ql'mD+*l(P@I=SQN4H<^u1PEjO3'W`_9;(=_
%MqoNRs!c4OLmH+*HD#2T$aFiSd"^(Zi9Xg>ZA9MbFafS!6e>'6j.%VmmFm'c#@1>Kb&%jJ5fZBnlsYO1.N46/ittYrf&2-OoLpk,
%Xh\h@bed*?J)L<Y_3XUN$LSHR5,9tg:Bpo?3*Zhmf\t;6W)BG/2,h=-a!B,>oD`kF!&!7ZPq?gJV[:ft1X"*;T";:8#C>*h;J:O2
%p`Hm?]DZc[/!r6RY5&DHn<tj8_U"dt(-1!ldl[=\#bG)oPd(lPO;lXclRa?K+kfKu2Rq58@[IAhapL-qKjT3C%\!<u"3M6b5\@H.
%X7.<F"+4Dn(p[jl-+/;ir.oDQGNg\?E$gB9T>:D?#6d1CH?3&+.m_?DHbc"SmMZJRK>Y&o_<OkOm/Y2E/%3s^5os46b3/ShN9XT2
%rWYlK"e1;64E[f1g57+B1XO%!*AA&E3=<7L3]W\VI-5F8X/rQf'V%24:kNED0g?@lZ;(^+kr^aMPo78Ca,hM\Qp0TY9b?T'FSmWQ
%&9ekJoa1b[+CmQt.1T5#6V`//>X7llE9[IMI!He2&q_G%:j*V-Ka&.UkL)BQd[FQqPsoM5n2JYM/Kb0+6Dn>7JtmaZ?7a@H^SCSV
%/b;2KY_44k9/O2&n7#f3%*Y<aC_[JujaEY/<]_;4WTMtfhPnX%iH+<R$:!G-r7[M7hQ2*Vq#m'=qTB6#M`RpL>/_(I9s>$9,fJ&0
%7,X1U<&4!S&'2'^?*-qh#XQTg"Ulou03BG8o-=9Ai.=7]QR=VR%rZkpK$Dh@h3pt<aDe?X]9;$7EkkFW^NE-XYU%hO@?;CX8:(W?
%LHB(0Y0@G+3H=<#S;Jb*:Apa<,ZCAmI@11O&0A@_KmCaGSoG]UpGSKGf<o2<giqBZ].^UhE*YE+*(:#1*eX*]^`/j^Dn133Z!M[C
%G+;pX7T(dY#RWYG\*<Alk_"4AD%$0ZUiR/b&'Y2Gd2&NG*K1VUa9a+F'Fa4Si"ndX3nl&==^1*t0TMD0#ojYLSR<>??bdX":S<>+
%q/C69Jj[[0bn[mn(BtgHCD\=c!cY7[qh_8pHj^aDk`^C`r'!KQ<$$]tFLereM=UXJWsnEPS\`Za9cPH-(m!UPkE,FJoa.)1;IjVd
%8*'p(l*LN(@+7$CKo(R1pNg7b(0WS7@lSBEaMqJO(k^7'*][IHk&:\cgNek?mU<?c,+E5FFNEZR`"kY_p>o*$D86`p*3j<%_7Y"4
%hHG1r+)M.OM"q)RCWebIUMC6X@n'j$0nY7?3mnmIO;HB@[W$>tp0M(a!`s7nQl:V+MAlUp>pNP7^a[^7eL\nY_o6!\ESWNLOT'8I
%3=7$PSC-hZ+i47=*e>"C75k8Nh[!a"<T*b^CkdQ$BI"bRRl$Vnl3*Pcim8nU,p@Dr:e6Lt:?Sl5TrKA9nT5OXY;WJpH"7SCl)OVD
%54+hlR@eUe3aIfmi^mok,@4lD@f>)m@@Wen_?-5E\/;8]UXj[2![%+AercEb@EtuCI23=tRD>qt[*W$l50TkX&K<D=@*5CI=u&%&
%HlgU[HQY1N&(q.9iI"D)[\9/uGTmFUOeN)WC\&Vtd7=N#8Edt4NPlu=F[,Vo8tLmKP]SF=@Mg(Qja@E;Vfd_L=KJTk4mpS!c,r$#
%@AD7VNb:FiJ/qRoa5JgGI'B':Kg%d4Z(auX6l+#jn"Ii--r[1nr#g'2[k!\Y4G*Y_atd[gQat'F=f;hnJ`PDl[;KC7WGbc$##1dN
%=HpUV0FnUn.O]K:jE-p90c6NP`T@qWC`ocuS0"9VpolUb6lH3U;9>lREF>OOi8eG%<X1)A#tDXr!k)*GQ,%cHq23$:5(GXf'FR<]
%H&5p/V0e;G!CnND3FOcLNaO$5H3%9>#kb,((HEcl=K"R%,QD*?.`l*YA/t9WKc:3L2`OjAA5Mnb8LY!)6s$ToPMfh.(e>'9d5J,#
%5ltH\W^%ifME"[RL.+,L#Qp.r*eOr:6bjb]i!ZMg$Wt0)EH(.UQrn6LWY8!t82Bhd,]+][Tm.+GE,Jg<;&FN\93,V&6IZ5)@JU0V
%NWb6Y#UHeh:J7-BBjpXs:CfB6J'VN\AKF4g%g2&DHNFQ_nL-e3rKmu/@gdF/c6/\f*k;<,F.+,O1Q`rlE!]ufGhaX@;_:B=>E"P,
%SMoW#aG4/W6C)\7172J#B13qLV<;k;nS9(=O@,hEqbY:>SoMATiJ`CW>=Uc=K&rsD;mD-a$'Q4FVDDpFRbhO9;Wm_)/0+u<dQh-f
%q-gF6L!@Vi_.3TmoNZ6oA[TKU7K_HW:Sqm`k:sl6pNSK[]-N(;EKH_A`8f/0R3nHka?)Kr*DGrtA44idF7i<_$DRnGBiFX;35fUJ
%i%&Ue4e,ouR+[4riYf<JfhOV67._'1Qtmi:H?pD4X.5Y2F04VOm6VOcXFIb._3RRmO$E]rOQ:JF<[B?iUfTO,(D3p7LT"5$_$cXP
%-@Y"['R*"SFI=Y5h;an/[i7FFqW]%8_Xde[Eh*]AiR['WMA4s`:/ddCjL?Fh[O$kn*n;+'(b``XUnR;AoW6htMl4eETH<g;/>u7?
%a2&O%Yio/R+dgu[]iYe3m4&E/dGGH<[9F]Z\T%=!k.l:[j]Qu!MZo0S1N6j-EtKj*q(`c%QVoa[cNR8OC%4"r;=+HM(#W[Wkqj-+
%%[Q[gUV0bgG:)=kj*B*,QLn1US1Nn?%a*4T7fjEIH91'kAA+)\e)hE5cId1t\+B0fIHn]G-R\I#gl"(8Kuf<:ge[[ArQEe[r!CCq
%#)YE'Xml1]\JG>ijmR/E4J\X[MQoQ`TG+E8BI!'(&_+.<Ze#6Hh+ik5MTjG['I8#G_!(--3Of/DpQOP"p>C`!pA%+!mh+VkC]IDU
%79e\l4gO*F.%hki"N5(=&0.4,"`*fSo'XGYJg6^(.I.,f_bQl<1>)9$fnVGXcH49?(Bc`##HWrKapBV\D>u$!(DKT'QWLQT18G.\
%N4BFn5[]K/M$Nm\%aA\P!'rE)7RfNe[F(e&7qd]!LM83c5V7b]6IB>?.I.m35aNG7Da,eAcu!subW\Q[dBZ?al@T;FLb$ZM5$F'-
%iO+GLl#o3GVc[<-lQ#i\o<jXWoe5(`jaMFL]L[9%VackGM(eD7%YYreNaN:\$HM`AJa1=rX:Y3%e=mp@&pU,_F<2uTr?,.3l(@YC
%=Um;OE$F!YJf=cD8^Dl<oq]>SH,pT#*];-f=7H`/-HI'`P(^@'RHVRBYBYhu#(BhkNI\P\gp\E\W%]`[n;sIMN"XLXb5!Jbk^pU?
%V1f`sP=O;r6*SVu@4ol"(:AN1f?kmC@TX$'Eh@T<f;YrtC-[_l_Q"M3WeJm5[%OfCa^H37C!ss<Ub1!*oue)q'd6qM.sadJY2UAm
%))%o;\WKos]e%1pb2)kQ>FZT[VIdq60qR*E`skWBi>pP6m=P\m/0@-Eckq^%.7JR5_9bFrj\N`*m1B&6EUN!X!CQ(fTog,)2A]5`
%bfZsRB_DG6<hb,8SD!N@^$9bjdPFE58/bLGr#c.4m)n>lU6Gj0=)#+]bc;GfDF'iG"V58Hl9PjVdU<]S//!]81MJ"J/2\Ur)mF@M
%@g$&@"S0$2pe61nZ]#@U?d\bODH:3\^__)Q>XKhoBAhcK(3:e06[%t'Ka2GicLZKej>N3p*F<0?S93>%GO\.T9Fk;6LE3f5DGrt-
%E#NKB#0'NY=,?MsBI:'WT?&C9T@R(?#KOLHno-:*"3gl]]aHW:"q0G$FYT.R8"CSV99%_V!oa6Aa$9kG</Gk01*h%adL?t$c1K8n
%67e.N&R&Fa-<N`R9p`$<F+?5\H37:B3kGF'cEtU9bDh8ZB`O'qZG>_18CU(okn`kHQoR`pEG5ER?;M.`3]7%8ceuHOn1b"m;?dBd
%TX=9MRX!r=_*iE?3'!==NeW'_$=s9=DHFuVP)83KLB5p5g6"(Y[E-6f_ZE,h=d>_FdXlf<.Tr],bI,O-_X!R#<*r'=?^J.HRqg>G
%K#*-g)PmG*_;:3F%4L)TYteSdk^KFM$hV!h)&ZthbPE<_M!-18--;IlS[K:3Y>0k6Qq>0c,=DN%3/?F#`'Vo?jPI/&ajr1#'S>rh
%fO/0'6@Kn?<2'b3.U7XO#/eNf_]8**3O'->p,Td"l/r3SUDc!QJ=J<RZC-A]nNk3kZ3'qI6(PLl9tn^%C^bK$TETE22Y$K3mZ#+3
%#j,\s<`#^!W8tYSIXsnaZ#KL/btSOXh;eJclJ&keq`:Tp`AM=g:?lSSPOXr\AXjO`AXNuMln2Ri3og2Q+GEmKoQRh>/>b[r9/q86
%-`E7\p!c;(X9P<@X-]R1IIYW1WX6hMP-[ujC.6g4B+ZUI1ug%T_tcUXPL_3C_cDl1!%Tap]3?>VKF$,535I4[$h%1kQ&H%k*>ECj
%3n;H'7>H.iQ@o/,8Dp<`m9/4kZ;qr.=cdWA@:Ak?9p!QEXe%)ZK/s"SPEiF6bghoBZIra5Pm-Es/XhG&SJs$B,td<"KM9Ugr"/HL
%So>;R#c=bsKa%U177$Ss,-E1)p+%?>("A7hcmHZhbGYZP=RY`j2ASFG^)2Vl1)ke)F-kPc`_b.;#e8".aU"burF?&28\%U9+h>_?
%YNWI(pFCQ;O]khKEqZTrTFkIZnsOHQ$Tt]3062/",FH`$G8.:_JE5HbUt:>+JII=%Y/YmLjTNm#oebRjUHDk]ZLuBsT#o)M?rJEd
%&k])5d7cT?cWf<!I#Sg`"I3\`0QN.Tl7,Daj;e;.%LoT$=TLhO$"ahW.UG*J,j*2ghIC*h(Le.t_m63=ADkB'8?BTGpc4dIc5r!(
%)3K)%Jf:jeP["1//L^$h\d_R444?7YE50JA488Nt\3(OMd``juH,Aa#B4:$%?.Pk`J&6,/TX[7dM'mS"=c\@`=:]O$TI%?rOUR]%
%aCM5u@pc$K,gLV1\#J$!@iKR8JjFq/Zk&'0n=rp\aK0%NIs%5kU5?S3NN1dGI`MN._`/FrJdj&>/oW%BgWM+-e4RYW;L1\p"I)hU
%UN.p>YHEOXFEl8)A>Kk\/V:]9_T\Qg6-rJcHK7RL3%]qqXpCT:o8IVd3Op"hG`c`e'o!N?&5uWQN7brUMO:e[0%<7#&<[4IJuu]-
%MoP1=T^4DRs7W\e^HF%tl/bXVVd?sraOeTo#ZH*G=q_KcBGPjpkn?O'j+f_$iRVUr0h.KnnE+(>4JXg.s"js!!ITG=!IV_#I,3On
%,$``c=``J/;s_6N(;k:VX>6^,U"L$n!VZgX3d*lU^Vb;_Gj<RJ%H>>Z$uj!PeP/:;E9O%ErIk94TLaOP!(VFh1.7iYJBCFu"uq4/
%(EEStnJmc3M[XP+Pnm+'n.V0ha>hg,^_^5mhukO_Ri(&h-8kI\!D^/Q[961GU1gkn7n65mKqWOm\\U!Y)KEP)1oEHU^_&]YDl"Fm
%RNOItM$&cGd*)sYJE%=kV046l*7m_]?3Qs"16BX0er7!(AX,7c38iIE+S=WWogD.eDud-E&qf!lZd:Qr7iZINUQ'oo"@nOi%QM<@
%h&m1eJgj3\$2!um(h:rB)r4['l9$:$3.co_PB-";cuHi;gc44>QoO",WccE,8aJdXE52c%.gMS./udht%QFoM3DG//Nd/_cJOBu-
%Nj%+W_uW@^>;DF^^hJOf8k'e>SBe3e9qoYe`(NjVj+&@,3=*J&a/.6A_o)]-=dj4#.F^<+3/Di,*:+-RU0#:jj5*VF[XLE9'M,?b
%Ml<K_A>;Dh#`$Q'6.mS9lq=2oO(Z];Kqg3Y_.j*FA@c7X.3&kENUCeadQO[hcbE1SV!jc(VuAbWq>)aF2=61>lgt8KeM^/5="6bK
%2@JM2)%`q]5_V(=%!NPG5Glnr)<Nce6bPg1YRRd_P>-_rehV%/)f1Dff@j]DY+.qQj563AXXAjm\NbAK5g@6@mS?aD:bYc+,[R%f
%cL<-f:7Xa-C!c75F?W$J9);P1%_.Uk<1TA0NQgZ-^_kS)X6L\oV"&D)k6Q7!'3=9HW9W0U?CcFJeN&4"T4W5+TTVf=SR\#Z"A\5%
%^Fa-#L"&,AK&r#l3X</4/!&1?J4Wa*X)jX68_3Fs*%.\Q&"q+`B5J,7S5_eD2M]g*\K.]p@GS;hIQ:<QDN/pQ%dD'4HnN3T1>4;D
%E[]d@N6\<3*%JBT$T!qu#LGSk6$Im$Gc35J0"4/i3Io97AQ94B:mus7Ekma38UQ;0M.<KJMH.1l]dicd;roORWZ9o>Lt60<NaUC+
%Y,WJR*&P#jWZ8cJ,KZb'E=hL7Wg^RkrCs32!?2paB13:TDII`fj>];.EDkk"P1`2%OZt!^[+FV`XP6kDps=:/93%g,P3F72p1h6E
%Y^"RUh$9&oOoTVS-,]6_GH"ht=33"Y<%\1Jcm;D6Sf/Z%EL\>=$Xi,tUJ*9?0j;jp/054oTAG.I_@U(\4WI&<$&G`I!4s;)-'QNi
%/s-Or4dmF%0p)jZ(=a+r6n[hDp5j`+W4LGKo&D.^q1[8,@(:sQJnl8@i(\H-P/`1XDR":Uj'$'8V/\*^@X_Ta`S(7-]!Ep[$l;[@
%7QFG5$Y:_Z;G%i>A?'/!G_-@TPu-kg"ITTs+dEk`"<"02f%l&rJddn7YF:AZ'U`.<]uCbS$INeb9//l4<m/b\'H*k3>1MBGNlnro
%F#$/g`^_>*0k@Ks]k2.;6`)d4L<FI)a*?\s,*itdOK"4A<noR,a?].aUonj;a8d'"(lTaCGR3:/@$XL:HGtmj;h:@:da;/P0V@A!
%odgungKV?Nb`\sE68D/s!AI^bU)93s(F>q79a2A$1)WD@R9D-]k]nr1[A9e!7$FV%PWG8+E6Y`,nP(AY3g9sciX3#&i9gRQSJk.u
%G2qg89;W1I/S.t9JEj];/=F([]GjM@at8.(,_M"CUSgeKJM6=)+]OU5bbjKf1J+H)7^B=1@$qPK@ons)Cl=u^)eR1lQo.Hc=Y_L@
%//cA`*69rSkX/;]9/N%DFe0+<`Di97e/Ar)R]"9Wrf@:pOpk)_&Om4nA=tWb;-Ai'"'5q&0O@=+'C6r9ZV6O]_rR+2al"ElU"M+k
%VIEO\&Q'MKWcY!TD`-Xt^uZ%M3gCrm?rCW"P@R_@82;5fOplFUX/geC1@Vh+.=52h1,+YW<4=9<A5JB[ZV8+`J2;VI*G3as"9jk`
%6j0S\`=mEMqZMUIqi[W1s5`PcO*ga-?Z@r=*:3@YVY.9ECme6=%hJ%+-cSeZ,'G7NDIXGF[o[S3>;h+X347Y,\Vg](WZ]rq7iYfc
%]+opC3-)DBnk^X^aiJC&G_r[t`bg@FOBR>cB*g].jCu,kpPN@c@qZ<!#d9hLjBij[0*t.[7B!cLT#I%qd8orh(er3a`jt#I\:Ku)
%$ADiZ_j;FUG4+ih&\JQ:L^u_dE@>n""[sqRVKNU/YIGs_gdE?UG(NS*[X>Msj[$4u_&SSE]=;K?;lUSD:k19,&k/s-TNETY]isnk
%S7*9X9]BWRXH3XobVZ`8!_%CH43k^<_]ciSMAhiqcV6463%Whqs,pWLL#.Pq3:[fio_h-0Do1V^UW6FGo26qpapK?35[%!s@6ba9
%,)IXF1t%Kf?=a^H:uChj--0,u9)ud_Pj$5%]+,Q_UCo`?8ssp<b3?k6"q=]@&o/BGNp;2!DZpQ+C",E;Q$I?:&QJaOTkc(ge5@-;
%dT[d'Ke_*06YgRkd;hS4%#[f<*\F5#&8dJ3E;3ZLI#m+jSlS"`E=B0/6BekrX'4r:TWVF&#"9DW7;rQ`J\P9cD@F\V@kg$L5-/;*
%9GoDb2RU]s)GD"g9r'@O(VJgs0+u/TjQPCXoZ[Xgq.?Xd5bLT$dHZ4X/ZAEDj7jaoT!"[-'a#-E;0R_c7kp>OG>M,n<=NWD_-UpB
%]TSHj/BB,kNQ9sN?C>1WDP*?QF"3ALQ_T<\))p>%=[YE@k6gZ@j9F%bG*I#]i3oqc-Zl.YS3[S+4n?o6\#\Fg*/#V9@Cr;R9m]+Q
%;FksNB;7^m3QfgW&^d@L$_q_^#[2BW`Wc`kO^qQA\pl9e!pq(9qg,+M4D-A58q0Jg,[KV,rak8JeX*?!hF8J<??6Yu,/$$D.J(Js
%%=4DfThB$'8L&\^;I1IO09Qs^VJ8F'&tNak9>.2tm`&7A5eL-^Q,bDod9^k:HuTYMp49$`+]m`t\W58ES3SXj+A:SMSGEAH5$/L1
%o(tu1\nGG1L(hGScM3%RD6hTF3b5/9h0S[c3oZ8<dbiLkpD-K,G[oklY\+>>\0Y^-0O#Ad;+]2edVh3SMs<S(hQAc64km*5KbAn`
%W:_i,>I\`fB75$?m=K%hFt?U+lbWoCbI<7ZS\11>4Q)*V.\CKui;maG)&s?4,LE]Q0P1]>cneWam`!"m`3O/(eA7`K]"mON#"0I]
%bYB/iCXl#X`_INs_Y)8Om*pk47I>#:M=s5D#R6!Sg<oCf'\TH!;]`AFKqV1WCY&Uj-_.-P#^-B..L]]dO/Pp0&QeEO0noMoSm(NI
%_fQY6]ZB.\GLt^3IMu6LnqJQY*6f/ES(4e7'@EA;6RJP>FCCYpAr^:a&WY1K1JolS-LX9iYhRTt-1'ROF0BWFI(k<Ol`i$6!_(AT
%j:>L[a%07]:s+"`QmBSeQ14qRW+qo&)6X7phhJFppnLkdbBPVK/*"%q;T=W$V[Q>R][/TCpKGQE5K&IF1^ro<bK7GRitE1mi[Z(Z
%*9uWgX'*5,!MD?<n4m4#0>R8MbVfRQb0d%O'taOqWWZA=$Xd$IJ1>dE\1j402lc*BY(Tjqc.BA@)IA5&;B=Mk*cs9P(>Odi_'!>=
%5]?h;)I=e]C3U>h.BldiMa/k=W`?\;f.:m@ie:bLij,4,?3j0CSu^k)\7M.-'e]PmiEtT'!uA<DPnrmV>giJFDA7]fp88g8JCUS&
%PD6LG2Hiofr2;CAV1KM8h(j>RKGWR[(gVs1I3UBKBsB/>ZCG2,0>KH6miP;nG>4nK@+eajDcL)SUkI-h"0ere#qFkU!k!R1$("7i
%[)b(CE<BtWY6DClW)eI<$@(N9ZUtX0^^IWJP#(<"%D2I=GpZb#\X:cn?+]r=bBLPo>mp)cGF`\nZhqS)qHYp4lKZt.?8RGkJ4R73
%gI>5<Wa,<jLQr7oneSIn7N/1[ZW0GX&mi*/9n$a^0-#pZ7Bj%Mf.oZj_Ws$p>/G&6S@]D?D%*uSEV7o"2(hVp>M*.AL8?`+[s#8p
%Nq_*7b7Rfg/_#^=406\0M_u0KW^Cp[663Vp_P*6!-rN'']sU\EZ.iSaDscIZ!,k'lemaJ+%8="@Fp6-#lZ)CPKM%FDo\[La=Q*Jp
%_ju,ik!U]+gq^(XNd&UD@ptEOSTO8SiSJ@^ioIM$`fI(Z%J&3S(p)r)H>N\D6+shi[09C?"6-`mYV`D0c]24[SSUg:/R[D"GJrSt
%mH(m/L,-fgEP(/SE=7c)mmeA,fNiR)U>'jt9hoT\BjE.U2[4<U4n5R7Ija=8MZCZX4&pEU%/PPl=l?\_1tGdg!:QV3;I,fB(D#MO
%^#Bg3!"e*[3!-/cosrEumf]YC#.g[`b#uOgc5m/+PD5HCi'DQ'TAXtXr'W\K@Bt1;mlQTcj*>Ua3<bJ`[QgRrRbSpd6^)81K8S,$
%=G6K$UBfT66V5(<>QIZZ=>W4bSNn1p7rCW_@bffDcg4M9?74=tdOf*K0Ado'[f9GaT`)A[>8ps44tY*8_lE8rWc!G37X+)k=B>]2
%!5W/&0.Nb:9JH6>kQ*Qf#t2cZNfM-f)/1b7Dmf9$EH]ZGnD*Q"ci^HhZD-]1O3FjgGQVk^`3ZMZ$2YRUj:W-q>"fdXXA5&n7!s.:
%FY/Zc0QLXG+2Bq].poeq(?1A0KL>h@Mk8tPkU3HnI!t)5$f!/^o]66Gr[#<O`A1^9$%5f`)c")pWA`82L'asVV+D,38i0aA`=gF/
%"NsXq&#5=R<3aYJWHnu?X*eRgea@.eA*c86S6L1Ad?&Z:09/YQIsG@JG<!)_iW]WC@t2=!+Ibk>ocEH9/&;[YYPTV7UCWGkK-3KE
%Ml2IY4"CqK3Yio=@0[E38hOk"Y`j^)4N"Q5[0<T\2._XI*j')]dE2JPZH7E7/2!UUpFj&Hq\N@:nB9R>0#)MQEU3R9#S2F\?5$dc
%E4j-,1VifhLr1ZM?Wr.U>\^XX*WR;<>aaC'.b@Ys%s+E6q\Rlsr"n,mfY,P,_KB^`2tn=NanEQZ(p5C0T<[nSF\U),@b_SfOT<mn
%nYs/^4P'V2mJt;r#J=1<&+TMt<!nBLqn&A&Gf'p(+7UD;`J9,lN\"r<;\6\c6)uoHr-lSdi&L9(&N%p#nbZ+TnG=$SnbX,-q#(>q
%X-<>We:f+38,<,5AS%P[^Rr6bFB[\\.RD8Ar<O@I[T48NM>@Ul+/`Nq_bAb^1d1-N,'H2rj\S/udJFN7>*D8:rO<]%7>o9`_VSs#
%I,aKG/'RP\!E\HP4Ue5!XU@DtIfR+PVKZ<Vag)5+i/_9MESt-,hC0U,ScNXVQ>DT`)"k+/bVKB_EOi<M@mENN$Y&lEW2Y?dn6\H$
%n6^-Epn(r'p_0T/e&:aRY$"f*0`25Yk!(Tul/N9.5XE-:h2NZoJ&JBoJO1?+"G[14fuue_WB''nj%hJ,7m]DdM'JX(#!0P>iXZLU
%.`oG`f3X,*k=+X@LJ0h$-.sn'fKg.B@ST^3gn0uhW-tcm[,>3eK(*1`YnJGJ`u^:A&&GNsh7o[F$Vs$cM_-th&fg$a+9MsC_HG!$
%FC\2U_,ZT83%8;oWaXX8=JjTD8,g3]rW!5Eaf;`@4eC'rgq`,X7kE=>/mo"DE+oWg9GO[9nM&t)dCd!l$+[=*[\L02n,YN1Xl)<$
%;:5e1&7#WAUE/f81/n#-a7B`::Yr1G;ab;j-gWGuDm2O0ZZ8[<#>f1s8k&f2k^[3E;DJ;7'T]TD/gqqE^f!rS1BG]kZZn>P!*XP$
%5ViI&ek8(>bllCY!25>Or!H)qd>S)#C6u`VQ@@$n:R6q>*$:(?BM&9_Fe">$!pK&:Um(iZSS)8-!p5,VOf<1d.00^[@ms;t#W,[4
%.057Z9imPlJ:.t=\"j-,W63Ma"Q4s1CZ.sW]5]<jM0#R"4N[ppbQqO<&HM;7mi'dfM5OLug6*%uX!_Vp8'M;>>cZpX8cVVapd@j?
%A1I_l8>tk]#4c`,ZGk6C5qV>$N1(D69feKoOqRh'XK"`=-NHF)#.g<)BK:ns`8q+%Y$t:l!be!(H6O6LOiC@ZN+S^Em[Tr?!!#m<
%M&8h>JBJANS,g@TV^OP+?*Di>;ni7GAcgm!R-@&-!;M_k(<j^gMd>^*!H8)mGlW@qA)U?7LF-U=8=9GXWYaN'!WYD0-XAJ.E!ir6
%&l9nTJ1@a--3-cBjsUc[%];4Wb%1XQFF0>]J@Gb1fcUC$X3",9!%1TA!>\p<!O-'$$VXGJ!.M+O0@j)&^m/R]W;n2/f'N7(i'/=G
%j07i[(>SsCa)TZ>h+C0C>G0%!UM7jd!*nP`_A3,jMGY+0a;-adaqe)u`thcr@11HJ<i-CMmHVB<ccGA3]n?n[e_d(:;3msj42YF%
%_@NQ^P*CYO!2.p>EF]*cePm?r!.b$poH<-$!2u!`"aUNA0Ipr?!+XA*#/h9BY\Vp4AIAKuFes>HUWX6'[63)QkV1$ln??m6?jrOT
%\_Y,_.WE7].Y(nih=j@2-K$:PJ8hnGLamqJ&7'r=J7)Fk\5EJA5Mc&;=:Z=Q,H:`q)N\$t!5_0'$q71=+.ss\!.]BaFBejbc"fUU
%!E`d!GU6l$"Jl[#,7=JmWhj+/4FgBXjZ?<:Ip(-Y/-*15!36X^Y5ZB[GXo-@RFXtH!*jSmR4a"lf?674/oUlW/o\[](I7<Q_BLtU
%8f(TKSII.'W$=TM!ShHGDiQH#)q0&@6l<_A/Q^)`0YC$'`L5gh[j);4?g7n!$gn9&-_.TL)f?f-d+g#u>mUTmO02T!OGVKQ%"n_5
%T+mNsVM"tT@#+P?pu/qlWQWk4J*7Yu&\\841+TS\I">jZKJ.9_2<>547WZTdkYPA=X]'qK%eW`sGm^5dY1.7::gAn'/'a%SmNSs:
%q@ngV@'YC<I/I27$cRDHLZ1G!TfE'5eRcI!?CCV-:hAe(eeF>f)R%DKb6,&*MpXgI(mg,"^3q[F$LN""kAr=0<M)h+_715e@%>8c
%cn068r,]@Y`iV3*irF0;Dig;6A]c=WmV+?bWr;Xe\RZD5K6k;cMFjPu%`=\d_cI=a:rG<$bG4JT%ahB2Z;l<,%a+`R$!oO=';QDt
%V:lWCo:QW7H/-I#<h'84adomt,+#Uub%jO#\\q!ta^N_/NMpiabn#hqah^6.RP#+01Of.q%eF3)budXL-W=7-R%0dlNQJ;q`T0/L
%@rHf*hVgXFkAc@#iD*5G&'*a=gBc3Sa5gWh74j*Z0fdmFiX[b(FVSY(4$G[Pm<DNZ+$g4I`09Jcq`kY]U]Am_%#u\=\DCL@6n&+'
%.k=I(5UG_VU/Xob^Km%DLaWF72gPoFV%=&Y+/ogJ!,kl$Dhofq?rj-R&Z&6q&u?B!Obs-?B?VCa*Nd&H45;em1bCg82m@3(C)G.=
%`HV+*9@qH0m\j#2S>fBd3YRh)^M+P^cr6bf?6"NQW)@?^&PtXVBim(t8!V4LRmEuN:sRb^U#OE(eoS8)Pq(m8:R-P+\Q]-VXTmVK
%Au$SQC:@9igF:J?=&7EbGE1f8eEmQ"EP'fEj'sgpJi3^0O2XpT3`ofG3Yk'dmp`^.*K+"GNl<(6a't+qYo$e[<FORH_",:`)DkYB
%]>RRS-/auN-=aB-!9;PZGkNX/2_CD+%qk`f#3fZg(N-sXN,r%JR%90`W;"d)aZ*q6oAe-9\Tj_fT8g/lLsi&</p7K,58jX,)&[NO
%c>Z@.-Bk_:pRj_iHeb0Dk;Z*#BTN"bnH/=((blK:dD6[($\P$I--Pnb34g\DoN2N0Zm(rb/-]?SO*WD_YUD_gcc#m-GE#t=(0j".
%5)KB.PS;.D@fYV>*IfcgdDA\*0F#nhD"5>dY.@!dGhT]Q_Vn>-`oge2X]-AaFo?@SkMi#EiGT7e`b.!pIV?_D[<"(\<h#2r`Anf]
%:=$m0B]n@if)m_.0p*ZhYap\8DNdr=.VDt>cG_fu[/"c_c?:4[Sr7[<Ci0o@=37umMquPLVdf[sr`&6(Ik"cEZ3'u4l_t_6jtJSq
%:;noFnT616kr)E_T6&tD>]j@9']Yolg%D^7&!atY.#%nCd_ei!\B-R;LJPm,I.U7JN1$5nY=#i`&ju&&QSkkA+k/kSAM&-.T]=S/
%BaFBFlc(c79",uUe25*I`2]H_1sFMAPKbq;ZKLms)Wp=K@b<L?0\KK+dkFj1d[j0#!39\2OD24VAf?!N)c=.L6L#T*(hp.D45AM>
%3%ZjL#;<4'YtR7.d,@VN>s!8?2[riY9g\o_qCA%ifm(6f1<eQ`FD;]U:.EiE)+'&O[':%O([Z#V%eED^AN2(\F0Q,omOc?3Qc*49
%$o8GScBdF$X.1cZ'!-2T>qjj'0!`*k!+TjZ1PkH8"&+?2mX?n+?"$@:@15E7&k6aU4+V^qfRiu(1-;Q=n.)oH`YMZo(dlZqpllL%
%@/&-c)\V(D^1=lb%)Cg9.1s]0gm+e,?Z-b`>`%BZ_\do-Sk3f:"44;soS0US?bSNRf@k._:Tj3Sgu7(u'8]<%!YK>f_ng+@@=uV\
%[#-L%X;E\/1P7g(I"EjaIttZ4T7FPt+V(A9@;!1p%-rBEVQ#BS!9d\Tk1#OqTE&F1$Nd;Z%tLKj&53I^!j9fks0.7CV#Voo>4p9C
%!*sPF!YekI:_o;r"jemiTF.?BBi;==!K%tcX-jTFNkpk)S8tV1MF5sS.]L"aJGl<(eGob,=WaRHkV>N.#3^XlMsn54:5kg&20nCK
%E4t!GQ7%?<ZI'8=]a^XQ0d[/bi?3=5bo5MamMu2.:hta9GD]AS(.#K(BnBl#/mppg^GOkV]_)t)Ts2DIGB!?h]o#H@-RblrXG+L/
%ie`9gL>>9Y8/SRP&<ee0KQ"fg!*j[l7St?f0ZP]*2$hSBAD'p5mR"JmU*WXXknO_HinB$8,;g3$0gd(@![[dmR$?)&iOHf_Fhkm;
%>mm>@4J)Wk\J?Mu"\,7p3D+qrY;@A@Vcs1.?=9jI9[0ka2=b<("S0qV/m!ut"t/[&V%>]nT0@Z,LVs22nk/DbE_[0B"t*b"NI4'G
%QPI@3oH1o<A!/n4,t`*\.+V%_ou?Y[0UBYtK/:fFHr/oW#13N<+B`OnmPq7Qf2L^e;Lel2O294dJ:"eX;!6t<2arpk-6'D)C,<Y!
%J<Jite[XmmjGPL09sX@E:,<^':c&g_2Q2X?)3ju8!m8.jajm_QmB-M('hV+A.,HcDJrkZdQ[='g@h(_R@amfKA%R>Wi:G#!#`SLW
%2OQR\8$7/k+K*meYgO$(l9te8":QhalZh0q_e$)cGs9Yf<<P'g"p>V]lOZ1a8@&R*.s2YJ<As'[6/QKX7qe29/lGMsqLF5]=m\PH
%LVC/mk[=mZR./o<A:H!skqTQ#!DX"uN/N,uS3'+/#=l/D-KW]iinA1ZUPX:%[j6!,?l0CTO\+bJ#KU]5K4db3-rBQ!4!p;&"2tEO
%>QGZkH$:CD%`,gn$tNqkcoIVr"lc7h7kjQD>]M*.g!57hJ4PR>i?j1ESjMc\4(srm3tLe\bt5H4Kc!RP?dr\a!9c23<R"Bs^`p=l
%@aUJkRLg_#YIFUAF$OQ.<f(+WS(Ng/_1Q&dZX>bS5eoV\nr,qR?d.#Ups!8L/RL>;%+IPgY%Mjl"+`U+E)aM:+G-MRZp<15+n2[)
%);9\tF:J?U(f3%M602&n!F.LA*lJZC5177)m1Lq]+^cVu(VOtnX\k4uMtCdgg"AODFY;TpJ^dHH)b.'<7E3s<&>8-K@tc[4*6c+6
%=.*Udgu>Q793+0[l:>/BO$8?"(cX&5Z8>V`dZo1a+q?(Z4Y\"!pFp&s0brDX28)!D&?YlRa?Vr<YV2//S>M(N<I#GQ&@lS]Gu/*I
%$;S3gXk5WjRo<jZkpN3[U]iKXA&gtr=sI:E/;h@'"<pA.OW+iO03iD#XVO#fD1nI4#mucj/CTb]MY3`If=24lm-Z.bG?PpU0GUe0
%O5og6%"'_:W*<3^'VKn$NL>VcS'U]]Dl)3U(9r[G6L+"'N+ZT-dNVK0XM)T`SX2;&e%'#bPO+4NX"/HWm1nRtGhHAlf$=RFX9?M;
%=_Qn\Sac;H7GZ.rGU#S,n>aEC'Q2iJ"L*cO?cbf$-+Xk:>@cB"F;bc3cS_J3>m0?p'IlMT3Pfl@"-O3;RIWI+]6/%D(`l+BC;k]7
%*6^AI>fn";KZ@"*<WMAr(8?<\O;WtdF#cn!@dTAQZD(<I)co`8]`XO$&X2L_Okl&GJ@H]Z<"MscLH1V`MA,=Z,%9Y3>$r<a-udmI
%SoJ/V%V_>6['6<6+K3%$X)S7VI-FkD6S?g2&IUmXAe$p_;2$N`L?.N<gEgN``^=g79W+qN@326V(od`$'`hX2"W7eV$W>\S/JBP#
%eC]p_9gO]"1XbX;.YXk\<=Ms(>N&u-1p00Wi4O\KhX%>1?8FlQ-GK?jV%[(AclGmQ@i2Jj51%6ifa+=djFJs5l1[aF$Hc)M+/(S2
%<ttcC$]4icZL8B;ZuT%\%MW!i_Fq^Bf)Wn/%0V!=9e.Aun65IGXb@OeAZ?A8+RK6'Bk)/;'8WXEO4jYR)2Q+K_!ZlB.J]d%6hV.b
%d=tqE#RV*nL%^Mp1BHSC75>03ROCM(O%eTO#umR(`Iik('@Cb\B3m>[Rf`iM%L/Dnn6:_"6=].0#RZlJ<Du:q'>o<!9a(T[UP?-B
%R88N]js;02;=HUT>b32s/re&cjY?f[Z/oRu=BD$t;el+'20iB>HegaF=KigZkZ3I#*BK88>+=Le?ZbVAIFYInVcC4;T/[R?Y@&I5
%*PQ:?C\oLHg5c(Boa*W:c':=K<EURW?u_R?0k0[Y"7f!@m!E/=!aM,\%\bdfQ08OOU>$^q[Kp@(9G->``r&A,ka],VPk50)W0BPf
%$\FP8N9;oHed.mE<#VG.s,($B'*g-2]I;\<G%=EZ]4'gMK57,8=QRQ.,?%u;E%EqnA<Jn\*a#o@J@'_\&-m+_^jBlA;?iBl"L.-a
%1?"cLJ5qjtGj1PQ^lEi)C)D!./gNSrLK(cjH7V;CC62Z"TRme\$qQLV>dY+-3H[Kfo!M%CF3Ml6f3U*mp$.Rs/"U>?',Le*/RGY:
%)Cu/s9aa.m`9Y5G.4i[l1PE<F@O5G'2OI7bOO8\)IU)+RM[[Y>Xf"l!'p'jsc/R"?'.cuk/XRPP/JMd\8%j0*Ye(>6KJNlAbf<&j
%XcBSkmg$u9QGZA`R1NIdMGq(K_l>\HUhj0))HL3Cq(&lt^d/-QXZXR#!!,MJ%<td[(W]Q-:4=IbnY#chnADB/au[[b"nAZC/P([>
%[+5fI+R/Q>9VYD);,ik;OEM>KWX%>SL[OQ(H$eJRU3j[pK"Al*NZ&7UP$:+98Qc:#8nUC?Td=T,PCF_;E25mh9!*`Y@FRPBJg5)t
%6RJ2\;;`>0ii\'mQ3emh?=@ih;52-T7Cbl17kJ,PL);Nc-<FpiJk%RXWEW[$+I_3[Z(Zup)F6!.R^cm`TpS$4aHge.k@_p:lDtmT
%F_&l/rF38p-n6"VV+.9pO/<=:0LrJ!=,(a,*';.[MSMT:gcW%/65V*>TJZX<*[SX2@>SpcKQG74pH!8Md7n8VDf?QCHh,sI7(l",
%IBaG52EIo*)&?N*LS9A7PISu7'cE6,-chl1eLcn]UAHsE2M32O5nA3g*+tB/W&Qm\Vijk0\RuP]]n8='ZGH'G-3E:2$fjY.k<m_J
%dFr+i&`>uD7UrW@$Z\ZU)O?"[OQqi-^>cPt2>un#/sS,a<@YHd[E8299JI]eJ\l+3:9sD&Z36rW!*0XejW:6%`^-YW\+o&"YB4+Q
%FFt$5:uWMaPm*90MdQ^a@NX4e0JaItIY0Ci>cpEL7"0BNRu#(I;cK*=L!8QcS=t'ld$,$o5Rh#CWQqg)-=.[%B+SPRO/H!@%cX+o
%4KZG(4A^!)K+Fu-N&s<gRg"g:Zu%XQJk$d520%i:4<B(*'c3T#;0A"9B=ShQL8=d!@)9P8%od+P);aB@5d5$r%g;l-r]m^c`#J^N
%MW9"*E4A+Dm+OZG#`p;PijB/KYHOrE::eD)kWh+<B4u5uYFn6Z'Y4sHk''rR/F]Y0.D-"\&2g.#[-E5#UCVD;WaQX,6S+mtnFg'/
%F>4dKPXNEI93)U0FH>4/i9TSbFW0,qOWAQ`S>(Q?Rb+,agC/uZ*Q]&"\:nB>qLUX@+R<:_$>WOI)Y7[aa8Bp8C/AE2/f05Q$dkJq
%OM.sFB6Q:-4+."jlT.'[25iLO=7E"P%#QFPL#47;Jr*)r+I3lYRLOl85QP,)[fB1TQH,YG<<28g!`b-1V[HmuRf5$Tg#p<H\IhLJ
%dcJ@LK#(Ur;TBiYc#UK$9[^j(;`mTn'8Yg;"OT,:0Zc<^8iqm]E/l5BklAq40H%ZVL)/:SjkFPooe+?UM'*F6k[tM6"EH*qAFrl9
%5u"ZO[Mi+Ki`ZSKa@>p"@nA#U*&B<Kc6-"m["YMl-FnZ3_jiUbk$l98/r\GV/f[^MO"q,QP=N1`/t+p,-7%D#6(]YW:9VA3R#dG=
%=n6#]1slF'#ZP[]"ue'#.I!B+d"SKtm7>eI9H0nYUKatoEY=GiEnZPn1P#WuQQ]jR/&pO(G<sM(GibF-?gP]S&edd.#j$m5T,4_q
%4&m4R*"tL!CPU>--rc-G[E)ZF+uH'#We<YN=uAUH.%295I<l@p[[>PTl^ggs]cXUbBpU-J&.Moq8j&0i6J'+6(/pTfR+,*$X$N_S
%Wdtl=#]Q(>)O06@RoRTrO6BJMW#O8E'U.Kdn]3;@6bbjF_HJQ-,==?Z&IC)a_h&=nf)e2^S665-m8;^Wjh&l[P<S/;$460"`#:s'
%AJB@-Drt7qY\6Y;0"Y3th,B+&8X:"l;T!a$MM,kVa_oV>#&:C7/pBsL=I=V\#4_[FqZ]3u;+`dm0D!*p?]'T=7ddSu:aET5;O<.r
%+;:8a(=,V4CD^XEb!!4a(D5@Np&c+T7*pm$]EIY"FFj6-dE!ReWMPZpA/Q@*B?jta"3q^MJ42W^@7a,t\O773KBA&HJ/uMYO.t%3
%0H5<CGo.ag_#VIV,\j;*4Fu]#NYENWSGbWJh91U:\2Fp5Jt[.,AH+Mn4!7np)Y(mm!5?JPMTkBKB0G0c]t>P$nq=9$-PIL-U*[(4
%W0#kn@6lsM]tg$Ao<`q!PtGTiC#SX>!I\()rEb;.W080YS'2\o/]Pf`1@^kD*+a*iAbta@O`F,b'q>JmW>,E1`1Rg\L"-#EY$hlu
%)CMH:%=lQo4)s[&JK,bdOqE#pHaFKrP`RasNHTCC"M@Y@5J4$3)ipj*+QlUdoAI*3U'Cqa-K6FE+Vk'!*kGc@hn0B#W@W6k5Y4Q5
%#-4i92)p2Ah+ci0.cKuPM^AiXVg3Bg6nl>I'JYqHPSQ)nS>koXM$WVjAmL%1m>%XH#32nq,o9P"<EOJke0el"IU+5&pm_T8F4(,7
%.Y1eMQ>\@tS49$'RIbsFgWA"ZPQ:'Es"PBbpGj%c#@eq+*_Ufp!&0p5cR5r\G#M+P38W<,c#sEj+0+VHTuRZh(eGf1QRY>*:#mI<
%k8Gmm8n.fsh1_N/+Ctf6_a3`E`+BZU;7X1uEcp);V_tF6"e99"\:@%1U]h"7EH!n7;t@975`auQ!`/rhK.;1^"'eY79XHD_b:RZu
%=$ITV5fp%CqIIt`&P0k`S7=kc)M]>k'%5EOFo?FGO-PrVE8bS;]rI0VG(jEXdcEac8Z,tK;EQG0-RhWqXO$KIh?@(%=MAV=H%.Ss
%0q2#)U_1a4b92+*f+lWp"6sMXNc?=#%ma?"kY9&ikra3PZg3`Xcp]ob-G2J$OJ101nCs1Laj/u"rB;oJZE*"sc=H]T=Y4@o_pC+1
%Fg7C!Q18u-#JGXcWC78AD&+r9@Raf28!\peC>JB,Utu*QO+j72VnnVBKgd>IWc@+!Cgpm,/DH]Y/HJBf:T(g8jnD2\6b]W.YbpXp
%m)/MS+N*8;)A#rn5mQJ;4M9Z$^Vp:T;r-A6PEA/=4'DF_VR5M1QQZIT"e!3fMklht1,*YS!\`G>Hpc*`f,"2oj/eA#$[k7HKc[">
%.@:u#k!?9c*,)UN71EXClJ+h#]P%YlWdFqeE?diE-%NTc.k;WU?m;O%B65'7muui9E-M\JH]^LSCZYCM/YKHnf0(_spO91`/R86S
%4T^C<,&.s9;d5Q+mm7egZ%#=/XC.2qeieBlfBB'41m').Gb>_u#++#Ipc!!q]!`RSDdEkEY3GYEn9cG:1i72ShNC.:b0JNY[A==!
%#EDk]V[jO?jVdMdVLF.f]#`J42sUB)A8Xg$8hGL^7LP:oH*Tku6s!pbi:dB!2QB*/UK,qCj^EYU-,Kh382NT7`HQ;M7aY<rqq0^!
%J5([TZPCE<pNSK]]B&ko->8E@:V"A+o6`0:';RS^i^)D-J+fP49$X6a:8&#UqiCs1IZbt]45>T@2XO/9_Yn3IHM8'p%nKu%&9mpG
%p"/o`?_;t[&l:,f(\49mee(CUR1Clf"!Ck^4$fjNO!bQH6Wn;@K0;feV7alO,(MVN>LZVk2Gr2GdN9]>pOFB`\?T!m8.?'B=Th*7
%WG2gK23m`t*^u!R`>c@l<Y-oII[&_G0"XZoHAqA6]Zc=MjUUJ'Z^3Ef;9A$Kgp`J5qM4u"m^q`<\\UQ8+(5Car>Ym.&kC%hLH8)9
%C$;f/Rj/0O[oQHVJr]!t.tk\ZPGVpT=V6NHM/OOMSJsdh>Qg1Hgs@DZe)6cCObXU8F-'2`7HkSEc3;R#b;-&1PAPKa3SK<Y?_Y(0
%Z$?!Vj,ut:?@Glp).'6hh*E9Q<1:]*)G_9>SJ(R0N)[ILhhuh?1!:+oTr*F^-]W9L263raae2(131.&1#R7KZ&Y?rT(#cja=m%/J
%]c@NMd"#InmdW-D:tXa2M39)Z*^41*)BR%4*0r*HoZGrHo@;;?TjGd5bSm?[jt:e^N*Vi5nI9_Y.(^*AO$l\e<-BQgiD>RZZRbVY
%8$nC/i<,V/UZBRSb8!Xh4db.eP#<N]>R;XM]>1qA`ESm,Xb=8);410QXXqa?o$kg&phTu.<W^?rUPrE6TT4SC.flh$C*dtQ4nhFJ
%/9"C!eMMIZp0cjC.R>2P<l1qpAYR[HR'j(b6)IZaaHuiWe4QZZEen_RbXs;J,$oS(<p$Q$r.S:ALREA/XG",Xk6!/\>?aB2*6EhR
%%gT5ACs:$76r#;OaqBNM_qcVJV5l\P`(DF>;Dm^nLm>:O8o4.Db))%KhjB\=8qJNZo#nktbE`7*e4Ni@bj/8HAKIEJb1oTkj]Uj5
%9!-<)STdQ*"RnCp%s;,CUK562(gDirQ1-\?kUX%R/&l+&+\&SeWF0K=_QAKc-!]NT\<T$B6b'tVXXo#Q1qaY?DIq5]J;dY<F.(#3
%,jmK;R3EiuF"7X]Dt%X)A<%t,;7Ml;=r>n5.fh:ADe3f4J==!neB.qNAu1-F=:'C2QP'r^iCfrCZ5BjP"NrE!@O2AD\4Z=mcp-jO
%P0I4oe3X0hnX?Q79%*%Xe.YlGM.u,Z.r:Obbau%JfDM!`b_+ack4$>'k&KpEiS/GjYpTs,VY):['*_g+ca:j3"k?XV@eZt*Ju;_*
%Rlrm[,XjNXfFq9mh=pWsaV.^TkC9fcCk>R6aZO".&gQ>BP:*G2Xj(ONYYp<$,=4CGeq<,MW%4rKjW0gD$paERYqO=RhA>>D`TL72
%W6KCnpP#_/qn`oO?n47T&C`LjH,C1pdt58A!".%S]jY$:.>e:;hQUJ`5ajX5ABW.pD]""0mV_QL!A;,'R?mN/=S7B59Jnb91IGJt
%?CF>?aVS!`;9RK+#2l_U&TrhnXERm91TWi]oL$k<no)'M]f<o%+d0h@0U.;Dg+Sce`D.l=)-2Uu>LaSqi37_f3Q"loSRET5:+oje
%Tfn<\B@r*bFNg:pk[:VN$oXXh37S`Jqbp%gl3`.a*eJ%(n"f.+$ZesfnV+OB>^Ts$pV*jHB4%#FD=`J?e6!\a]j[c4$ojAqL%kkU
%Gn1^=;Wu<G>Se6tTpLOg&S:Aa=SGP'Cuu5F9f=ieK\U!bLt!HRK'!QtN9Ab4<iit+U==qDPiWeL,cl9kM>7SQa'A?':rUbi[dk%T
%Oi"L/GgRUDO#t]gi:+7[^p2fqJHN`7Wka0k#aYl<e?`'W%KJjV<T%OmX%`>Y>(Hdj\Xt?j!%;R*;Lnp(@@R'"*.Y*7.MXpNaC@82
%i5"T6)e)hcVN^Z2HK\UI"V(O/<4K-IZ/FKB=ejj5HA=-YGh:4mmOE0`-aUD[pok's;q8Q(o64?+Mo;QLhMpGDDu_NB.iZ19!g.2a
%/jT:&g-mU0E>gSa_;Q?\&fgPT;[Es!>?jd;aL(Vh._u.Y<+FAi*!"Qk">_XGJV-i10iBD8%+q98[h:3T"k4/)*`&pA`sJXV*!cbn
%_kn%d1b[Gn*/M(&#nHlnGUgO\?Q?6q3,j,ZW<<I/%4MJBkOUh3gZWcsH=)pRD\H/)UPQBo-D?:*$9W#s0fAK%WtnuAnMW,4(=:!h
%#JGA'p`eQWY2TmU^APgc)g!5Q"%'t2[B!_0][a%6`L;%PeZ/LknQ)^5GnY,()QuKG>HQ%J=N"E\9ATc-[gB&E2Mos8ki0Qcm:8Ja
%%sOQP-f-o@NHgS'#(%NE?jALdoEJZVQo9!j0;>StAL37JK24LoJD;^!<O?n^2.@;;Gk(Y"3.gP=(@rj"k'Q;;Ria40fW5B,fK+??
%=1QmFX2*e"mE.D4&)/Z]-J*"-&oVEn<pda9Q"tnAL98V+'f<J`n3sL^36O/ZXT0]k2#oWiH')lmG<Iae>cUn!alHX5!oJo@KAgf-
%dR^OW_Vj/nQH;88r)Tu.A->LPf34F8n1*!meAN!$3J)>,U/f6iF@eE7ZoLl%0u=MQk/(h#Ug68scTcFP0&He;7k_&j^uE]>D'5*a
%5BRF*&XghAq!UIVe%uLm]d>)]cn$rK\O)8K0UVA+Yd@THh<2?L$-_T#(-O.X%pM:=Kh$#GcW*)B0<_koZ+eJ[UA-i\2f87'DN=+2
%D)#:]bp%Aiccpk2d/F^=h-=%J7r1c=o`.l\#XHQS`ZchZ_kYoq^^J<c$rO5r-U]4E17n;b$cM-\+37&>:bL\En1+!b!K9M2m`jm$
%B_^N^^jEKr<-D+_pX0BQ'ep2ZHth`d.um]Q&nVkg.FA:6UpZV2Y]%u_IpGGVI[eJ?-LKb?$u%R!mp/G].HqpMD?OQq\<Ku*%Sc$O
%<?/,#6(/G6.J3^,4pBqCQmXk-+kn>!&lqP'=jQn8/K&9*OZC%T0`e*S\IE>"36O%S&JG.1nR5jXZECI.%N*!.j$%-B5q'=ihk8MM
%)u3%#JRH%;*(0o`-&lT"#9,q2Z4AagK:):s==ga.q]o;2/^@I$6!R$Cd__\A1L,5ZY;g05+m9p1M*G)e^k$7^=l6S7$"mf-a-i,%
%N&D^]91G"9#8+H;Ma:kZ(uI\2!,u[5J6>eTN$aTA<7OsA0K`$A<YLsMjY6-Hko&onDpT-GOU@uE]&BBqMekE^ZE5$.fB6a'$72lc
%n7!$8A82g*famX"YrEM[IN*SjNHt.8*1E=^k9c8(#JEXbiJU4`j5SJ,\*8?NO$<3;B["jdqX>*6]2jtVIVh5^;&kuu)DBUjjVY:M
%3"h4)5kaD/%G5ik2aTY':e`n7WI[5/=9LTelk;Uc>Jt(BkX0XSU?3qPoW`0$M;6eu?73]i;'#K5GP0du6bb!e=0b3NKAN<jnATAX
%FjVL0r=8Q3r=rt#5(]*18.L%N<</CR+*!;)ZU5g"9.+2(5(H\G7/cqP,NHEjae'*:'*71?#LN6?k0NK^bI3lJ)*ko95X"so2<Bpg
%7j"aQ#;Zi6pJtc:lHtA"oB$B6O+%W%]24PPJ4eX,+2(n/MaP5a%K3el\ZE,ZJ\E;m'j$;\^H:Gg3qT,W1+RNhkc^X?oKDO]pY@I5
%]#D?MJ&PtWP%:)P59Gb\3sV=&oK1qIa-)HFqG@#k8lqu[]Elj&Qum+jn`[Rq>s.s)pE'8JB90bGDY*)PgmDrR*dsR"BVH[A>3^DD
%AKO'_&RQNb3:qQ"bRf2)lhmeN+$_=`AIa,*N#^=`9b)S96L)p)6$)7.L3)\-LJ%#L6SA&A-^",&-/3<W:G1J10B?%*VhJC@J)Vo0
%pkfNkeDZ>?A^gXH>hZ<S%.`XPi%B,ta[7&a,AP4BZ54n0NY0t\Gi:R*@&&rE_Qbp)Ju*5pGbeoP+I@V.j;*X'cu>U=oH'\f*'"TU
%lu9%u6"&<g<kR6#6#VP#9eq5H9D(ZGNh@b97;8GT5HEp+Fj#OP4LT6+ThU[0W6LuUGO617jZAYh^3oSZ<lX,'?P\?6rsk+UW+t8q
%X^]ZQAuP=l33T/7-"LQ"%E$q]:nmX0j@5;u,8nBgR=ZZ/8t[pCU$T)H*ACE2`2,(:EH+IDW[Y%6Pq"a9mJa=7X:._,dQC,:**Gus
%isNXN"O1j>Y2IC^LuVg'O)njSp(MKd\UlLnbq_kT/3"cEr\,>RjsX1hJO*`Q:/KQLB+'`/&KYKk:/D%TaqdBALV_VpJ-X?YB"B,W
%@Hc5N9Ga54eWYZa$P'58\'P:KZ4[42(PJbd?N@D9!R(.>LiGiO+D&,,/-mkfU3+5.--Mu=\fgX(1NeX/3/jYDB)?N^%)%W2j"#!S
%Hao0D<LQWE6Wt>So*%YWN$@Bl6=j5BXUT#RW(ee-aZNpL2QZYRGeW)aVMUQkM!O+]<FUWB)s0/B,NLPULscG3YYU^u^FT=J8ZJrV
%$c9n#l4[U?+FobFGFTi:$3H[(82,)giVc?-"6KrNX>`?q>es;4!nr>W#Xrs*mpf$WS=OZ"_?a^t]@$qL.6(RP7&:6"F^E>&@]CPM
%%R.7CQr+$,HM*"*(/GU-8i/jLKIJQX_qCu?=M%\KDX;&Q$J"F?B<L/")HkGIaqfX_A0pIr>7eNW3JOuH"^r5YopPA:!en^!NpJ7i
%0:JU!'l8d[jR?0_%J.?jiJgGl#`_YKhMt]kV&oruEPre4$2FSPUh>,ZiEQ0[Fn)hPMEDl;V,Gt[%:Bipd-.@B7r3`&p%iWt]a=)U
%Cf5`7g5!&2eagVJc-JaC[uh_LgJthFLK_d5'J'u\l`R+fqEu)1]R-@C=1A=Ec@CGZC%f=O%O*FF/TDg:Y9I9h%H,VL.>"34/CB$j
%:=P;8R2*b'&I>tR?3Te4"&QZe>kgur:e+3sj"Fk-M$-d[$t`Hker*4mH/pjAEO6nreGA-6BELgp?L5,!H7:0J]/ELYYh%8,F0f<M
%3pPXPHOaBF_I/jjj2"h51)#EhAM5iZfVK0<'8I<OQ^NAPW##NGR/jl<@16cMYZ17Bb!*U`K-P[@n[.gf]Cm^V:5>LA$L*.seLC`)
%XsXlK2AM#u>XF":NcfA"/u):@Nn'DY*d7%AGGsclD]L)8Y^dW3oXGDASoBR\q6t(Fc$.E&k1jT_'[M93=ttJ>]ZJV5]kkPK41mD8
%<enH8c1PIh)(FA^=r,V9fE,f,d,R;LGf"$Jm<(<'f!TYWloWuJg[,oj(,!eMqfCuIQK9@-6,86ol!ub=lY)bBLp95KLRtS)2@-f*
%kTr+m@'ls`%\AeX0;,#ci#ps(SsA4VJpP0M`<Hpt)Xl&*+QCAc!uMt&E2]NA*RuN6@tPisZ,%)[8U>TE!tlOu:lR_s%8r6eCJeo0
%50[j?P*@leJ.E+KQtaL#,(k^%_n8sS,+Rsk,D.g9R]8c<5m5_DhfuMgU&qNt,]1O5C9#LI(Rc'(oBXR)"p&ooB^F\UN,[2HDf3*>
%ap/+OGG[J+"qf&t,3cB8jPi6C(^)s)Yo*lW,&!i9frGB*XkB%_%#o2&JO'Ek?A(n$_%Wbu6'(oYi!H<s+MCNAh%U\O:t+Yc0M#JM
%Il(N`N?>(<3!BM#(mOZdJO.5d?&X;b5oe)+Opqp&XU^$h#&/hAWu`rKLsoMVHPNR)].6ZsfJaL)\oV6jf1jS(_/pE$]>.ebd1R(^
%$4XiL-R(H9+GIYk'mYE3b!#0a2[Ho=h$J#(LVmIBJ[@_(3S'jU4_`9\_ANJMni)giLnG(gTaXhsPSQ`Q5m2rXF$e"lITFg):.cB,
%go`d_`ZSZ8Wb06n?nN]QKL$SYNjgKH&>h]aO/eCP?L$'P!I4(8SK:Ne#tc$;Y\(pn/2FRBGLXDLb/9JjD<PGg\i+GG7i9/Sg;:[Q
%gZ<$c=^a.(QdrTZB"0/BK&TH>`5[e[7Jnn@[/cq_"]*rQ[btkuPV2/=;7[mac>GTg$6]$n.4%@WJiI&@`m_iQ1IHsO#[joaPD(V[
%,GHfu&Gc'`m]1HG'<$"=O*eIr$"n[EX%mF9&R>sa^(st?Y*EAu*g<[0ALRmj&3mZSb<bBEJ?*l[k^kd)9hPK>FKRF7'kWTa/A-A+
%i^Us,`oa/<MAmQDbT=@HkTY2O`bSWgaf!.rP!#Q&7M!E._W4Y9K,9=@S\kMb;K;k)-d&FL#(e%/?-*Pk[>H)lgd&pnROSj)!c#gd
%O%WlA<WQHH^IAG]\F\-"mG-['\-C4!V&"iAI4JG!m2@rfE8O=?bT9M[E+;>9h?IF)_'789[=l.)&@C9ui6``7<,\OA8QBtEEoIjL
%2VB>J2EFmo1KG&-[\42&>uAQfQS3Yt"ZI4L(#6S@2ANGqE2,on2NWe8],bp4kk/&Z%&pQ=+D,@s*O5sDk,Lk6aDc_,S@3hl&-9#L
%=L^]e4l'!ha\T-kN[s11cP9W&jpL)%N#'?\1$G#ed0`q\^EVs3VPlM(Y4M(DSqWl#9CBGjNp^X)s0)l,&6EQ1!\8-N\3b_dVA8f\
%.g2Ng>9L'[JF6SVjU)%V:)1\^!jMRFXs.;W&:neS3kQV>N#oMr#YM7dE.o(SEJ6OC3C,?`8nPWO*EVHX'3BuTX]\/!+U#+ULm9JY
%\6AaI($`O"YAf1,e4W\m.YMKag)EEp6Ep3L.KlErJO1)<4P<:,_\<AW<rtPuL1*k*<MY1LoF?2C$?[&V-9l8.JSFOE-D:e>a>I=,
%BC`dP6r(R[rSn^%V[<GGX]UHDS>pW*M(42%5:c%hWBu.$%>R7b6I:=g6kqb665<[37g[%t-GngRG>t7L0!bSe]#IC!.g2NjS)XhV
%/d:C&.g4[lC@!8[0@FpH@,9Q1>Ts-DSh%2+N[o4gM(@Z->Id'W3U2r-Xq8mS&&69);=>PLq@B`s@<m@>'uG[f8C.-O9puS`>TmAH
%+tt!<Lpi`-fn!D%AV>^eF97^XZl@:2=/\X^iqO@UK3*,(kaoH+?&5L.k:bEu'ncuIrl#HkOCoQs?c#/YALo-n*sQfEd%jk9LVd*Y
%H31Jc($O@lH5*I7qZ!hp[_96ma*$>7!;R/gb5c]>AGZ6no>s*$O8oMW`Yg!.+CMui$+;OS;BSUGptnlN<E6`EHgaUcj<8e[N,;_I
%dW>-Mh645dX&bMGU%)"kgffdt!=SjGOt!:L+[.K68YqjTHX0IA3_5[a-bZ11gPrT^`%/?(M(JGA.`[$`.U9=>gSMuKcW_!3=5^2e
%Ma5Of?LGL@n&ID5k]JJoofTFJjF.I'nU"]9%lt^/$D`m_WOTkQcO23>6Tn6%2_V*>>V;u7<kD6^W//\\b3OX//iR>4JguLT1Y>j:
%(2OkJ$f?<e9eh/oiVR;u<BS&d_asmqI5IHROD^iPY2Yo%BXi?J^'odd<l.$?DI.tAiB[1R-15WikI/=l-.Rlk++<$Kc9&%.L:+)&
%bYfO3`OAPgf#sWW.=A**hdW'TItH4+#?]U#U[4IEmeJVEA"PXHK@P_^36QbEj-@cLZY:1hdaFC$&?J&X5i61U'<)KQ0O-O$X:Gh(
%p??3%Y9pV0l]b>4qX=Kg;U/;`*p>0ODUm\PVFt'D$L;P+faLN!GiF/:<N.'#\QKFe=F'ZDSE8^2Hn>lDiDq"+RP=ogV*$lVE(S5T
%H$FdZ\\d=DjC7T%!--SFB.mRTk?/q!]cO*)aTCuPZT=MM'Sr+G]d-A88WUti/nZjG`,jX;gOL,*Z!VN+=+PVA7S?^M5Acb=ga^7G
%F$)&ii\u7a&HB,GhH"DB@b<;[="D4q4dXeqecfPL8C7d_'>/qYB7Y<c;eatn`8fTTF\HXGQD5Uj07%"0ieb,p8ObgmkWM/jKqpsr
%_5fVteVBK_SiVI$+.clOEiN4`rW$SZp_=<4IJ<o2qXF'e)8dipiMC7+L3QjLGiEUq9LsSVIW<%nqli7H_98B5lbg&]YN&\V`t43Y
%P`Yb2*27P/g0&iK%^?>'=FGFE=#G:Q&'l\Fh<)uQn=6+bh?lf!G^s:H?VqMHk\V:1/.[5(k#ias&%MgD`GCRd7HliZO3.:_o1Vf)
%k2NOpgh9Dd0NUp+d^,>8j3W.d`1sKYFGRH(l(/UOT,'Z?]V46!.gTV#[igJIf3!UcD-']Qd^1S/@JPp6?=EZfb6P@qc?A>97FdsD
%bu^J$l`#/pY?[NXV0L,=hE443Xq+aA.gG!b[h+?)[f3sHFUc:>XF8HuDcfJRIdAp*DNe[BW>*1>1!29P,/qarRhq&59u#'j!<GJi
%G<$s]"9e4;\P"4M,,K"@>S.MI/Z<uTJ4QVbIjlX9"@Pj\oQNbi!)#-(l\^2mT!(73M1>S.k16RF&3G,*5V2[G!O:Yt!Pu6>.mtU)
%#U\:KB*8?A4DVgtND/',T1K:k45hZV2a\_7BmiV4BFG$Z&hirqF(28c2Idjh5gp@p(^PXn@%I"X],:L*J\VE!U84&-67;RQ/K32Z
%c*/c&!ijHT5@*h#2$+sj3=KaPSeEZX'mhb=!h.J;KN5>nYQSiN&J.c5Y#f_%\DmV83(SmU!-De^chN:&A7<gZLD4Bc_A3*TK3.ug
%JoC/i40J)a"K)@Nm+18^FH(bm52C2srr@"q+_g]RYVLn9Y4.3'DfKFZ"1g3\.3o@O!*Ej1neM)<_7?(kE`iH_-KE/^6;ie[h,<%Y
%rd9E".8.0+>aI&,[XC<2S98u)?!a3.h\]H6@or+*3u_KdIgo`:X>LGG(OjdVYnA4(SZVqooV['jQs$p;de*oIOoo?`>XM@-pq!Sp
%?=`7F0=?Vta.dE6@fV3C6eV=a2=9O,>2ZY(P#L)(YPKoZk+[=EN2_O.;'>9.':RgDQCLFtnBhPD#beTn>-,a.&4fG_UF,/ToXE6g
%/A7@ub<@gY$@TQ.A%(q'LH0>dqXK(6jfe[[jd6#7?iR/kiNW6Ls,"i#s$jf[_t_7grrQ7(?-`u]*d(/3?[f+PkcE4\"\8D3n=k&Y
%)[\;m%K?\rKA9!N),===hrP+rj9TT-1K.(CK^FeL4E8#=AR=b@#lu\Q2.)eai.p>k%0*7YUQS(#BKcPE:%,g`ALk-ppAt9'_t0)D
%2pKWnl=!ijs4dSPDu\r1J,FN*rU@kbrr.+Ks5BSVIR3<'rp&h,ro+`DqjS+Gr;(Ves7&$trUOn,lQ?/rgY_u.$h:^`rkH5DYQ++b
%s8:+pIdnMornXbBroOakl0E9-O8emo7lAB[2uiGes7SBYIsfokr/4q[\)72]O8kl&qH*^]pODu#l]9*@Q63m@rXZd@bocqgJ&7\M
%rR'O#O+7*+a$9OmCuk/"J,B+-rU/:t^Q:[%htIZKNDS[XHcG[O8/)$slX0\c:]G[Qb;Y*^[86_FJ,%9,s8F,>pt_S1^[IMBn'g7p
%qtuTRmU,Y#)J=OVVV,%cs8Bhc55tQ!s7=!Sqi<X.]q_mnfHWW.Uu2+<O2(M.0>DE1>@4p:4T980<INK%R5<3bn2b`HDeo<$f3aSW
%r/\Vij6]A:nTVbHj);^3pj`;-lX0\NlegCfq`eskr4dXXLTeJga%uWb#35aR,S6_;:BN`anA!cRU&GcadCR-6V[66/$itF&:GM=3
%,-Rqo45Rri-hqiGp*j6RqtAg61UXmX=g*6hmfi1IC,:,&PB`=>G/;AOf_Qk"jOgs)KIf%*-h4e-bB#k$DuDN+6D&e;hRiI*XnUc-
%$YSY1=g_c*,7$:loc:Ck67h<S.6f%0V#tmEoce2,esjC\.^;2-Ut<96\",+#gJfd:M^-eYL7;u$/bgbnD"sLZ8IO$GT0-@35G.Oh
%AIAqMe"GMXnq-TW.l1\p`%<t&E!d;HRfoBT<OOrhYbQHY/.2nMKOE8r_)nB^T_/;+'ETm:$[O%_j/gBsg]Fa$e=-ks8X5E@I=Mr8
%Xj*SL3Ju7U4i%9XZW=F[.)Z@BgHi2W(?ip6]MK&9dYr[Ho[uXZn9-\S.<]Tc^hCL&9gK[\0[mYAkpF\JL88%d1Q^-u?hF^`k1dPN
%ZX32,?SNC"^r=Gg[4JEN>O_#7[gBFfkN-F<CD!07ND64]U2q5ek*Fs/]9]D(SV\FG4(`SOcdt"26-*uiQ@"T4cu`+nNjjj)_'Jm1
%p4NUI!3=E!Uf]$#\*CUrcfl(d`N7[-9[#+Z%CB03aHc25?50N!q9ob!4hFDXgV@'bp9:@i%#3W)oEB/+\%?FnhXL$rS/q*2*T6Wi
%<8;p^ZPIqZ1-J/oq%NIBY:cTg9_/qT-Jn,GcSM;V5uVpm[3Le'W&YN<CYPpJ[,T<Ym,E_O;S09>Ff2K?\)2rYL4&"*SL21=%=Q%`
%>gJR>AZa)>g=SH)*3(Jr[)$T[5fZfdWBC^Gb._dY^\-6)cgJr?;h_;5+tFsT%oT,ZXuK@RX`2)VZdW1EW#<8[h*uLOUtha`+."k:
%Q'omscNf=(0$.EM`ldUh2(YsI>^/?gA?g-iWbq@\<IIflir6t*G?Ur*bu,o,=#9e,:.r=eW=l7\Ct-C<S3K3`#FNMO<h2eG)"eL#
%ZjUuMN%Qqe?_!)H!RMTro>m0sHD\21RsQs;eqPM)+i3RR^q5&Q<%)[35qePlAu`,7i+)%,bfs(7+RDVfRn7p68Ch->a*%K+&75#9
%'A"sc]Ap3I12g!#2_jO1>Ge:Sn"[$OBM5M+Sg.O$1J&2F2N_*R?+s%j<7IloIpZir/dUq/B"d5A&L<ZC#H$+0R*!HJ/"B'@l[gRK
%O]uEEa0HKK$YR'[)C&G9a,Kg)h(`,9<`P<;ZQp=KWHecRSAR"I[F!o+f:Uc2G!3.T,TM0GrI)+[\P%_]_4o(cPk5L_L$"*5?*[f'
%#o<<,O](PWr-4o<]M9(.)EOli>eOrJE0>KNVD&"N?f[rSM@%*30,@S<90cq7[O<r'*JI$n^4VA3I^KCtSn+U@]Aq(ukOuc1dcMl4
%)Qs-nAcA@>9"#h29092kYCPoJKlLkD^Zb=@mD7(P5Kr)C&j%KDXSHp>`jK,O3*Pc=R;4QnP&1B(W4,PV"`8nW>!6ZsEM!%+b>YT:
%?$d7Ue5TT)4"Re&g@8a"V)qa3j;F/foGEI>`GkHdQ5l^T5[;j*Q;Ph(?ud.A%HLc=SL7f?leHctj#5;j8E9)910\Md5'umc/R>7M
%<=/%r'2'upb9or5n%RBDXJWD,aufb]pEdH\d'_^d/VJO^\F3mfQU9%7csfS)BstmJl/_fE@WCBfn'2rqrq(Z;SOdr\$+6%A16KkB
%@@&jZY3*B\:8Um'S\(//,%8c-N[EunBG]!YF>CtCKH'.YDH0FYl"$Z%fNIBt:"m.p`]NuiNOG7fP7>l$\s7Ipd8H2&-gtRi?uS3r
%A:@t12r9B5>HNV0JfR(:f/\/nMoT;cQcLJ]$C@C%2uEA.K=7/Sok=g&j@m,u:J&,m47NGeOs-$6ii?\;/B!b:`EKBd&l6e6%02g7
%Es!6<H/NEHq-^0'PBaA>.]Tie:X4=#pRT59@+"2C8N\<dHA,\O/mES`;cc0QcLD.Wg34q5>iC+u+r'EKd)B_PI$'-XD><+t`)Eta
%s*YN`/&"./;u#@[A1QDD5s=/\PeZn8o53Z1o?"]eB4o3F+S$K`?&j_=O51`6Ql_B7%`&dGs,cRh$N?r\B=p(A4jK/ulLk#WiSUaU
%6p=Y\`N'u'0q#\2&$Qt-"N]g%!C@jGIQ/QI$KOT$V%PadlNpVNN5Me0Z+a&-ZWS1$!g)P+T?s,T?ob0Gj5,*POLge[F^@K='.jmL
%]PQ["k?\mO`_e1J&&a]A4%OlH%!i/B'^0tq#8l=rQf`eR?k&*ZQUP(M%Utfe[$-5uC*7;\>K]uRha%p<JN*L1fhrit%s,"Y&Yf@L
%A&PHi[HOm]<=07.O%Wk=5_]J_FEC0qAFRqmQ7&UTKA_u2je-Dehjc]s+^4\UK!.skCu(%C93/h7T@dT&I:L_XBpU5ce$/WGpB7l@
%%RD"iBOgP*.l\c'3FO6"S2a;0J5p6+=$),/>-I;lW3dFJU(tLpo5GhN/g#U%jl&&D:<cjT+?NRc)AmE"g&Y;$C6u7,G+F0#joNck
%=Q!1Ic[e`1Vl5cR.]h6WWg#"\+c1sP]nYnUQ`rH$2M+eP:I+k\p]Kg3!-R3#k?Wpr]dUt%O?9CLormrnK#:NGoY7jKf5NVOH.i:`
%J:2,bpMAG\5iDRM(,ZG[T[UpcQ',OIae7U)a'X>"0hm1$b<j3B8"CRd9j=9W#i&?F0(TAfJ-B0fCebS?3t3a3UlTYmY3;<(\_&`U
%[Y&k9UQTaI).!;3rf\"$[mfY+h$+.F;E)'MUkd+`$,nU%M^S9'Gs.Ii_Jc&KX\\,.ku2bE5?W:iJ'iFq<9I!$q7uU0!FEACJ$6=/
%#OY:6O0^u,gPW%cU)l:g>[fjgo@3bVfBQ@6Z"6N`iTV;0J'-0B\3-saT,86)PuQU(nXN+a4hP3dd_GJ<MDsohkm&&d/Un_Ros;tF
%kN8!'p)KHf&f(+3Hln]%qbN:NGZ>FUjS]acnY'7"2(_5DUqP_e"1\(@0[mG%k7A_6,[tJW))XCKPrh0uUK<<LEupdb?$6CrS(d$u
%Ln^_dba06\a=\J(jo1Lbfn-jt41EeD>k"l=OAB%uQ<fJq*Z`_8)ar:e)JIf8hO;H!g=H==6Lhc?[^h?)nk"67jFE&2.DT7=I#Epu
%nQ!E41K=kC20q(S,e'p#ZVAq4YW5"!69reMif7SFcH=)2@QUh1`Y`*IRqD*c;Uu#Eg^hiqKAYCSd(Gfq=g"[T0J28JYh*Mo"ce&Y
%WW<)),L^EiB%[m%\5\3?W&:Rs@4!a9Q%NuN?.@H$$&]tj7%]rV'"(2&#JH<*./Ht(JM.o3Uacd^*&*8:YNnb-IkfJc1edY"?C+PJ
%p^"3/<47BcS>H)KAI)c)BJ/si#X6MVD2fZ(fP*hlnYCZ0o<YH2Ab_dg,-Wb@:/JrS$cp7[JmC4'0SE]UnkIYdeUd=@MkDCQ:,@A)
%,P<VT!>>s+,U&^&''bum;?MWV;YC]g]DYj6Gedi9"C8;nb<'fpKDNmonubh20L`9]-qGe?!GXq`2e^MM!"h.WoC/C6-6g*ac-H/4
%6K)obXsYW/$3mG_]dEN#%\2NsT,>p6/`<o3=0NsU?2fmdoJ3QBRDm8Y.WP>K6+uHXJM-Udd@p7qVRk!&WlZf0hK<eJMQAu8GhubD
%@#taYHbdSEGiM`iP]0MaS"Qs"WcgrR[t-#@;frE4Pr[XM,"&UEWi<>rlNZ5B=n/hjQVP.7$n5:EMZ$pRo5\A+!O=N3rW>qlLY]bd
%][W"qEG%lBqdG@aDb2K?n6'[SJ'LFY[gaV5S,)`:^>Bld>*%@d/6ZXMAfmW9fUp,e]kFd.pTO/%2U*Sd);hRD0\C1Z(+)?)DA";]
%bB'J_@dJ1c+BJM:n`$"b^(RdS\2D,?0j</F:7jNO9<`a5l]6[_iXg&_&=/(l-?/SM"C;DX';c#($d;3@h0<r)1lLpB+MG5WKSb>-
%App64due67EPJ5OK`X$<_7mdb9b3EE92KQCct,YgGRZ@WCtt3mL\:lDq#f6a+a0;L023?4W4+49F^C4PB"5(-$S.b3Pj4JFW[a):
%R&*?0amBPH_45X/FP#]<jK#*c'U+UZ55%on\H,8t,Us=@=HjL0qg3t/,d.cSe>=-X=dik2%iAQ[bMfLD6\?]JU)$e]X@%ManeX9k
%U?riDlD'VP='C8%MrS6YeCLU^Hcr\Ei!10`1M*:+a_&p989qoMWXg.YQ!Q%6eY!rC-C\"#c6a,2>U-faW)A+e*K!in?j^F+j$L6O
%Q).`%%Bd[OL!`nJc<5-IWGCq=F=GKQN\OL&*]./p[E_4V!hf<K#qGn(>9d7lU8<(&elI4*[F:#dW4Ifc1hT=COtV>PCc4B/[Ighf
%$[j.,3<RcFhfQC?$oX.l/'K%glqfK)7-K2+Kl0pFZ)-jl2APlqRBsdXLt6!I5>#pi!G52eUUe7+GOAK1EaVRfV$-UJ=rYTJL0&5D
%b<7Y&BBj'F=Aft/b:_>CLl:NC+J_&&TOmG[.3?t!1;>@V6tg1<0eei"D99B:1\0]/)1u^#QoK+2;mgbF^6g>:0"/UAXt^UL/<Phb
%'?LXa?DW*A_0;p@RB:EAG-G^#$45([/MpgNVn+djJs[SS2Ur*]erl&S-@'V,Gb%K5k_ZFVA@?Y?itY53-2XssU`4A^;j=Pn``YZi
%MoqGb73ti7.)GWIjCR3.VU<^WZ7X8'a(!'k*G-jim`a2p70WYn)$V?^=R[l4/ur0?6#hE&Bi^Neq[;qtcgn=e8_l;0!%7t'Mc+I3
%0!jKPLA5_t7S5UBo\F=fnBF(rQd>G*3$s)QY9*6Q>)hDDCN1_Qb@D3WJ@ho;o-)F6M!$<P>cgWq-fNSqI-?p[b;91?b`Dtp^+DS<
%RffOt%t+Z;-8!T<b,e4^1#0"VD)((AoX>EBEBJ?Zf"Ag&`nHHqbNC[L(jWc$0k'rP>Hcpj+#P-ds8MJYYP7KMIf/U5r5TnFXg]TQ
%kl^D=;d3SWr70^(rf:FH@;C&8R/,6MmuMt'Vcc/IotUFu2uiQ3?iT)G>L(_s!n?bis8L>-p##f;fBY4_[m0k4bKg"7O4H-W^Z8VD
%+8cDt<_0\o\s.[>:RnPC:2%+*[(t:@LZ9s+M[3dtZ/$0-`Dts'LnO!Y5'4Wl7C9jO^9>kQ$Y+J^\qnqGcJL5rFfimBp]!lh6j88O
%A,H9Bd>sBpW9K2d\V3i(+]8jH;[D6Y0UK>sqY2]UfeG%8l3]?'nW,fHR-Qrf@<<X(U,a#$qM"geDh(cg66_q&>-Teb4:ZgkgM)Dl
%^aEC,:C*7/@;GLb%GR1EO>pU/kTZ&Wn\2&i6H)C\3<&a/@JkA8^Hfs&=;Kp/"ZN:Kg^8a]4LUm`Ehn["PU\DA_b.^%LZEH+b+lQ3
%8)j$88n]L<S8mdb0N`sq<"NF3"=KQ9puGam:%F:7(3X(2?I/mT\1/)F=(SU+IRU>[:'"nH`FB^6gKOWX0AmS(\bBZDJ+_@LI/*3/
%Df!D['19E*VkGkPS>E7(Gd12l[;W.M7;6i&Co*;AJ<[1uBP"`D$]+XQQ#\6^Cu)2,baT"I=Q2`QS-/@d%'[t`/o[3<H:U=.D8M!T
%[e[2f6*;O/=Ar&tX$^D,gL+K]K:^Q$o;XUjBd-^e&i7\=Q"[W[:aC#*b64j]D9o/23,F+JQkt2X\3O@\O5SNOOA-@;4qn[P'_alo
%iD:A!S?e?Oo'gr4W0Q%?'`KKOG/6%@MN9Vp6-E]sr6u*<haF`&hclWdKu=huT'&hGX]A[.c;YH_;)KF_J"J*lQ\uPmZkB6k/kMcQ
%@e6NkG+HJ9AZK/HY(tXCc7Q_R"\9XgR7:VbU6n119fF./43,#@,2e8kF;I2e655XQb8+aW[,<FC$QP;;Z6*fS=OT><[_Sn5[3T=1
%?ZiYBOin3d/"._EnWQu&1n[NOjcgXR)X4uRDlIp#hUh)*i3]3_+5HaXEIlh3(]H_5BrVkNLWg:^O]4^]Sf>2D"Om]a:*aiZ#d2"e
%^aiJ]a%a'd0J?Rc=^;R5&Wl]/h`P\W'jT_<W1R=mibF$<Ft<.*p9J8rn+5U_E\"`9IsC`3(S[EM(%k-:h<,=4gP4_?nQAZnDQ#!\
%7>"k.MUA1&@@Q*7f`QC+0pAhpQgMRT(i)[R?eXb1=Ym'Lf-1njBlYAo@Fs`XY9O9s[2(B>`KWu;m]Tn`no=H4+T#Qr+Olk@^<ho/
%W*kZ`=57p6iABnpe2a`*i51'/E6l3=E?:\]gsRaO+cgs9I<5*bM\1[[q](0[Q'*Xqf,@FgoX_];,.9V#Q\Q0;\\mfKFt/([?(K_G
%%N9SNU_=Vs#Y/6"OF]0:ahn1J5M7VbM]E.Lr9g9s_&XI[o.O;q!JF\=ob3lTT)@.=\1EB<rW*u:?i=_A9Y[SVO+5\eNK*X525g!5
%j.CCYIhD9*is4TdMAuSUIuPO]-\$poNSa<tY@!"nP>YkP(?E,>K[C4g">OV#lgcC6K\-8&BP'b`TFf$plp&QGTS;-^eH2ShYJ/tk
%(k;5oFq^Jt4q>JnTsi#q6C7tsSM&[HV`>ISAWMdb%;P2-e>']6A?6NqZ[2L:qnt?L2S`QPe&P+S3Zn#V@tISnpX4Z'<u;"VC5lj)
%0epYEKL])*>W5gd!QuBSNI,l9W()@E]&njr-,^:d)c)qNL#E<eNR^eEl]%ORXX.no\?D=XW))#_r1bCLAMif8+0[4W&"\K)'RD"i
%b!..mW8./<6@FgVDu:ib$=2Qb#6T9ug'L<e_o2A^&J."bQ.`5A"El0J]c-u<k<SEOgHu@5*`G9/#eDF.;:sU2k=4':fbauh.U3EF
%G4Gmk"Q":[Vu5./a(#sYK9]+ZJ;.X-bHNbIAWQ^)#;_?C@B^8><f)MG&UYfMHA3Fo[4Q(sN!V6jIjdKg^iD_/"V0kqT79]N'4/`7
%9A)DV+3H6DNGm-L'<o7rg7S9)YQ"GYF,4=uM8s2[qd4bR2Quj!Ih0J9Rn+qtdHnfA'+).</R0(JS4N(k3_u/(O[)$P-Ar,YDFX$!
%dIBu6>ru^MeO8=NDTrILSBUg:OH5_+1NoO&kdFPum:1XJqB=.(!=#jCVH^s*>'8_<A\VofPLZQ0C%*\>jBPRXj_=CY#*1=d2@U_X
%8`k//d]!d//K?^B@dR\bF1R:JE/;'cU0/`BQYLnJFfKf)$C0l;EK%kEqU9XP(iba?`1Rt1d4j=]9U?K,bR%$*k[\AHCIMZ3qKd+K
%kN#1MKb:JG\T9XNo#jmeaqZ%O%()A&C`).;(u%@?Zfn$"kcimqJE<2TetT.T2LsBm9qSYs(*h[,J<oYupSY\eG/C_7BtimoNQes&
%,.LNj$9!%7m<GNRM0TosD1Ll4%.n.V^`-bnWf@`>>14u4';eKG.7H;51oA\%Z:^(9du)UKo!1K&/;=l8d0,].oK#lcH_CZ20N.4l
%+gWEVQcEEWms^!.M3s:lNE@heW0_biM#5f,UA&%9Y&sbt;_!C$_-BnOphq`+[MQA?GR@H<%6kVG\:Ug[PP#4iNYkL22CsnX5QPTC
%g'.df<?(5(_.-iPd`pP@190?-'Ag-\s%^k1?iG?ki_,$"Hhl"Fhc`IAJoX0t6:!OR.d&_Gk$f=B"cXUWi<;;_)M\CjZ8(+*g-':l
%B^B'J1st('KLc='J0D"O*UBKk-)Z3ZN9sqFj3cdm:b\M;:;P@T?1Ma223rYHAWMLRKR@ZI#.3=tQKF7?mTS\DZB^Q)kQe"hFXNrb
%10X\l*+U/A3EL&e"dbBk6/TigMqIUprdA-,oQNE>i!A[a)aqn\ZV`ueo]la7Yci_LTU8Y:PnJf:B@Td19Fak`JFprK9!E]IpQ`kk
%E.HSc2_FD&lTE?H$InV5'R#=V$bT\INj^XK?D!.oa(R&ZNg)^E\hhlm9$H:D`>sAoT2Dr#/?_Z1N+n_*?6BMcFq3m^)fZ[piDn[a
%p^YbmMR_eFnEf30*qLK?cdN&8T?e69(OfD74Z]gGV\Fa56&">'m`<lXG3A%e)`ZG5b/4@'F=q>N$1G_.I*:6!h`8/Uocl`I+,_3B
%,?9^t8iih+5:*<Mb]Vderi<P&(,/MnTH:^skP"GGX8gsmhK1A4lqJ";fR:AYe]usZ8*a^RV3YTI4^IPQHgZ=O`!ZI/4S0_9I2O2*
%*Bg0=".#%gCIaH@qTLIROAI_ibA%p\'ETo"ls`Ba/9$,2dMDs@@^*Z<KHdSAJ8Co-dC&"o@u$>BJ?^K;<gPtkUQ6ZC.A3=f,*=*r
%2i><]^kd?>8?E&A%.JeCq6Ub.4\68PnA:Eilq+if':Aj-/n_[M!'4n9Pk61'^`miol:4q2\+.Rr1T9(Qcq,:0`-cS8<m*<BY`-VV
%:K5+b0I-#PZ($6+92!U@J!r_J,EjpAQO^,s;>c9WQ+:nf#CJ;0D`D&p8e)#^qT,ZYIkcsMSr-s<FP]]RYk_rk0;JK)K-mH1V?__e
%a4Cg\ZF&jMXuO^7%_5)#Eg&5u7L&/r9jmBK5fe<;^>T_<3bUY]mj4go9kTho*"*89"us[YL..mf!E(Klia+s/IGb,7:$7.kk1d9Q
%eAcjaq5(KHJ2<*nJB_UfnJ*+sVE5Wj<k-B/"cp;!jAV9'J-D83_@_bVY3It0FI"ap_fE1IW'G?aXA-T_M..jPNZToiMO)RDndj2[
%]sC,Y"jtBsfh3JWRmnm\!PBRTPqNE+(_722Kos4p3[RC38U:iiluHFS"kMT\g82p6rLfq*B!/2@#O1Cg,T'h'V+[Y:Lu>uaN!qdN
%hNC;5OLaWZZREfr<o[&T/4K7XNu>2-<qRWq#j=tb'r'LBZPulq'O^34=-F)N<tRW!3KQ7p#;`T=ZH/GQ_pi5C^sX9G@U^.5dCtZ!
%]EAZ!H@efQ<M**NZ`f+IOdH?""/@%MRpajIW-j@ndFV/&o@s.L3O\6a^eUMD0&>Kq"8582'e^MC4.UYIE?epk?4R:-`Ei27>I>Is
%OEX)6gNMX#/_biTYNM)g)]S2YfJcL<eD]Hnko00FT`I8[/Am(7k.UKsm\Sl)^,S!TRmr6l$-9VrH@jig/4J^/--K_[YeIIfbJBAR
%+jb=XZQgsY,*8"'3R8?/`R;/-As8pi.>='J"C@mid#^!<Yf[Q(/A;L>8#-CJ@1;h_&N`[Oci=I_0C<T]OaLHO7>:dgRS$O5Hg]"*
%\`88Y*!q)P*=9T"nC^C=%fcrZ=o/J4RX<Gqn,?4&*P&5-:/,+UE;C`ENnCk!RpuoBpGY=_=C2M'@IM]^&&5O@LYOn!7TBaS_2KS;
%YsgGWQ"6p6=hQqc=ql$+0iBOF\N>Q!T$V<$/244,IBpD0^$nt12+4Vff3'19,j9+K_DCR+g^&SbP&qXoJ.]fI=ni*+.q$=:quMq:
%cF\>l#7nqQ.!Ekjp&QrKCcN\%Et&#,4ub#<Zl=FDe]@N9Ps0HJ:t2%!^kNlakD_XG]lq)o#F$5ro$t1*1[KuWlFi,U;XPL;A@@Dg
%$l1@j2Qm"u')e!X4h6BW:3sQkN:_da^E;U%b-_,8pPhserp%gY1IjE8faXT6*;.Q@ab=6Z[^0Scp+ha3l[Io/gXnn$crmdZ`[2>$
%rF"E!'8^jK>G$Z1>cc_=F>o\8Tn"B+.gV/0b7$%j]^D?)M]%OD!f$WQX$'*1j?TD*Y!;9e)WBkm"EHWk(\^9skPf2^>jLIZU?]q>
%ngcY/a-NbD41WI6#;$sp6uY&/;>97n%YkpO)5[*84ut&#R0E$FP?f;2*Lf\ShS=fpnheSJo?*1M@NqJ)is94?A]Cf2]NA^<\>h%,
%^jqa!>D&t3M2_Y*ZjJPX:k]LS/75*AJrk"SWe*6oYc]+u7mu]\`t>bDoQBc1;<!*!2S_V\m!*A#m`T9lY$]1(QnON6n@j*T?A&m'
%g(PKUK5XMT.diZF8<]A#=dfhOe.)/\5"BH7SWiW,W/P^6'Kf2A/8T=2"KKS7+EZOYS/+*BT]=4]LJhhC*%gYYi+?o1P;)@pK=s7N
%*dZe9q\aslb-;Oq<224e#mX!1@0sc&k`RhM6D0U:.r*mKDlDe@6l)s!d.hGJ'qB7ilVF"s_B!a;Bb.=*jlg';B9%]NhXmtSpJB=\
%7K<:#X(UB1mNL2K,5%1)p\jDBo@lb$`d3]*-Ki`us+q$g%paC*Y;mlT8eEL-Si3-0;e3R>D^HS@Z2+,GaQDrahe'J5CL:-<Z'1X@
%+13+PM6G>^!$R/(S6`EBO+TQo@G&2CA)MI<6K"FLB>tlXeGCV#.)BRV?,HfGDHJaiagc>C(qk?=a?'.TB9XnKFA^Nj+>g5l!<Bp+
%Z$,&P/k;Dp0%#i3ki8<,`fVmkXMt8XCc=\A$;1.`*bY4(c]^;?H0g7MIn;qRS=CY&#ad4.a,?GPK>#UWe$d-sq5ANe_=/5/p0arW
%AlJ<.>i=$C70eG#l^5$"LR[^<>`=,2>RQb#H%Gbm!(4AQQ_u3!b=1rYh]/u1RE788qIg;WCi^88$fF%e6f>u4!QN))l177qIs-$r
%pLS6#^PJmDd:dEBi"GS%mVX:bcs+p.6(cPI\ZC5j429D3V4=SN%!p:TZjGp\%g[kN(-a=`L1B`uB1D8HXSlppHLlT*Q&@R.gJu&>
%1\V"'mFn4Z>#l0'a/_3BO3P[lanM@jE=[EKn6WLUcOKG>\(HJloPrbOa6lI2E"!c@(<R>kb+`%kpfI`0]-A;oBrF@orj[6m*G-ce
%gE48sZXup48[o'<TPUWkgH.&i/NqFrV=5(A6V:30k:`)L#Di?n^Bc:n3Tpfo<ZLJgIOh_oL@1`^,t&#-_->Lro<-6heL:RRM+("<
%$A6]MMVjA1!OEPk+mLh`E^e:lfeRpT@T/"m+:k?POk@.!K*'.5rJ=0fa]GOEN7_GX48E*)%9Au@e+/:M2NIMm'D'+!BCXub)D*%Q
%<J!@\cHki?)sEr'35B($KE;6H\nF7#Z\+hVOU%Qc;kRWQP\pj@UQ4%Ph2C.8(VD&h\CZH]`6R'Z`\0d)M\dO3`esd.c7(qnl5#M4
%(0Mhk<^;()@L*Oi&(?XmU6+s<:IWJ1:,Y*;]W$sQM$[YPm/a0cri-?W3nIJq=l_^tT7JX#?DKLW!2Jdi_0ufOJ6T9BKuXl<B)$#b
%Cg()IM0'oBiZ=<Gp8K;U3!L[`prQ';PLBrW4sj@[.:XTL@F;,?c:]+DCWIU[a)]Ea\uEachA=BRAd&mo+/Epl0fR#'d9a^UQrBR.
%d8<l=!9.0c!ggIK[/(+6\jig?M0Yr^G]NHaFjnY524H+Y26(h9R6N2qkod]52>(p2.rt@>6_V]hS91Y!bXG@iI*Ye,1>d2mGf_EA
%W!\0V5IqBjPd7Af!![I;"%7I:1]_n2.!R"i's4nInQPh6\'\qF0J4l9hjL+sP2TAd,8_^!PEa+C^4Z:cgMi$HnT@Q)5<Z$bq&nqE
%m@m-NZtGl?1R0_S*X045FK`.LGnc3mpfL%c;,M(6-cLK<>tL60ZMtU.^s;6H1#%:dNd^L*r,'It@HP2%T_=7>G`h&Rn9P]HR2m9c
%Yld&Ek8'bhbV1q`8+`/@49@KkK?q(<00CD%Y;oBThj0d*^+itT:JNNm#tNf4`ZfSPZN5D#>1>ak.F))m/T$+@nm^.p`S;<-NlsP]
%.B%l0j!Ek^f+VtjYM)jsTnE[PPfqd@0AKpM+0qG[#s.mF+24;*+jY`Mgl/R#.2')d.YhfAfrc\Q:B&9gI/RdIbf8O=)%dQ$R2nVg
%`b%3-jlo,SCD5<"6FFOps!]c1&"3QdQ^dF1hX$F2q(T^@AbVs=5-D%<Sf\2'7JL%tIg5'L"^PYlau7<T!)X_ke0,GthJ5Gb0^`Zq
%!_WrWN0p$N0l&C7eqbR_a/&U$=drge55'J<6H?q-1kr)';PS'K-/+%GeW)UB"b[3%Y%K+@Cl'QoAVit-[nh,1gUEYehfXUeLI[+A
%gbaO.;2$dH82F4B[M%BNZfibHX![C#"Bd.H,<rX%0>[U&e;fnUFVul#hY&mW$D/nqk77>`9AhS-3KCe=PJ85tPY-9-ImG2kntE/_
%Kt3]dW.+7Q8%CmeUp7(i@JPq\[ZeJ9a<DU<j"F/jl.X-an:\X2qFP'7UuS\5*X%3!U;ciTGZFN1\1Lp/Bnk>&<IA.sFYB"ilcENs
%R$8BhAf_]f.qnol2npkq@Cd9A;`tSO!uK!TL[#l\dKVVdb9nLW&&7r&r5:<p_lQkUD>?SqU=*"D58!l>mZ5t+_^mb1R_54J$#-d>
%1=/^])f%d.0VW$WJZN9MYfPpn-L_t^J.G9E,4T\dF4#hN-,iuS^AK[QO6pqIb&Q8k6hiXn%l<6*n)mA"PA;#S;].=9\JT0Skb=e_
%&?:Ne,7b8MiNHuN'M3G/C'd([0csRSM;6CVO&%#!qOSYNT3uOZKp2)A_cBMB6BA'PSInogfJ@W?%$$6F=a4*g^-oFOLd@H/V]WsU
%lo_?M.g!o<ekjBnMs#us/11J$*!'Xp$^/*G'LJ#t'jh_ADeeMrePhbh"<#seD*7#0OXGj_2ms/NZuLJ;"W_X.\JmQr;$MG`BqC?0
%E)FtN*[:#iq-_ce&;AP9<)j^,YJnMh=-PYZ",+NfM`<cPFqAB\+pt<_g1+9431(P1NCKbMMl)6_O>6IY_=+tuI+N^N)@',>DBT%5
%RjbVP=qq3J==-2LlV+f(5&>Kj(/>r<O*29/eAV%*f`?lg#CE4`o*)`sd%)+!J:11_ltL^>(5E]T_u?`/^oCrI!-Yo$'4r;gfr0t.
%kJXe^T8R`7f:oZIl::?i9=1ln^=jjW;]m/f"N'n1n^d@m`O.Lm5kp3Tbae%Qop<]oIb/!Mr313lq$*-]Z!g$_Jd=1hQ)WFj6L@(]
%(DQ]H3/kBIO?sfgZJM_k(q#5nWM4M*_;6TfZ.QiJLB"%.V9:Wj`\4?X!DFZhO!D);Jt^9"M-k#GjhRS#W*Ms=@XTr[lU:4YX\1e8
%!&f8Fpl8)c.iqNEI7FEY[O)6]rIRcO50kSIU_93SDYXe>^94;DT=Xih#81J\@^dL/!?nZ(.0"3clffMu2sE:GGLm<SQ60Y8+K.]"
%JNE@47<h(^ac5@hY9c""5)EQb<<IA..dj](&Q08#hB1\.oR\R"CDep[e]L-D3)IedG%dl@$'."h"S\\NU[s'p%nbCSC1RBWjjMV0
%-\rHm^:AB%1-F7D$C#G-3fFb5dJ?m?rUOb[2YUrNY(7tr]p%?#'X?Q@K:[GC2b*AlAbRBVs.eR6?:Rh3l?:@Nh2Q^#;Lq.JASuRc
%2<ts0pLqr3MV-ZC3\*A9P7T+F3(\`4/gS5Q'JNKNT9+-B,7d3GZj6,^Ytn"S9;4)/LRKR.]!p75nL<GuFVY/u_j+ku6`AHP6E[CI
%3N5V43j2V%Em\V5[7fNR@lM0g5X*.Ar/d.WZ(p[<WJc%el9(&@1-n1)b\fpPBgkaq@?$X+<hO'2gK,!AUq-\0q[2Lk2>?$<?m26r
%f>GBj]rZ>.=(;]ZX:J'FeQR7%S@\Q]BhDr$V^r8XJAKoTX.AtSh*?<e^ZB1U^$/\3)h0uh+3h`n8boB7H!6kZC;W6&X,i#&D=HE4
%G5mlo:f0.N@?s&SKsWTiquoAZ0m*V_8PZ=ALX"*ZKK@3mN.CL,\(C[$#(au*?ID6:@0PWK2%+fJ&Q]?-ki7LeZA$bDH(Dk3KsD%Y
%e*t7_45KHRi)<sF0N$ALS/[W&NAA_/=)/\#N"eDcP\%o@LbN1ms4D9E@JHrhSi@EuBtZ($_lYjZkb43t3L&M:)Y`7\%49Ycr_-34
%&UfuXa8:kUY4q0A#W.kZM^Q4_\.3OFKrb`:!(bK@]&67W;kLu8UXWu,;=.Yb]5Td]\7[Un:cd(S@ajYp"R7PU%4=KknkHoh$><7S
%N=TH6Y%67mUBOQK+=<u9XH1?_,Ae:8jQSRQZS5r0]"heD:Lj.qZp8`2].K-BZp=Q\!dXa_!dQltBMelA8+V#;1coQDLJ`MMGCo$[
%s3M%C?,^!UIhd_J%!U.eL]uG"Y0;WjerL1$-DSX9;[t#[;MnEb,"FG+`YHDmU(s"qgk-7C5G(&XPfZBHV"JjI>hiYh9u@KGoTuIA
%^B=S+OF?u(Gd;1D&pRPS]rJQ&")KM$[=Ymh/[<PJ:E12Hh9RHE4CSDO0AGfs_Bc5DTpOY`5PjPd,5@ja.!1GtY>390FPPqHOe1[k
%?njIa$4Aa3_:&s-G(HS(,1eZ;)\ukTIaGj%3:b!TT$L^3`*2cub7IuYkRC]6#'ZuMde,tj>\\af>hpC8Hbj$A5`]*KmK4odkHKRj
%BdoS^LBL1Ma2O';(1_n6,(F=;5P4LC%eJSK$i"<KT)i1NP2FMl6"+Dub%\(VTdSH]_9sGH_YLr_V%"/>l(M6Fe1$%4dV5ooIMe5n
%]N-!U^JSWkI3$!C%$\>lL*)/>\\bp\Xl%>;<[AQ;p17r7D#1A:&:.0sgU5t@73BCk>(J)%Tae`KX[BcK+6JH'n]u*U:oE%)XHfN&
%QSqJ=DBNV0S7%sQrro=d`aWsh]SfhJB!/B3]@]E9\\d',rar9S#dN)`iaT$_o95*E[DIA><PIf7ril'b^!\Vt1liH*"i\D9I;0:f
%p\M6^b0=>iQ3EGD(W^<pfE+&BQ9s$7gFEBt[)ML/r"j%K5`,ZuemY[W\"gC$[/tP+P2%u`!u9Nf]jW(!-0PdKU*=b!/#ZC>]DqF[
%`#mUB)(YJj:&/D&:l;u?S$>;^rm5l$"@_Pf#Bg>fcJ`B:+Ks2'Ho"gMFfs9N=D:>'/b.r-PCH&3"d]6K98,uVk!HhA#?6D![-nb\
%K67]?3^>&=/P]4JpP(R!S#J_e+PdsfgYdacUc_;nnACdmbuA*q<N.oU"V/"8P.$_qQ1)dU8H41B2d;!4-2l(fC%TpOh,J)&?E#UP
%*r_L:V_D!gm!6'=!q2+s3pdVR[M63?,Y5`WZE@7?\S.\-Fp\RVUh57`Cr7Y<iCSfj?,&<IYeH\?]o2LNYZ-^eg2P1SQ3n#_8/TEZ
%AH_9O\9`\HoeRP#_'.#bY6%`Er`b^I;an!+rQ`]$0E:C9b36KgYjKn?@C_Cr2R<NH'tBVl5gWQ6#.rm9lE0I9>%'$>@M;gIL"\hd
%Co.QD*_SY5Q,'snAeA:V$Lf=mhU>G45A/[@buEZj\euEQW<0_&qID6X,r"+U%&!L]]frQ\Ga^,>[RS.*)L6a9,H%BTnW96F`Dl(-
%)W_:u0[,#l`X61NR8:L8.p/9$/N/<O&&;Ze&j-V_5d*_W2_[*F.TRP^N-[Ic(%*$g^[,lkkarh\=3Hcf&:ZZ("?O30T>h5H*p3*s
%Fp<"(,h6B..jeajN>6P48rFRoi%<DLYe6!qP'21lo^U7?X.XYbT6Q_RZ88;o>/B&Z(1c2/'5EETk\m,oC@AA?lg3XP&)PMQHPn.-
%qodhK#6V6$`X:7"Ji3<Y++T^7G97/M!FK?HJ[tSu)Cq>E@@BJ$5,M_;fjC'XQ',JqqtON]_8>b>\@OmE/%Bk?2n'-Z8,M8mVJ8mh
%W+9?DRri_P5l.9\>gA3oEJg[7o"'W6#P"h?L5d:dC4<MN3tN$0U;&]hGUp:./'O5OFP!T:$3L!GF0%'aWT9OYKlsg"mT2\jA!QqF
%HOp/C`X:-R>n/f'"asbF/2a%j6j?=F0U/sQ2n-pHleJ<4d>h9R,Q$<!14$">[+d&IUkH%(VdBUmgZEY%i`BP#]<iM-da,IAIMH7H
%jZ`Vm#a.sA\-OQ4+i#@dLXCI^YE.r<\ZLt_ZpNL<$9A&7[R*a(8q]luNKREp8-b(Gn>t8%s5dB6O;K"1dn\L%'VFu;?";.ik^D$P
%FuKaBT,e"B<\PZ5fACs+aF$dAdq6G0pkkEi@;p;?>V#STB^Oqca[f]B*$FD0J._s+I5\87e=E.+2__k8Dm#@aOM^+6C#Z5o[sM.2
%':I"d@it`0SeXY)5\0M/Y&JFfj`IXNVBND(O$Y-Nnbd94Xqp?4ipadlE-&0-/1S8>ZF=C5o&ec=JfhQFDU+LMNDk>uXX*\V`!^eb
%7C]DnG(@Xb\p7=1/Q!;BFKM4re6p!sQD&Z`?QORhkHn6\m$@+0-j0SuEr,lG:f[c1C/GnYh0F`gAZu04Fdg_1c>m9D-;)/:kjj;0
%9VduC=R_2(`+g3l37IEhbP!i)a.k'+ehm:[fp2!r.1#d%TSJ4R3\<V_&>[Hj9kZ[(9mONG=*>"((%W&X_#nJC=^^3?O1n7"R=;h$
%$ke;GGjOO1T0FkR3DSQU,n#Sc&)0BIV97:(Ec[6dEL?r+jGF_9:T]P9MRQ2<$fF3&KF>A$:-iV?oE-YSf'k^.0"brUs2R22,N33\
%*Fded.hO=LX!ga^Fg/#EEC`g4X)A\-m`k7`,g!_E]%60m(jhk36'*f(f%BV`pt-`g\:SuRhF4,aHQ<d'H+;[Wq4/nL;9^(k<,1Z*
%%Cb>\%P+9h,U==1.*[Wo,LJD@j=8%8V7%sb)i@%M2[8K$",rD`qnY%N&,bH.pCO^g?\bR(eq$rXLA2-,I^OPr;_ca^M?d#LjA[\W
%?l9J?%R\W<asTrO*ULk%O=/rUNsC^%M[Wos?IsH-d9dslq0`MALN$,q>WP`06t%S-@si@W&=V5'9IIAAW+YQY,`lr(&jD=j\?hV@
%;KOGV2a"Q[$07n3<ZW/YBlO6KkbaMX)t(Yd\N^ib2eNdHLm#+Ne_4>/,d7#Ts"7?mkqA*gn@iBh?9ti"Gm.s&gJPQBXg#SZ,6T;i
%LXiN&Om#8k\a9r>NRgnH30l+GJOd4p$2-h-$C.tB&l*U(_2XiE'./`ib1^1qa$P!&[C4XE80mU.rJ9-5kir!>Z@<aj/o,l"FMlFL
%er=1K6=F$NKB*5rIop-hc$;1uOb"j1bbu9EC#O8HUWJf)+*O]2dWF,+\LHs(b[(Q@8J4@.Oq5$S\?Kmt$EeW)V8h+=O+kMIb=<KY
%lL($#daDOY'_/ZUQSF7O]fbu)kHdTS9;e+afsh@M_nS5%+I<oIAG*"!@.Ef98YWg"o\D#Bm;Pg8TJQ0;R=GXX))(+0:e`]#%cd[o
%I_P\CT<R6+Ac8ktQJF!XH<2&]YeB.->Rfgp9D!n=T*F>GQd--?n@ldsN0#G+p0U?E0c%&?6"R^_iq9f5MrB>J65L>3UdMB'S<O8u
%.G8E4mpO5&L:Z<GMkJM='1Xrjd>-B/*#L%TZDD:1-/@o1c;/H$k-1)V0Pb,pm?d5hnd!9-VskeA7QX_aKr_=81r*Rg:S'Q4:MKFk
%\if+4D^QX<q0bd(VX!kBl!HauWQ?;g*/g,fPI/Q!O9'REViBtm?oa)QD]m2DhW`p"0!R6_UOTKeP%`NRoFE\aKnY=aAdY+,jDXZ$
%KON_!Xb7+L=1g@qWEY"=2=2M=a'G](rg,`(P0/daU%?3:]t>s``Qo1Yc>NVTq&f0aH9:@5`c^oN53X/.OW:le)p(#k&pA6\U+YLG
%qa5I2RP\HhnIQU-$i>Q>;-?h>@=S&`2RSP16UHKk:q3bpR8\5UH@^p3#:7;'HSWpsMDOYm7fJdH`E:1BD35!fo#jB:s&@baHXI,V
%ds1C5$qWnufYRN:Hh*V`[3:CDpKS1>3@`jWe5,Uuq([lGZ$>@+Z2drlHJ)MW*0l`^@BTE2_TD[;l]SJinjV5VH8ru;Dd\n>OG!:%
%r8<"e3Su9Y[Cd"'S+'KAp@3J?lE.S36=b&Z(A6q\GZ:*[Kc`$WTDI1JRGs'pXJ5/P]NE+s$RM2T%4>\)_QYrF-\'Q)p.&cke`Ecl
%DotBdQ6n;B^79Q\pc+=Yl@uc*WTa6+%A/\I]949Vs0::g]&H9>(="VE'u4(-1J](3g'UEZZPV%:oc8^,9mT<VV>GLf;,mH'/r6[r
%eC<:q$`WIYO#FdRDC)aC#*6=W`-8G5)TkPEQcF"=9Xl3mG[jG-8I"G6K3N!M<_P]O.=1M<VMM$O:G1k1LaZ2OdQ=>bd%e9`"^E1B
%<05!I[`&#ABSd(9=IK5pT&<BoaJn:l:A^FL'6uc)oYTdtFuBsY$CC`]#*Gf!Ke6YBOQiW)fbZC\=>D_ja<6Z"JoIlN$mGgG`"!Rp
%@h2GOK+)dj*H/o`a.bd+0,'X0i0Us53635?RO#?nT*@m4.%L=o%mM6UKWMZSogT.*7i!YYA>*X,"RY:1$^$'l?_Ihq$;r+`hq2>0
%p.rE-6!.g&L7Jc?'0=Q3Za:1VX=!&?Hjd@7m-].mB=Nh8dI5!aK"[b,B.Jer;+h*snMG&KM^@9NXDP[XLN!9Z2S&SRB?g]Yk147/
%^Qf8F;D.*Z?eAb"ig&5R+7/eg&]YVS+XjH>]])+I.Emi#%_L)AN=M,gMi"dI%0fG0^r_j^AN3f8N=I./6n\"2-9!8T@dN@e_Qq9B
%2@/,t3?)"H*.*AlU#g,*8.%#2^&4:]5tHAiFnoR#!S=9Lh:Nji,1V>AiP-17l4mhfB05?#;c$aafcY>sUHJ<tRq.#7N=GHF(*.UI
%#XmE5\kb);MTI"`[skE/5sO<8G0p@Ta^A_GfQ:VUkdkH:IeL?HZ+Br*eAjck*CQ!6'/0,M\hGB^pDY+]X9"W1lGis%q&kNW8=aXG
%d.!51Z=Hbp4!@#%<TOt;g,>!CLj5\JE9R([Dj1eHZ,M@o"o'crTtGtNV786HKhk%VYl.mO6ASQ/S0/?Ur0%a[BL*iBmj*PlBk]mJ
%/qO7LL*1\;(E:7FE=AIm&-\E$&?h#Q6+eu'K-cQ<F:a%K@t]XI6?LcO=;In.F`0WTq8XEt*"QZ;JGmYRCk_HNfF=I6;7eP+e4PR@
%[&uB_4Xk<^n>h@Q7esiXN8^*U`>]sg#]K;ron15HKqL#*PVN[q+2fj#he.FRi%]7/@@UTMY5QuG#-@'[qF+!VVjGG1pg!T%X=2.r
%DgX6*2F*)87Bctu,dM&kA!%KGr/D7WGTp_]?R-.N2fh/b+pQf0G%61B=-P/d*t&sp*f`-h6s&Fg,K,P'&Dm*/i""r7pWsGCcf3WF
%&Ag#="a;`=7-3<s&14O@[#m*@d*M%,Mn(RP;g?p5nY"McJ^u@(:pH_L#[q8;+hn]-89)Y`[fK@/\=Y_e+_FR8#PX-1(FdT"cj`2`
%+j?(#)^c^qM#S/'=U5p4D+-*cTlR)n'PLpYi#%#[Qfnh&J5)5]>4IJ@ij//A`.<*CBpQ3dQdK9)QVTnp]!EO0KqM<1S3`bTPs[*C
%'k,>pAG%].8[RI_M-ffu(L4ACQe,e.d2>l3n)hrd%O):m[!8?uYa'k:j;39"^jMM6)j<XfYJcYW=Frm8m;e;+LXp@JTsQgVQ>1ac
%ClZNp3D7ijbE2.sT`n>logT-_*67rIp-EE2eJ!U,YN[tuG[gc?GU%k)3fPf+hU[9,j#qSVB?CDjW2X6q)s'\n\/T=%0GOoEhO%P7
%V;Zf0_q#)JgrNm!Qta.:5oapYQCSKE3:(fsBMDt<::eh=Wlih<A15CE><]1j;(A`XK-O9\[GN2r&W-qGaHI*#+Jn6G1:/qb^[@5X
%f#^,o*DDE']g[Zb:]ef%STHR%R$0MrMod8;iPlg-mJ<"V)Lg+#goY')m'";p9m^D!J*C4OdD:M#;#6.]@O@t^7u$R;&J>!WKSF58
%2a1pM8I3^j^A"00i`L2I@-Ht>cc<-@-r[!*nLZF/Vg:mmnR%Y#&nkGU4)<#]rUq1Obc$LtpWu_`H+CA=L8*F+nb'mAOTt%@*ZBq8
%e9eL%$2@rTn\uO^j_GBiaS_k-o%4=7?=YGtY.>XL45Noi,=@Si'O'<;6h/?#QFjeSV/d$_4mbWJp5':b7T%lD?mnOf\%\%jF@g'A
%o\'Gd9%h2`g>3qji;8j0e,u^(O59<9YWp_/$9.M\n"+2O/6n'dhIu.+`!bSKV55.,bO@XV4Yd^i_gc`X)9.09O["f*KWqS>AKZ.[
%g45:PE/P.dg^<0$H)OsqWfHgkpj>!!NV&kV"MXosI`3IXis6*JDnbBZ1mBcNb?^^E[#?JY_Qb^WLU'Ib+,gb`56HEpfLqpRor3o/
%NdDF[Q-4uIqdHKrC=;stA!b@QJq*!=T69NP%&TcUGt9lk=?UQ\if,Bf'VG_%*,27fHG>"cepAAc"RE?(2l6k]gXRO/FFY[dJ[;]m
%Q<p1@&[$$iG$QTb*_-Qac^c5SU3,:2?pcX:aV67aL3/J$7IOr[YLcduMgE=(>!IMn<0=aR@FBgeO26iojW6o!$+goFPX2OY@C7,l
%V'm;r/9ZKY+fLuY\8ar>).JE(bS8o[^B]q-G'D-g`YFWS'Pn,[oIUO<_]OH*%8$IT+!><Ek'J4bLT3\P"d5VS=Q+%D*Pb]CI<k2B
%c]g"*X/0uh@uCM*1\i(`$B9Sar6>_eeT3o,'IhXPWA+cE::(/oifc"S=L=;YHQ-3Efe*u@C%u*nO2:K8aFu,k9XiA--8alFSe1aG
%R;TqX*7HRPG[lY&qIn".fHU/EgHD7D%``[Wf^`5os(#r.-!s!NYsh\d./-il!XWfPgV/IbC'u9RH3]SIjmKs\L7`:e^ulBSc5'9j
%;(=u:D&^5@r^IY26m:kZS?sD:3?GgE*eQqrZ%D!QMX_`_CA:@9;'`*N\<Fl4QGVt<LMm*=%'bd><@;O*-X3\!i:TUu.B;^2F9J2P
%"piC(U!Yoc47@%LL#[$Q["CYR,7NPN("%"YkFF-/h@^JhQPSMTcahoR@R4k6G/Tr3[rp;_\5V^ITAYV$,#4E"`p_<N'pYqCf_Ha!
%n0D`A7G]NTGk-hXNX%N+O'kj&/N"NaU_qI?gPnF,ltVSCImb['EWhS,6s'&.0I^U&$O9\5keV4+P?Knm0)UisI`r"&E@@Ti,FZ!6
%R/(`A2]g>DgrVnT.U887L`ENj1HJ&Q#!5quoSTE@no8l0mYeb#9jiX!\C!f?(`7/fLV[9A,O1s=Id@fSd@lG,jQ.F-$LMO\]_Q#>
%E70[&a[4*!`DQ%XU6VV:&L.Y5k1Yk5d7ShV4"[P\TdXcUKpCWP8";'K\WhH".-<sB7uSiG4aCf+4S6PS648pGKuJGf_EJb8X=1^M
%1o/FKOELi\S`J(5+Nqm9)_2p%=S)M5:C91c[(*HZL=Ba[G*]#aQeCFfQ;8Af>mmdl=<U;hQZU002UiD5aQs7W-rAg]8Ok0(ODgp+
%IA]fRhM/;4aN[("J**7Ti,\c;9F>8iRD440BW[(8CL_G4m!%Os-DaPE`R$7t.e:,VDNk^@KOdTS$l&\eT6En`?`&2Y-4LIE2"c$A
%(f1]$qE8^Q\1u0YKG#m[lJ#KFU]lORYK_b)7c1$ZG=EE3"I*5a3r/C.K+JME#U;J-i*]XV$9Pm;>(b;0V4II6O,N%?#Mi(7=`BTN
%m#sF\3$-M.?rD5SHp*'QE?b,C%mh*QIaN&\Uk(OdA\T\4'I^]g!uq`C]3@*@KJ716q':X[4C@eq;Q?nrZ:0u&?N/%P@:T4N\.QT4
%_W^[4#>sVLj0gTjLXI45TS!^<?P\ImJ=gopo'.YFZ)"=&.$m%hb:(<sdu=mD-:f^I5)>%Dg("LUK;;MI7kA@A!Bs/2Hb`E@LqZOM
%LaL*/')E27C;'P5o"f<<_[C\KK+N/ShMV:]_&DK$.k#7N%#9?(ji.P!4dOh7GM8u@IDh[CTW3]f@t[YdMRi27YTY#;*-%l9jo%=S
%Z-a1J\0'#fdd#"c2uJK`LE5Jfn"HMI`A`k);2FnTG(bmmZu!qITCK;6V0'Y9_E*P4i.TH?C?6KuMP5p@m.@Jk)DUB#D$,BhqFt(H
%dj:Q1K,n*#i<ULTDYRJhh_=JdJUFafMY6VOZTfl8GhT\9pZa.Wg[DDB*PTRA`/]$''cjQS*I:r'hrl-d<ask8a"km9TV.hViV1u%
%9Wh?T`5)oo3)??*Ie\<!WJr([RmP4UV?g=kH<_OYksnM(KqtEKHK[;^3:L1+O'UPE,AbaJluA!UQk8p['J[m2"(ls4_n;$WA@[g^
%Gp9,Sj>*hZL>m,)O+$NX"cbnsga+J%HEet9&Ld&-I2"5n<0Y-W>JLI2I(=e\gE$0KU\;"^-h3rp(>9fh$8C&>#EJAA.OqlT$7#j[
%^BKYGIL@@l2b@4mW0ijn%F!WR";fjgE^EMKo4-rtS$1F0:Ifdl&)I/O;nn-hokF.rIRUm$eQ_)_L4Wa1Q*u6c23c8;_/VL^Mj@^0
%*ZPTEbr`HXbQc1B=K*Y&n,<S5`@kNb2ss2bZJDH$osVaZ-9@/D*.m,La*^50c'.umUg`FjlmOsA`BABdm!rS<`Ur`Rc(?H^6Y8^#
%lcO`8QRg3tdP9[R[C-Z1;X[d!/4]d78cBi1LX#E9J";mKh8s#:XlQ&MiJ6+]s7IPVL249>dD1.LZ=!K;$M<&i!KLl[rJgUr;K\9a
%h=4h=f$E1gMe$<\p$bbrr3-F;?s8^0^VYdp%Js8L)"+H:#&-leL.X0@Q$Z8FN86()FQ+\B_d0he_4ceaiN2`5m+`-5At$I<NacVn
%>]51gR"d>kS`]GFE?b=kJE%'\knZ6>nW,&XMZNj`^C@9_^pBM[Jm0SCF*k*'Eh6dQic%sS<Wh*#N`Hsl8k;-@^c9Mpo]e)<R%t*2
%H81]!2S;CQ=kr,\jm%OC*3/6,hZC]hehqErSr!J^hX:n=a'V0.=)5i@NbQQV?f0rfqB:'IpJ1LbXB?f8qcTM'=Fb/2/pN*1P%L>`
%h[?A/_BD1D"fK!S1`qsjZu/('S;a,:<iehg[Y2,HEUuqh0MFT\Sa">aTr<NP,[rYSU(FuBSu&hg#gd7rq-@,kRN=QLk@K7l5\a>f
%X]pq!'o!ib&-N-T"`s#k.K0I<g+%6YI$\dPZgWOqqEHA8.P[I'W/^L/Xg>Ee<GYrf_SchZZi525QE)8QD($"tnNjq,)N:)\1-"#)
%].CFD[r1u2<Y!=MAgrLj0SQ6@UamLZ,_ntJ:dS0`9I-fcINN^16W5[>]./Nt.HIX-mYN_A]$iq^8&0L\+7Gl/o'$PK]+qbZT#tNl
%.IKnqh/d56O\:$UeKP)Ef.V4*i1]Z!6T9B>(PX(C9'"t`NYGL\)K#UOieS<GIcuoK@G5Khc%[OhWS):BUPLkc#\1%);5D!BUap(p
%=[K.H/W(6#?;A2hBOa:mn.@>]:*@Eg44^a'10sD5T^c6)X:`!\D3#hD<[-ks4nS9*7iL!/Q;U>mSk\fg'-b(@W2hnPN"%/p+@T\l
%C,I2l4GmNa_=F@<J/TD)Ye`P^ai[Sa[fL)?i,!CN>0Y4m,4+]sZY-?rLCjbT9RX(c1jY+'NZ9QW0k;7m_d0JBpSle;osi<a(%I1"
%7?`;p#fd`)B>eCmSt7p\W^p_HrN!2dQ`#W_F\Yd\[X2k2cJ64BMjAtT<,e_&$VtL"+Yl*t2(`,HOl8ciEUVuYjKJOf2U9)6eS*dB
%``*uYWkTJ%iE,&$a1m[bc<:-8beK)YN.36nr&am8I[$E$+au7KQ4JKDnc^!5$%YC[JfK,1!N5TtL4Wl9?4BR*s0)G$?iR/[+pr+G
%SI@Ld8-\JfC*,N:7QDsT?_o=APV8ED8)`!*NX>8FcA6b#Vme&?<]CrB^E-nmoc.MH1U7qG*FF6i^+]KNc[G=#b6Wlh<"9bc%O*pJ
%P(bd-r2WUG0Dar=kPWI"T*`)Ukac^(FPC3D'$4%'#>:s@OZ5T9X/q?i`1d8m>+Y6+WEBe[/s@@UMkh(W1F.4PP"V"+,Qk*mqs8%Q
%/Pfb^NpY437:^#N(A^9P+t.ck0SFe]f[dfe4heIc`<=TW2mnB<TH=kp8<Z)f!p\B[feFR0mFuj/mnrOdGI&SdraDTC">2FWc;c9.
%d]6hE$tl'I5E(!n3FG2/;N[H8074aT_'>ZUgFJMpU7;ahGHs1I,K(I8'rOo_R+KtpJL.GPLiY90L=W[dUi?0f,(f)j5s/;9^IN$?
%#^W`^=+i8UPiD6J^+U>]BOFHn?"9Xe=UIB*D"QZn3D1c53Uk=H5m*lb76leQmd">5(;uj8TS%GN2,00Q?ipDLI%+!J&[eG0KK/\_
%Re9u*4u6H:"(jMVr")CiQh!oP1U!#b3qupW_foDFs5m,'N'+qA_L6l8FJt:q2h+YRBY9k'3'X\VpPhM<6"_EObuu=D&0%aJ!-&H%
%rX7#2nmt(OaZ&U&hh46R(65a@$1>!j74BUoK-"$5f'k]=;<b24@I$Jj>D9:Z;][n:0(Y/>>rnE4V?`J4Y?p2PoPf)h&MH[d'W2e+
%&`KK8P5K`-YXkW8_d9*$+eq<\X0.5Zr^@*riCa)D=%(G>c%olmAO!R[M_kOa!"%UT)i14U)K*+E3$s$97FdP<jU>S;*AUU^!p]Ic
%3-O7'?_%C:o:3B/W!n@hIW_Bmfl^8(@6'R:Cm:7UJ!_djS>?/Ghm*2h"\Xj-KT>PjKSo\s0'.6cB4nhrYUWa:?*P"s0>EI?<:['`
%Q#OG#QoF*f^?HnY.5m_A?<@O&b3$W6d?5=_E1'E.NpD_"Wi44bAHBY>$9di+f7@Za1.aM'?ZkUWIRf'm22#8mC^!8Hi>cHi$1upl
%XZM'D0b>?olZ0$%"Qg<2lG2Hno#,%gai&4^6)VdHIXU3=28dIFiG8ct10hVN<7;Lc-J=!3I?f)k/6gJC:)DJ2O-!+SY1hCM`G&\0
%*7Ue%=.n$a^-L2^m#DqK/rB.TGV?$:Zf40&A;^>T^Z.'B-S7j_mrU'oNfb%W3H7gb"Wm3C*J]#HKG0Bj6Rg/'eP+B"L^TIG?lgOD
%0G(:Wqh1P$0TNajhp0,r9'2^R$?D43I6`L!KAABHcT!qt^+_n!8k'@Nm*Q^aOfM.1OTe?Y+o*c@S8gb@BAXO;B!C=)@g[KE&8QgJ
%RX45/B0?f][:+F!4Eb\67F^OeaZGQ^J7&G=f6*A[bF'7ff=?Z(ZKEpnWu[D!%id>Rhp_gs\i>Tt*5*UK$s/OWTbCGLkWXa)_DUZs
%qs#9[Rs.9k%TEjr,Tq`,O%uTg_0K"m5)BO:FXr]'!IQX%'>5[mjiY?2ef60idd$kqmIp!Lf_%=O6FaP*=8nM)WMT%WMQfht%2XH;
%0g="'nrjcgH+sZ6i?:#,Z-@@<M91GSG3F$;d@)^DGK4Mep@rBI_NIEGJ8_(+O?)ekFiRU-gP`D_kNI3)"6C*I^^r.$OX>?+AK.^3
%/?X6T51-'Bmod0pHej\QCKjJEUm>]jWqbR)gB^i!@)s5.d&'\T9U10[-pZbQ!(;W6%X-DtS6?g`cgK="IKH,.Gh;@da.)*%2/huQ
%*h6qAYNcp56;%ahc7:\Z2$P_Sk%#f:kFqR4R\6lnZ)baPq4k$bF1eNa:'m4D$tUY1/6;#)5D]\g:N=j*n.KEi#.dkh=ou63XiGkW
%\(ko'GhobhZd<LqrM1a\C``I]gh7!E/dFkR5'6:TkjfSqL<"0Y/g&N+_pcM@(qlN.Z5)RY6#[!4-:q[W&UgE/QkX3^lKK`]97TB*
%-sQurr;>k]&un'NH_Q%Rk-5oil1nX=rp%gX1#qMGoqq`O:^$X8nFYY3#V]BQ'ZEdX*4mu6%2&=uSN=rQ)LDW5Y.con'[!Ti&g1t<
%SPnHV32Y1B>tKfXVA.1i(U4jd2=$s0TgfM!86c<[HLZ;.i6#'9%.Pl/-rd\/6$uWR4-j.'U'4k6QfX_D;Crm7LZA#@ds1i0*cot)
%\mG6V_o`<>O3@%clsm,#J(^fL$48R/O;O`bA3@lk<3_]"eBCGh0JW!$,pZ1XN?kp0(md0][)\K_?64mtopnb%Z_qh<,$#"OJ1<K7
%.UcGuS!Kh(C,OeXPVNK,Yu;(5b2U*(=YLIdAA)V-rI^<U8kHmmEE\55#upV/#j_.1Ab%=ipk5.AEQ#+DGpjG_\jQ_$D#?SO9tZtg
%Ql3CWTct2@9T"n+J8#'pXSj+BXD8+WTo-O6X_@J0CV7h)JO@E2K9J5q"n;'R.[E_"WomO#q:)HeFRk2/fj:iLYMhJ]-bP)6kt?U=
%f=dgZ^kg=])c`jm\+a;^gOG#=*37k2LurpOJ#9@Gh0-LsI33NUXI#_E#=u.'b=ugr`c'A>fDrAYUr\WB##FJ.+:LXY2^BqU/M)Q`
%cY?Z,ZeWmDdWJ"e'kf[2'uQ1pN?E@A68VNg9a[EEANh5?*@aUN=Q)\$-sI1c<N_$&=_i`Z2/?J1g$urU#50(T*n5lJ5=5a`Mbp#<
%UZ*kZ=^7ZKQG@_>*"?^X0>;Z$]D=[Qpbd@ZagaT`;(i,N5f$N9@><)o7hKXNW[C/'N!T:`fCo%LoHfh_2(#&_c>gf]T?K@R<ohE'
%2\7W>h\b=>7%_9h?Y5_$5[eKa6b$_5;=RBTL^`sCCc)J<HnlcYcV@"K=skNZ!5gAI'W"E<B'f]tNYL6uA7)F@:K-XYBjB(&,*9iZ
%Mi6q/^a^!YmX>#iKBPbMisQ4eO+1%d2*<f`bI:j`S!59GDl\,)J3.Z6!4+ilG<+H,#$>ZG&kkGglOp^U[FQbc,V7Z9#Io\LVa,HF
%VGFK7kS`OeD'1)3lP#dg+A2tLDYCpcFVLPLkZ+tGadFG_P\8o9U_Hm^BAM<d`*c2cO;NSrX`dUJEcYo"OpT5[#?7M;G6G1D!+tNU
%4EU0V%jYDnFkRer\o5AfRnUk<gcFt)k8?nZ70.I*CA.;@84cX*j`[k^@aos&Lf_r\$'6XD6r4`k.2_0@m3!Hf.gJHU1CG%IZ3)S"
%$i(`3=K1#.j,K^c`icUC<nX2p"qq&sq@EehnfWu)&.m\,Ic8Pq(iT&sc!CaCk(r/2I:JBK?9TXY@MMnGR-rf.XonKD@TNEtfDk\S
%Pq*R/5C[U4`IfU!9gi>8hP*&qTm7BNrSN3.CG9:;5H^D5$B'`H&/cRn]8;@'a9fiHhG+^rfh?K&XYqB35E=r=,N9"11Z?l#`2q-9
%Ip$`%^aISNXDQ8:Xu>9AlHp$\:pa!ZBk>$DH$rkmDg&m92dmeEh$:Re<P*=]U\2I$d@FUf3mWS(INQ=KV%K=,s7m=%>!rAhYXDDh
%%Y9#h(QuD"Vg9i0:V2GYA;S^l3^fEeT#:d_^M.gWpo4We1Eja?K\bjpS4(98VV>JdI6;LOWDSj0m<-dDcTr:FX_eW>/+HLs[r3.$
%$TVn7E?$bdWe_hB(%LNU;V*br6DU`m@,kfh4I+`?_?e,:p='JHJ._5QXu@Mj=tUL2](g^6*@)9aI`F#K,g?/f#@X'c[,8lb.N<NO
%nb9BQ92^nFg83>f5+R(O>5Rbga3O1+$)UJe%1dagLY$ZIKH/31dSF;MFWI.]SN(W#_Qq9T]<2:M#6\@3Z/#!&QpHaQ24FHfIV+$q
%K\sY7i_2^1n>jfjP"](D,#3`NNH4\bYdaBiI'9/E+`EDlUs?s+Xq_QZ:fka([1_3)6JbJm=VQZZ6.%aldXe=^_aqPODaQE)a,%gb
%Ge@H@5if&&egP!Di7u/o1M/HC+k]'or(gTFl'2C('>QFk!mV$Gd:"[d*QA/cDf8MT*>?N$`G2(oM?QF[T*E@$1`]X/-V.'4B#R%E
%VJ+e?O'1CJp=CGf6#nQC[_^d6M&#VT9)6obc05>X"i9b5<>0/JfKt:L7-su:]$fb/-]G.6[,_9;NfM:`$JO?ko?Rp!XaArP/,JEe
%+l#)BCa+E=@?;(Ui?nr]g_FWB:rZ11=V=J!Yi%)0Jf9HI;M9B%EN/n&+#)ZYk'aB'_%T>[RhQoJhW>Zc[Ps-T=3GPd4p7TsQ4M$*
%(9tgi8h0A=oRi(X?KR7I%eaY3D(EmK9"eumnZdjgZ7iCKrXS>hLJE<m&A*ALhJD1-#S/9QH^Q?,iNCb%WRjUu&8pdo+/TC>fjilT
%&n[&&dtF>9ZHoE=iIuX@"Qn005qYlTH*^EN4Wc+jFp`\cEXo"<K'<#F$#Gsu_!(YH??NS0&7&TeA,I*Y]ZZ_Hl[f^5&o'Jo'_L,3
%8,?hq"H^[`b0+;prnMZ(qTZM/:HO7NT8VT#&gT4--ABtdE%D@0G1^a\Q.C!0.81mZS!ATQYSq@jVF]Q3$)a2CT#7OURORTMdE]DK
%'^93Fft>NCrXoF[@AX#HCqa^t$Gk<ZoB<kOY)[[o.C)")h^fCG+8#VVI2lkA>T[l3:;60U1PH-K^4hooJc8:u;Z]SOA@&'b;ZKH(
%_IA:c!]VkrD)!^GaurB`V]C^sa`i;5&9E.dG!,*QJ%Z:9X2i0/1AoRgQK@c[:@eAo1BlNnPIcO9M8;lP(;^Msh5/Rq5nCr%lY39$
%kGG9/Hl`+e5/05PnBYaHTQ=R!%Aq;kOIa5ckEk^hD7rBlG*eTt0U>NF&BRHlT=,*UVjt<JG2,_+oCB>CK]_p42be@"%U0,6>Csoa
%YZ7&ke]?&h1BXb#Ks%j)9\#$JXE[7+U2\g9lo`;IXfk)l1%5"_@lOFGZ;kY%=rF6?_Xc3RlFlQ(_jJY2?Q1Zmb`%3kGF1(P[JTgF
%>!_tU?l-R.Nj>%TmcFj#Q$0&4J*1WuQS0eDR4o*F`IoYdK;8fnfc#Qg_/75#MRIV1/!(C6G6&(V+FR44CSb(q<:7,@p@-CGXY=(u
%\!sdg&CKasDO;[TR>5g5/;RJIed;bRp_[r#b*Wu=<nlu+Jo!.j9Jl,O:_ABESG!;q0W.XLfIQ17i59H9YbS1"^"=k5AT'MS"mX;?
%b?sY%!KR+64ceK7YK.'m2g[toaCVrlCPAPde.m#X/%.c>HNf6-f`oUc'pRX?TSnT!ren*a&G84Jq.?hGLK,/&_Ft4<\MKI_Yr1_V
%Tr-!?-<q)2S&&!SPR0G]Q@`n\&pAm26Ru_!f;<gBkIVZa@u#'S/qOlI!`]hQgg)<.CH/S-E^n5]>&g'cM^>ag^%J\c/%C,.27u'D
%nBYdO^rLuYEnW%r)03L&<e.eO8*j]"cn3]*%1LO9S%XDUj?+Ft)a8GA\f31Kk`i^:%2SjsRe$FJ/M,@-V*cmD!]cK"m=#c9!XPj;
%J^mu7d=Pk?(>j$7$U$>Y\UmN>9R3Fh?N(aPXrn=rh5h?ih,3_*]EEiELr]ZMpG^0K&;TKW7a\M$07d;iCn^G5W!1Dq\6f:p7&.5s
%?NT2Qj%F<W5R?ZC/Y;YCQ2=esgP$.`$!Z+9L*3M7AE:X7_;-2TNXgC>;`Ub[gFI`#Zqp)NWJc7DEs8,fdi@]>&uZs=aGs01^ObOO
%<]aR%-isJ5,u>]`(b>bt`?>>RidM2e,a^n?`cVZB0[=:0<K"C3Rn1,Y/(@='=OCT\Yb,4Ybn^-hiV9=],5I.F2ci*c-.:i;STd?)
%5lC!Z8/B9aQfnK20O5d`'p,PYo*T.>81QSjFp3Oe^)HRcj#I(Xfdc%"niXlDHN;$q>.sf6:u9C-ZC<.X1e[IGG7^a4[i6I2XYrfe
%f^U*0ioLBC,:07Br<<PB/@"ZP$8kN3iW?AhR>sA0OS7u]kbuI`Dr@">ok(9b>VY#-'aXR,(3WU[e"l+!EpqqYnI>i@(s'-Lmsqns
%e95"F^t!J8mVe1gmHO@N_$l`aH5\8t*\=YMn:H__PjNX.^+Dl\g"s)dHae)8.TAhf(<s'gbB2NDM%f<g^k'_6Y6Tf0Yj>.IKsS(R
%/Gk="DK79),nOPAeZ?LZo$;$L4BX8n1M.!1HHB@tUo*f>,9hB$L7LgU+An>p*3,aW;"@^F\^tJN,EB:WFoDB]NYk.hHc*+5P!+&@
%Z+%PV^:k&.@jkfs2%>\+eZu3@:WY$Vjt.nmTa"[]3$D+aWTd7YC/WFn]\S>FCf7doJh7EbWpT]R^_r.aEV7rL:a`8^qg%DfDkB9Z
%W<+P!EdcVeZBCur=pc7&KdF/h,54idNrV*eUC/+k9Zs(^&NR]Z#Y:lK_'j&k+*;rL*[oa)ouRT5Zlnu:3[D.*L@T-uIM])ob46^D
%RI:pJMuqt$j9"_>fQC/n=0Nh93$'4-l(g>O%*%CJX]Hq>K(hZ6]=\Rb#Eg#"d)YT;#EH]/Zpf'CG9k)IQm.,BgVSnmgWl>X/n(fu
%'^m=H8C7#R@c/J@o@".Z!k&O&*WLBD#]d$:AU>G8!"n\5[gfSY8P/:>.D42m^?7-;D&.:EM2]oV\s_+^GhoZ7N,mFinpl5&j.cF^
%]F1&:PlJLBnG<^Z%qD?9IAm6SM('9Q7`-/25mFR`+WOE+&HS1g=%+JsS%nUHBeU"8CdZclkL&%XdAP"g7"Mn3<fef?D*DCEe[)eK
%G'%=*]]raj&0Y^s@3&!fTs7L@YB#%.@]CG%!UkI+^*CS7UJPO$VhcQk8`5X'hD@m)W?%+7b-6jCTeOT;kq/O%;-b@rSg8-VU&JAa
%`t!I'Ya\Z)RRVHF\`,T@ilh=#S?iW5=IYtG[ib5eAp_4YnGAOU.>mcM%6rkR(Fe4k1mX3'<,WaX*-X1oF.cGWOip<rBaJrW1eR8\
%>:iGQ^EeYP9N6/r!lB\q$*@?@h01PE(6CXe_,YArJ*cC7)!fQRB!nV;ZSiXE#kTV8TBmg3l_,CaV`h&?h:s;L"O=noemVa$Ltn2:
%6F*ggMGd?G>"FRG/;&X6a'c_uQ(l)tTA4\nj2rm1*Kd!ra:OFRUi<Ct@)5ikG(2"$`[!ceB``&E=TZUshLZUDQi4hA2CE^n&&%Jh
%gJlaoXtM&J\/+1__o1dl>>aDBbZU!sEZZjn4:;UMs#<T5#W:i:%?#W]YUqhMK?!`FM,Q4qAUE+GWY[b`C0>-`.na9^^'&XX@4!BK
%pqFsiA)\`LR<IDb4aLR#RUFp&iu/^1nAc24Ed)c]?A9S5anpAIj7aS6pF(?mEKSOpUtmF@XC5*+3[l0C<++j)FD^Y=@#i\?"po'*
%.Gm*SZAWqP#HOQ[SasU1@'8)#7_8r]Ss6E&"5d_Zb/&%&`M7KcCQP)qM2`7O;Jc'&HqYWfafs]o\oBgl6YWK,WGuQ(J$+`k-@mL:
%/\GhWC[W1:YYq]a!koiEj:7.'olP^mN)cu=`eUM(2T`de7kLFI^((cnSjIR$dr6/4anr7p_+"cLI8[cdHGD=^Tkh0AV\%McU689_
%F2#Xff5TbtkW?O85*XIdN"('rj.D5!i<h9.^uiM61-Co+hA@=;]hhjF,AThWNUEHj)*1Qn%J,7FN%Znq\aGD06)fGcE_G0V95fs+
%bGQW-.R,='VP.hs$XF]UE(Puo?U:V6>>";cIW@VYT;J1OiCF8;nEt`&hICjJfXtl+o"rY4J"aAZcGC)EAqV"rcBO`N7MT5]U`5SO
%6u=7k=kFTI\jJIP>t1uF#ra?#;/;%9g%&6[D36\,D8<FDXKLF.@%@!Hm^+QE-U#4,oYK^$a"Huh=4pp+e.&=%?JJ[+Jgh[X/J\\J
%Y`%66N<L*oe_<jo@&em#:dYY>[A.QY#I?r_%E+gOfZ.bH*298"N<Wjh73O5*Vg0_$q:H4M$OqdcKK$5]`QOS\#.K[DBXg,!TSn@E
%EOLRM@t=pOadi,6Ys[MFF9a[VC2:-ib8#fF0[#3QO/;L7d0,]bY44s_0t3rFlhY%GPCIlEK?n8r/EB<S8E5[21*;L>DP:%N.s3%i
%Eq(f]g.jYuKrcGC9p/Km>/tI0'-$83=fhCUB2hIh3sC9_8n[YEg4V#$%jqP!4Hj<ArJOsH;7^thO2q>@113_hEBqaI@M'jn/RpNp
%Eq$cr-(&'F.:;=X,d=R@BYBPD9$N*tZbVG*#<[6s[T0GBFgAdiZ&j2TJ["42I.fnb.Wlf]!@"kt;L]H%@_gLqa*512PHWRq5BTZf
%h>DQI5SUZL=p]91>-O*r0_rl7.Q4rNo0(SL0;>haJ6iA+:(dh."&dB>&dWh/jg;?ZehP6WB7[U#K#8PX6>EmPhj'Ns"S]?qn3I/h
%0lVRFMj0_p=<Is!eN"LJ*7Ze-#.e+gED;C)Gj+88PQnG'-kt\O)H^ulH6[th:>]HGXo&VJ]_$@Lc.H6/A=KGf(D],H*Tcs2P3?%-
%%Yu2n($4M,/4(<0N<>mfE,f<aHVbEYa/pHC,#W/'"[nKdML`6u-]Vil%A1@o"lQD1H0jI]M?BS@!j%*>"(FZ]hN"e8$j,03'=?/r
%$H3)8G>Rk,bDcTBIW@\!R`i@RhM.dDe7!,2ITUYT.:>SADMo1@8/Z0sa;2Op2k1m`/u:If<C0FfB_Y.")+W#;^#a+h15pt%GO\I#
%!Efl,a--T`D?,+JJC%UF[a;3Mf582u5h8$UZ*pmJMK4!_AR:("CrnU?LsG3Gru4d,j_OoHfNLJhdb+*Fd"S#q+5933l)=bK-S'?`
%53(".<DV'Q%qDaJ:Up1!Mb"4k48D4RJ7ubH$W@.=n3Tc#:'W;GQ%Kf\glmXT!m"P?Ej^!P(B'ZC*gS]l2H5UK>8iIR,Dl3m-bE3t
%%:h\N/d/CEgX9op'o+J.9KN>mW0AI4qP%=+C>e]$oV-(0DTA=5NH&gkPoJr2\%'9U1a;D\&&"=Y_>j!peLj2>ecleU>/)R3b<<R%
%G/EFLFr'?Faa6uS4W,BLV53bK_PlC[Q\0LU?NYBcgpp7h<^lUl,B^+j%.ssfOe2](.ur179Pf,.P33]mZ8NlJ<Q)uZ1!s5ea;t[/
%7Z-UrFMj0[!#aaRFaPs[Ni:_N20DbOQ6bTf^5t;))ADYX%7F%EN</Sq/N3_:]1dmLf=*''I.&Y>!G@P7$d""!EO%:JKoo5gShZcD
%G@M%A,NO%[+m'%0PBc8^:]AD;CYZ8"[kYcDdS]heae(Tn$bRV.2uX'J\G1F3-XuLlNB>hZOK\@J39W%"Jd_=o:Xl'GksbY',VJ[#
%q$G@7&,lg?jMq1\dSO5ZKmb/k+JlA6GZ%$WnYUR8$ZmE3NVu/[@8;LkDlDC"?NMEuS(51oqtP5DIn4T=+jG^PF^1Qa#f2F]or+#*
%.sD*mVUKSgrKesKWq)%Br/mIR@DVIF<j>h7#Ob7nHe]ut35l]"0+knQ>MNl\>$c1nDhnFT1#B^Nl1c2"$je5RDh4PI]4a-Pp,Zla
%6NuJSQ[^IlfGU]8&,aA=N!XR#J2#e:b5,RcSN=4b05SuO:A;P"_bUUFYt[oEm<.HZlV_Y;BcCVD:!S(\']aatP6,27asOm-2l$b!
%\ZZjgVbI<i!C%GEH7ijF0gM6WM0Wh0*r_Z<Wf&?LWXdXE/#!Y[/P"kLPY+)eUC1/@Z/7.>G9M..R3lX`$NYpPW0HCI60POUi7a3<
%$&i14RrLuQUCAoZ>e]aI?;/Ffq6FauJG2h6nNoH[d"ePIk_;I!Ht.Ot-jjr)r5@LehJ[t;^rP\F2KD=",h7MOMU(QOn.PnhPM[6"
%HGgo1V]E$=koTVV\WZ8"pk^=cYm):2iA2X)JVfN^(ALHkSiCaC$5HZd:VLN5/cO2;EY:RoTuiSaUiCWbaK?U-KGX'HNrtm;*r*he
%'Ih24%1L<A.3E2'nN4?M':`_m5'4^*ZpS,(#G+g-Zh`a:.tTSJ`qTPBkk;5VrmK>$fI%`q7F(O7E>[i0;n[b=[9ME6LUm3NZ9OX0
%gA,DLP'_t:no4`YMm.Z`+IG<gQ`"0b=dRE#>`aQ&eS\JK=?m=2\GZq]#e\6EF>5k-c8._6"X/.*DF("]TgO[)O*BBUk[4&8+^(6=
%c.Y(Ad^_f'_O;u-hP*DhZXhBSm8,dU;A<jL/#9/mN?9?G'q=p=&(,[VjQgZ]7Ff9s-9Ad71ZsOM\*(4S;&[csf97:c,XSX1%3^qK
%RkG#&fOBhuhfpBSYB2.JYV;I9YgH<QU6d*"'Yb&/h)HVMe85CCU^`K&Y3^/&OI0f9PQT-kLV(N^;TEBELD=`*UMY?`6?1Z3?QT+?
%F6/46gI/p@c4R&"E5`MddY8>UVrpe[")Ho,I"9R[DRVl.-<6CS$P_]jLb,dtFZ;O2fE+M;_uHpOCMU?E36psss+gOsL^c04rUT/4
%Fs(`HGt?cp@A40N?q*%PS</5mrk>C9].[ATZ=ZQr%mk;^T=&uf='*pRf@#^J;&lZYeno:+D((4H+Voh#cu`'2jtdT\Nu"[_kf?Hj
%4WY/s%7C)_.12g#:Hd@kcNFi4b])5I,*&I&-HH>C5`[H7S%p%si81r&LnVmMmKi?W^Ye9U7W'l_)oN$:I9G;IQ<s8Q;=IekQMl0(
%2R6aro0fQC,_]_TNn5&i.XjX4^XFq.-SKb><%9LPH(qab0?O4)^_)f86Z^-U)]>EC"F+1%$OY5%B[8b$UZrqfF@V.[LI`\6#CUjO
%0VI,h/3k%B7Oe$_9-X',=HlmlIF,V2^_h9+Pd4f$:J4/+[<[XTV`!l2po20@GIS?/k51/VK-04X]9,dc&X.=*XSRqq"/b$\Y0)D9
%0h<o(QFWb[bR&;I+%03.%N9V95-9+)ga)-m4Y6]Lm,j1redMKIFT[F@<Eh?;*cAkg6&d%^Pdh^3&^J-:]Q?YP!L4(99b[cY?&_K(
%GSf;*,X5'i0X,q<K9DaoP`A./*j##2SKH%>DSN<)aku?5NF4B<I$m2.PKEaiiAQ)[.l!_?N0G<Zp&PBN8XeEk@4V-6q\jdu%r8.7
%p^d"ad[KLD(<l-+44DR@_jUnUFEWmNo09cU[C'iX;1]?@'EnGh]YQf(503)Fo3`A@$5e^_Mf&cPYmFq.?k>c_NZredENr,)ge'sB
%&IYP`oV(SL3Kcha$//P8iUo7])ojg=<"-;^=-Pk1J[9PO(m2qpf47_i>BFR(U-EiaP!uWI!O?qTK@i:lo)3\;*d-bf#M]0n_'#U4
%@Q*ig#%8jfE+Fm4Ys)A`9X$0:HMKF&<8)?4,?kk^Un_;Gqji`r<Fr9M,_0O>kQRlYW6;2]VbbDS9Q=U$#)or?APERB3POWTmtHLf
%nNJ!j&FF`rAshft4ZTu^;,$=-D+bYP?%/bL&;;VOCqi9PLe-is>'S)"&`1Z4<n%@&:5A(#FHUaZ6c";h+;\cpki4/S'ahh2OtDEe
%9+,P^(_8$Nau;$<%L#_B.&CGfN5M;Ya`sFkW/&T0^*p!BC-V;YZ$"_$KD%3F:mLmX#FkY%TO;;bl]EmD1C53E=E*'JWi=Zq(l(*k
%2/E7)^"Gb:&k4PNNWmf^]h/C#l#fP>>`g.XQ`]+Sq@M`DgVpmZ1N9$Yq$G$V'd3<"/$T>[14DLGTceMRH?;r$"&e+=O`Q:b-5IR^
%HH=%3@mT="U:pq:%9d55Y8N'`3dfZ_"joV0\ckdk/ts/(nf&2&s-DS$dkR6FY=L?V[ScGH&e\e&LB@jC#=mo7cejF+0,jr+D8@TY
%'h4#Y'FroRc7;ZJ_&Z#l9T"gFIOKYJK0/Wk5p&"3>Tk-tPIc<2*+/2*IOIua\hd*B`L]K/WMVO@j@gTeJRj>cf(;ci_2CVS?lNDZ
%mRu:1F2r^uk_VfBJl)j)$h?`1b_9X]+iOQX,rckBMXV8$KmYn:rp!ZHe'U"QXU1`W5O&230*1n*euE^rYBqk!14L.0>YkqofS,Y;
%TI+?*$,>NN#=(]7("_%7:j/>SIa&B,d>'7'GK4_19eHU+h,.MtWa58q9Z4I)FsMlQlZrqYKntSbggODSPSh=K&]$^fJmeSb+m+1G
%[tjkM#no^(N)a_Ll%H.XIhlZA0d[`lC3Yjs'4A_ZE%)T0M8%"T5nq==FO_J3&!e%U`:>sR(K5b+CP0m_NtbHYBJH;-725B6H>>EP
%^u*8l^m/#3nd"O!14qZ06obZ=DE4F.XPi-),AR,R_I6e]2#YK-V+$oW<6dQ:)b31!e,n;Y-6S""E>5+N@/5@07Vq9?jq$)L]7KVb
%$ck_0I7&GX@IjC_I0H`bN.E>r<me:^DHW\KoAAO3q^U<(qD1dO_=hq_Q72GZdSD^5Y+_UY/%:;Gr)-s16Yj!?UHXW;[E_W*%*NTJ
%`XUi,FF1bk"VV*0pEN6D3\%La,`+j[NLSF!e<`/\3%V!=$LsRm5(,sj%;uRYlDp;@mC-J1*FCDdn<MXq"ed8(p%AF_Y]8AClMe)D
%@%lY?+'\ZR0OJEeCHX?ng9+SU`sfg=45+V7Dm6g6+`Bcu0V!qpaZJG@&=B%j^mC.8.31pVKjj7Ig!`;;>0b-\A3l@I'3[bE.S8!S
%M/b)J*snYXI><3<1Jbjhq4LLb4("U!r#&s:8?I_,!MnAI0(^<&-!u'cT%o55ob\%C$,GlO?Y[\WD-g]!0hDr"CinI[ii?)0kYZ\U
%:.-KolZkJ=iCHV1-$h]il<N%^9P]H'cs'Uj=th<ko#K4WJQW,QT)8#ObZRo.-QB9'A$V[O'-/;;C%BY1R$<n(dO<A%;8n"J/F\Lq
%h!sqTQ"p(>"nP6LeA=hQjLuFp);3u[l+=*2@Sh7#h@HNQQ-RU3A^\?5<j&V-%nIDtgk&lK"sRt`Q8?#VID.lbjOOGSTSH/uDf-*k
%6q,CU^bYi9=[9><]]6'@@hUPJ!](c$'sm?ZNH9(-`FDA,"a&3/.+^8#5O,\-q"h#FS/7*LqLVK1?Nj)hb3n&8QZQ_0HTh@]X2C$+
%4e7E:r(:ioHZgc[@KAY>_M5lC"X)`icGH:mjBYqd\nf1PT'_'h>qX=ghJ(&<YguJ]\_'$eq3ac;k]pA48dI!HEF*LurnNgC6;dm$
%kOJL(,r1:&Xk:oU;$,[#VMV$64@i8641lM#*UQ!'d::,IGc#P@`0hqZ].KhdR4+$,<n!?]8dit"X3KOR]9:m!&RjjV'b"-Y7_]Tk
%,rD/qU-mLSZn'lC,5+c54M;0KF%JteGPT]2`#fsO+d6W%(>Ehgi@L&"`bo%37'lH,ZMP"Dl0oc^X<<&p*"s6KD_$!\I+J@0dYT$"
%4bq2g(s6!50S>>OF]%[*9&gDD=Oerjd4G^9pj`B#S!qSFM;7/"R0PB#Y#Ul`2X%)O&RPq,C`b?OfQPW"cA4i)71c^.<JI"g_!MZm
%-GVp<b^.;\^%\=t-\Cs$]E1HR`+Wr;RBV'jDk]C!Ps.041V;%R<XL`67%)38jgE)G1ID^ELB`2uQ8O:s&4LrUbs0E-5BTT?n,N+&
%n/P)CU)dTLE"iKjl1p?>dO^pP>ik`-IQqjpHbns@B;XNrN;Z&'\gOdM7_i!]3Eem5%[nY%pn$hqUu\d0);,$'#!a[FFR`5&X9$R0
%"Bhkf"Lh;A*[=c$.D_-Cj=rJ220f6f2j`+RE\(hrV]KqoLaD8Y"4^geG_k22+uNk9SOnCcbh3alWH>@761=YC;B`"2X:3Z[Q(uS6
%b^r-6\ENW$!TVRlf^+N;PJ">hN[j7d#5QndOs`WOE<WM$Taf%]P(BE6EE?oY2-hBJb&C@D7UO0geL$n)U]u!&q?ME=6jE=n5O-f/
%roUWM"JC(GdF`:\pHiI60??`)`GklS:3(+PHq#5f:e4<lWG!H$c,*2mU=Dt,3G,MKWt*H#1$E<!Z%"&1#c#=eD(9"Y:\k2(+#0$\
%m#(+-OWs)hND!s4rdMq:jeB$(EXc+ki**THTG'q!=Hd-MEuP=R19<hiiGIkffR1c!@KO)"'i!)EEWuuHB;OWjFWJ[f&2C2:(`"L=
%<%HAN2DjJ.5,los=l:prW9NAQ*HH+@,8!p#0rARCDEZuO:QLS4R9]6.:-na:a-_KK/iM5[;(kkC+-E0SE^n?h(UCp^Y$T5XeT.q-
%Bnt2K3jYBHW=h+Vp\D6GSV."-c1I2ZW8RWu_G(+P^"/QTB';JDU"r]Qkf"Y)Jh,4FSK=e6p_aOD7$7mUQQh'EBDi50ds%!lQQC]1
%KC4$9CT'9!Nm8-A5&2MW/&pSmWf4M-6Pf$o>RL`Xp2KDJK'Z?-)EkASR9UIW@!kCpbO!XHM#\F^o_0q+k4)^\Q1""7!mE2N?i\2l
%V;mJ$q:2'.'0S#'*trR1ldnsK"Df7KQMgh=HbI_f^5WB4q2`.^J+I<okC<8IfRI8ZPfH#]b@-ce=`YM]*rhe;r'QpfN?=,Z-uSr%
%s,8%2-\$poQ#Q?bGILX%O\-(3g[SW*A(9)6.?It"Nng[h_:O0"lt-_C&?#.Nq]@$*EjeZE1<bM4+34oOYMT1F=Mq%ZM_3mQ6WPH)
%o,dP2%-2qI@)qm5/5N)(h\FigkBL(/nq0S5-S*E)"aAlkkGZOHQpCB*M?F=p5rRsAQL(I]B6m"KZ`J7oj7gr<--pn:-a'X(q=?[e
%aB@4Sm_Aip=ZuKo3&$G-]$81,+1@Z_VH\",9[Z+H`siV*$fbgX3$VIGp/s3SMoYYp)^JP6&(lD_)'#deCd<U20Nf4>8V:!JrYJF9
%&NuF@a$hTkrEms[@ZfT$fK+<L_&e(P'&]PAqNQJ"m2[oc(=sE$(`Mgi7]_!Po9`L;0_;>)TE/:BY6&M#'.Ma7O&jh[80L=?`XhJY
%%+506f\5rI:_=.sY6TRVWh]pa3e[Ai:imp%qtOcNHU_lWk2)-u)\!m=jI>')kVr*hZhguTA8(JcS$+0dp$(UoY+10]<+6[rN!-Wf
%Aa2sJ"GSiEF"u*NIJ>[$7RAKEHJ+4"=6X-jE<\@30ss&Q9+s$_6Srl-UV!GF:=h$sZU&[tl"+f/;Tt)kM=cM:5U6H00V?e1+"GeX
%J%'L[QDE8fqp]Ko0Ag[1aCY%2SMP_$FX?6M,-6lR^MHSgdffnUD]`7m72n:HeXI?Dd>M[Oj3NsU\If?I=U_.ArD^J_;-OdSR_UIA
%%/BY&di6Xn`0?$$#j,mpn-+pke<L4;CK5*'4f3H0P(9mI&nl:/pZ7Vk7'nbP%Ikr),'LOj+lCkK<^F%W'#rLgXI+6=01Ilhm+qSN
%E81$>_d3%'ho\a.WT+G,@Turb.ErqEnmH%s;1It0]r8A,%/`M8b,dm1(o$kl]!!rMe=MJHP+]@[i;ubnY8\&eS*kcUOdRF/Dp(K]
%>e4?J!:jtP&Th;1I&T-`QI!F8:Y0KFG2OT`0oC3b[U<3+#k>f-7nB4XPR&cdl3c!j_B>SiZs&9gF\.*'oHE[l2fBjF%4%YaT`2G7
%$uSI?>.^AFdA')uf>in1pMC($XgD\ha_A:,fmN=uI[>ic=DeX.iM1;^^HEE?r3M+l;^*TAK#jjj,(^`OF&VN6ggB>2L<%#T"7t&?
%4&n[@/c*dWc;`djjB:VIE0hG%bWTkZg1X"K?G2lhB7c@%[P(.%<R#/L'M[Fq;&7]/V=dYb>WMGc:%l.H,qXa3UhB!_DBa]Qnn>)'
%bplW8Z#nNJlPr7fQ0RR>,ghfS,Kt4fP)3e56>A!!74aTn;,B6;e4$W\nAk2As$SEh-!I7)'$Bp#,))>cj8sL%HEZrZP%F7p&Q]+r
%fAnJi?srm^`!/=T7+QF.AM9#!dM&.c[Le'jXu_[dq2hkbVQeJ>OJWC`)8*I;RJA1$M"L/@/Yp+b,\*^f/G[G##jB;[6k/eYHl:u.
%/AsAS9%Tb`A4'L?@P7%/o\bUh9,<7M25lELYq'hKjH"`O5MM+ji.g"*n"H0<S]Ps!7djF09d`V%>V<L7*OuccS"C7@1tUgek$pAZ
%28A!iohe6[O02adMrr5(AiG3QCG=t9h>A81obh&kMjc3#[W.s1*o\;eP>i!*X,fZhP@"/]co`fhfZNV;l&kU!"J'eM:9eKEH]$2=
%OgWrCM=LC/@E+oQ@-mA11ce__;gkFpW!TqrOjt:OcQEiZ@\bD(Po-ib"q[b\5h%=)#IM];Y)))2&C`*H!2iJ7A)-qNG?pi"/]om`
%LL<Kga`n$P$;+QAO@#c=K0J'cM.=BL>/-aQ:1^X9mi2:?hAJAA[aK;<8W*Dm;9)]G?TqDu`Y4l\Q12oL;i36pi[D_T3M3T0\A"8.
%WNe(tF5od/0$hf+NSS!#4P8Z>&mXeIJY@+BR*R7a._*R9\of3<NH-?_[u/Mk6"LW7+?Hlni/LEP47^Dm:3hQ*hu\lD%9jULMhdtP
%3R_7j7/9Xb/T8SD!a[Y<<][.=FC?d`Wka($i4-%H@4B@2*&8BGjAg%oKK*k&cWV<""!F<$6mBS5CD4@"<timmL`$qfTqf;=Va??&
%OiJh)&T],gF\G/O<o.SSIZ1[+-NR!f;3hE/L3gRf#W6Bl5A'bRH;_T;!F&4JNKcmT*dU"lh=Lt3.6k=>qf6m_L8!I@0Pua_h)N&P
%kQsVqKd;XQ#Cl6a**:(uN>j+ga4-1b0-7,B$U)X7;7Wi)Xrp>d3mg2]T+%(Z$2dtEWC-!!L@t'#*<#c9o^:os`)\b;oC,Fq16+qB
%CEpc3;[6)^W?cG'NBq0[1H\Wq(XQhOP$#YK"Ha!\_F-pJahehth>&qVL!Xa]6:X_5fFd@X?#pFIh[mcCD/.Hr%+p\BD@UD4,kZ\i
%%TJdgTLn5I4(V746%$7O+,:CZ8@;7F-:N>6IOZ-KF;dPpW#*GZ8c;=bJ-L9bA@:=DpRLeEO"9c6R7;^[O']0?*mgN<3kAH;!71U1
%qS-j51q@?;bH#)[0KmJBe<3]Qe1!TL\d$*12C,V<6AU&G&WM;CCf\+-GTRP(T2cAi\c<aJZ(2A[8lsICJkQLOWOEM25*2U9p_k13
%TSF<5bO.J](Gb6;#Z"1(0>&g+Qt/t;XIW2SaY<Lkae5QdrOUX-dCi]8S_MI6Y<quKFZnT>Yp<\Mc.O-XTZ.`j?ER#);Ia,*,E"f6
%4in!uju"VCU*JHsq,k#aL)^44o*ORp$$(PE3+^eh&qaad4P7;R98!nO``]/?04t,B+\%>a<VS[VC!?J_SG'<$2U$tl@6@ZMcNu@M
%%KoFJ=,CMTiY5'*er,O"`lme?1BpIOGT."Xm0OO,:K)1$L[2$c]f=I[^Q37_H+)IUBDhf:mG\-f:m4dm3m`K]P+iV=64Ycfcm='*
%&'i"Qo/h7`[F!:WAOd73Kt_5-3K*l&9D#Sd8n.^H^8d8AoRJ"1f=8Bu4hu#QZmI-li&GpBY3<\&`5s:K7Hfap$H;Jt@@.,gO"Z))
%Y!tu^Ha(Q*Q69ZjO<j,CL=J<fM$+^4K<0:<)6F80#(.+roJ"5gM^N=35a0qE).e3fl8Ls,eT1.F*(lc9/GXA+)-9iW@\nBLRM.2;
%IU8>dSX2G_@X[8_1s@<9RX#5<F&TS"aQpR#T+ldAU9-pA[=VIoR@E%<%Q5U^9$oOM#nZZk?M>plSG;]-k`n\NW<:'"@J7].J[+NA
%A,b<FR;U/jV/GJXF8`=gm'<))1N$$o`HB`Hi4@O`%$dj1n\Z>Md8*MN@UhYXKQcaD'\9$&BQUZnN']]jjM*@n3!:!H28uNP'Gg)S
%Y`_)"U4\g0&E-nO@"g.K6A4Gr+tH+4m61r]'YBMY*MORBa&UKK7k5#/X=coZL4_s>ApTSSe)dQr+W0ORJh5A^j8m_M&X?slq"_hc
%]j^Hc\Hs?82D\[$V#EbUMADcVT:G.r?`[-1pIKUMA.reiY8]meP1M!@/$O1Jn?\B-;(#,.2X,-?N..Y?j^\fVAi_`*\Us(F;$s)L
%'h#PWD$e[3Oc[JX53iHc5[49)/q!#6DFb'M$O[hA6&T8c3g+kn`TYYP8\>4G&QUgOE&*tfBVjF1@akCrAd@EI.g",K^1M^W9e7!J
%M87#4PI?XfN7jYlMWSP&a-fs.a/b21R9'caakeH;G<'mnqX*5g]^S`BA[8-#EQMO^n/7ciUD_&l%?P9(AO`IhX=!HGjsE[bC("'g
%!)[:](%<HHAC:c?9WJ:-O^eHloj2'jG<IC'#Ul]:pbelq$rZY"Xm-HJeXfT[g'$us:ad0').'B"#9?_KMg5^="5AVS7_)Dn%uGT;
%nO)J5O*I3CW@l5/HPE.!AB?O"'LAKlU'`@Y5s03Rh,0.-A!;DaBHt3G6(E1ej+%Jt%uPe9bP(nN?/Gs=XIq_NRnOLJT6lPiPRMe#
%+h;9&UE,]r`mQKY>>YK4LYa<0Qule6(+*#@VWsBV]VGdp<f:^mb##D.BVt75=*jMd+H(lIMo<umSW$gJWd)_MAAk,]o_HL7"qNDc
%>l^t/7'f0WW-[[PTLG#mN":..`PieBHQMYM^SsSknR9]+)YBnu&H'6TZ/M_[goaSjM#DAh@C"#(If8Mj<mu$!rU?\m\D@.;=i>Tt
%rBkRW8Y>ACHfqRcd6(mKl"7.GYd_uT15HRZM2cY8O!hX>]=<,e:3[nN*_N\9j?;a>mNV4)L$SneqG?aSa7mK6a(Kpq5Q"IZpHO)t
%T?hHUn(kIV?4Fafs75mLGQ7O,g])U"mb?Xuk3MKmrm/42gMae,f=h(IpqL]RJ,AZGs8L3Nmr%%]q(MaU$NB8cK.jt6dm*lmDh%BYgqY]7~>
%AI9_PrivateDataEnd
