{"index.html":"<html><head><script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"container\" class=\"fileupload\">\n        <input type=\"file\" id=\"fileupload\" name=\"UploadFiles\">\n        <button id=\"openBtn\" class=\"dlgbtn\" type=\"button\">File Browser</button>\n    </div>\n    <div id=\"target\" class=\"control-section\">\n        <div id=\"dialog\">\n            <div id=\"filemanager\"></div>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n<style>\n    .fileupload {\n        max-width: 500px;\n        margin: auto;\n    }\n    #openBtn {\n        position: absolute;\n        top: 34px;\n        left: 43%;\n    }\n    #target {\n        height: 550px;\n    }\n    #dialog {\n        top: 20px !important;\n        max-height: 500px !important;\n    }\n    .fileupload .e-file-drop, .fileupload .e-css.e-btn {\n        display: none;\n    }\n\n</style></div></body></html>","index.js":"{{ripple}}/**\n * File Manager real time use case sample\n */\n\n    \n    // Initialize the Uploader component\n    var uploadObject = new ej.inputs.Uploader({});\n    uploadObject.appendTo('#fileupload');\n\n    // Initialize the Button component\n    var btnObj = new ej.buttons.Button({});\n    btnObj.appendTo('#openBtn');\n\n    // Initialize the Dialog component\n    var dialogObj = new ej.popups.Dialog({\n        header: 'Select a file',\n        showCloseIcon: true,\n        closeOnEscape: false,\n        width: '850px',\n        visible: false,\n        target: document.getElementById('target'),\n        animationSettings: { effect: 'None' },\n        open: dialogOpen,\n        close: dialogClose\n    });\n    dialogObj.appendTo('#dialog');\n\n    var hostUrl = 'http://localhost:62728/';\n    var contextmenuItems = ['Open', '|', 'Cut', 'Copy', 'Delete', 'Rename', '|', 'Details'];\n\n    // Initialize the FileManager component\n    var filemanagerInstance = new ej.filemanager.FileManager({\n        ajaxSettings: {\n            url: hostUrl + 'api/FileManager/FileOperations',\n            getImageUrl: hostUrl + 'api/FileManager/GetImage',\n            uploadUrl: hostUrl + 'api/FileManager/Upload',\n            downloadUrl: hostUrl + 'api/FileManager/Download'\n        },\n        allowMultiSelection: false,\n        toolbarSettings: {\n            items: ['NewFolder', 'Upload', 'Delete', 'Cut', 'Copy', 'Rename', 'SortBy', 'Refresh', 'Selection', 'View', 'Details']},\n        contextMenuSettings: {\n            file: contextmenuItems,\n            folder: contextmenuItems\n        },\n        fileOpen : onFileOpen\n    });\n    filemanagerInstance.appendTo('#filemanager');\n\n    document.getElementById('openBtn').onclick = function() {\n        dialogObj.show();\n        dialogOpen();\n        filemanagerInstance.path = '/';\n        filemanagerInstance.selectedItems = [];\n        filemanagerInstance.refresh();\n    };\n\n    // 'Uploader' will be shown, if Dialog is closed\n    function dialogClose() {\n        document.getElementById('container').style.display = 'block';\n    }\n\n    // 'Uploader' will be hidden, if Dialog is opened\n    function dialogOpen() {\n        document.getElementById('container').style.display = 'none';\n    }\n\n    // File Manager's fileOpen event function\n    function onFileOpen(args) {\n        var file = args.fileDetails;\n        if (file.isFile) {\n            args.cancel = true;\n            if (file.size <= 0 ) { file.size = 10000; }\n            uploadObject.files = [{name: file.name, size: file.size, type: file.type }];\n            dialogObj.hide();\n        }\n    }\n"}