{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/range-navigator/period-selector/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <div class=\"row\" style=\"width:80%; transform: translateX(13%)\">\n                <div class=\"col-sm-8\">\n                    <div id=\"text\" style=\"\n                    display: flex; font-size: 36px; font-weight: 500;\n                    align-items: center;\n                    justify-content: space-between;\" align=\"left;\">\n                        Bitcoin (USD) Price\n                    </div>\n                </div>\n                <div class=\"col-sm-4\" align=\"right\" style=\"margin-top: 1%\">\n                    <div>\n                        <label for=\"switch\" style=\"font-size: 16px; margin-right: 2%\">Closing Price </label>\n                        <input id=\"switch\" type=\"checkbox\">\n                        <label for=\"switch1\" style=\"font-size: 16px; margin-left: 2%\">OHLC</label>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-sm-12\">\n            <div class=\"row\" align=\"center\">\n                <div id=\"container\"></div>\n                <div id=\"chart\" style=\"width: 90%\"></div>\n                <div id=\"range\"></div>\n        </div>\n    </div>\n</div>\n\n\n<style>\n    #switch {\n        display: none;\n    }\n    #control-container {\n        padding: 0px !important;\n    }\n\n    .e-switch-wrapper {\n        margin-top: 5%;\n        width: 15%\n    }\n    #chart_tooltip {\n            opacity: 0;\n    }\n    #chart_HorizontalLine, #chart_VerticalLine {\n            stroke-dasharray: 2\n    }\n    @media only screen and (max-width: 300px) {\n    #text {\n        font-size: 10px\n    }\n}\n</style></div></div></body></html>","index.js":"{{ripple}}/**\n * Sample for stock chart\n */\nvar _this = this;\nvar selectedTheme = location.hash.split('/')[1];\nselectedTheme = selectedTheme ? selectedTheme : 'Material';\nvar theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, 'Dark');\nvar removeSecondaryElement;\nvar datasrc;\nvar data1 = [];\nvar value;\nthis.renderPeriodSelectorChart = function (data1) {\n    var chart = new ej.charts.Chart({\n        series: [{\n            dataSource: data1, width: 2, type: 'Candle', animation: { enable: true }, xName: 'date', low: 'Low',\n            high: 'High', close: 'Close', volume: 'Volume', open: 'Open', name: 'Bitcoin', bearFillColor: '#2ecd71',\n            bullFillColor: '#e74c3d', yName: 'Close'\n        }], width: ej.base.Browser.isDevice ? '100%' : '80%', crosshair: { enable: true },\n        annotations: [{ content: '<div id=\"annotation\"></div>', coordinateUnits: 'Pixel', region: 'Chart', x: '15%', y: '25%' }],\n        zoomSettings: { enableMouseWheelZooming: true, mode: 'X', toolbarItems: [] }, tooltip: { enable: true, shared: true },\n        chartArea: { border: { width: 0 } }, theme: theme, legendSettings: { visible: false }, height: '250',\n        axisLabelRender: function (args) {\n            if (args.axis.opposedPosition) {\n                var value_1 = Math.round(Number(args.text)) / 1000;\n                args.text = '$' + String(value_1) + 'k';\n            }\n        }, primaryYAxis: { labelFormat: 'n0', opposedPosition: true, lineStyle: { width: 0 } },\n        tooltipRender: function (args) {\n            if (args.text.length > 0) {\n                var text = args.text.split('<br/>');\n                var html = '<table><thead>' + text[0] + '</thead>';\n                var value_2;\n                for (var i = 1; i < text.length; i++) {\n                    value_2 = text[i].split(':');\n                    html += '<tr><td style=\"opacity:0.5\">' + value_2[0] + ':</td><td style=\"padding-left: 5px;\">$' +\n                        (+value_2[1].split(' <b>')[1].split('</b>')[0]).toFixed(2) + '</td></tr>';\n                }\n                html += '</table>';\n                chart.setAnnotationValue(0, '<div id=\"annotation\" style=\"line-height: 18px;font-size:13px;background: #fff; opacity:0.9; color: #464e56; ' +\n                    ' box-shadow:0 0 8px 0 rgba(70,78,86,.25); padding: 7px 10px; border-radius: 3px\">' + html + '</div>');\n            }\n            args.text = '';\n        }, primaryXAxis: { valueType: 'DateTime', majorGridLines: { width: 0 }, edgeLabelPlacement: 'Shift' },\n        chartMouseMove: function () {\n            if (!ej.charts.withInBounds(chart.mouseX, chart.mouseY, chart.chartAxisLayoutPanel.seriesClipRect)) {\n                removeSecondaryElement();\n            }\n        },\n        load: function (args) {\n            args.chart.tooltip.format = args.chart.series[0].type === 'Candle' ?\n                '${point.x}<br/>High : <b>${point.high}</b><br/>Low : <b>${point.low}</b><br/>' +\n                'Open : <b>${point.open}</b><br/>Close : <b>${point.close}</b>' :\n                '${point.x}<br/>Close : <b>${point.close}</b>';\n                document.getElementById('switch').style.display = \"block\";\n        }, axisRangeCalculated: function (args) { chart.setAnnotationValue(0, '<div></div>'); },\n    });\n    chart.appendTo('#chart');\n    removeSecondaryElement = function () {\n        setTimeout(function () {\n            if (ej.charts.getElement('annotation')) {\n                ej.base.remove(ej.charts.getElement('annotation'));\n            }\n        }, 2000);\n    };\n    var rangeTop = new ej.charts.RangeNavigator({\n        loaded: function (args) {\n            if (!ej.base.Browser.isDevice) {\n                document.getElementById('container_Secondary_Element').style.transform = 'translate(13%)';\n            }\n        }, disableRangeSelector: true, width: ej.base.Browser.isDevice ? '100%' : '80%',\n        load: function (args) {\n            args.rangeNavigator.periodSelectorSettings.height = document.body.className.indexOf('e-bigger') > -1 ? 56 : 42;\n        }, labelPosition: 'Outside', valueType: 'DateTime', dataSource: data1, xName: 'date', yName: 'Close', theme: theme,\n        periodSelectorSettings: {\n            periods: [{ text: '1M', interval: 1, intervalType: 'Months' }, { text: '3M', interval: 3, intervalType: 'Months' },\n            { text: '6M', interval: 6, intervalType: 'Months' }, { text: '1Y', interval: 1, intervalType: 'Years' },\n            { text: '2Y', interval: 2, intervalType: 'Years', selected: true }, { text: 'ALL' }], position: 'Top',\n        }\n    });\n    rangeTop.appendTo('#container');\n    var switchObj = new ej.buttons.Switch({\n        change: function (args) {\n            chart.series[0].type = !args.checked ? 'Line' : 'Candle';\n            chart.annotations[0].content = '';\n            chart.refresh();\n        }, name: 'Closing Value', cssClass: 'custom-iOS', value: 'Closing value', checked: true,\n    });\n    switchObj.appendTo('#switch');\n    var rangeBottom = new ej.charts.RangeNavigator({\n        labelPosition: 'Outside', valueType: 'DateTime', series: [{ dataSource: data1, xName: 'date', yName: 'Close' }],\n        changed: function (args) {\n            rangeTop.periodSelectorModule.datePicker.startDate = args.start;\n            rangeTop.periodSelectorModule.datePicker.endDate = args.end;\n            rangeTop.dataBind();\n            chart.primaryXAxis.zoomFactor = 1;\n            chart.primaryXAxis.zoomPosition = 0;\n            var filterData = data1.filter(function (data) {\n                return (data.date.getTime() >= args.start.getTime() &&\n                    data.date.getTime() <= args.end.getTime());\n            });\n            chart.series[0].animation.enable = false;\n            chart.series[0].dataSource = filterData;\n            chart.setAnnotationValue(0, '<div id=\"annotation\"></div>');\n            chart.refresh();\n        }, width: ej.base.Browser.isDevice ? '100%' : '80%', value: [new Date('2016-05-15'), new Date('2018-05-15')], theme: theme,\n    });\n    rangeBottom.appendTo('#range');\n    rangeTop.changed = function (args) {\n        rangeBottom.rangeSlider.setSlider(args.start.getTime(), args.end.getTime(), false, false);\n        var filterData = data1.filter(function (data) {\n            return (data.date.getTime() >= args.start.getTime() &&\n                data.date.getTime() <= args.end.getTime());\n        });\n        chart.series[0].animation.enable = false;\n        chart.series[0].dataSource = filterData;\n        chart.refresh();\n        chart.setAnnotationValue(0, '<div id=\"annotation\"></div>');\n    };\n};\n\n    var datasrc;\n    var data1 = [];\n    var value;\n    var j = 2100;\n    var ajax = new ej.base.Ajax('//ej2.syncfusion.com/javascript/demos/src/range-navigator/data-source/period-data.json', 'GET', true);\n    ajax.send().then();\n    ajax.onSuccess = function (data) {\n        datasrc = JSON.parse(data);\n        for (var i = 0; i < datasrc.length; i++) {\n            value = datasrc[i];\n            data1.push({\n                High: value.High, Low: value.Low, Close: value.Close, Open: value.Open, date: new Date(2010, 6, j)\n            });\n            j++;\n        }\n        _this.renderPeriodSelectorChart(data1);\n    };\n"}