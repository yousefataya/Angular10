{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/dialog/components-dialog/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div class=\"content-wrapper\">\n<div id=\"target\" class=\"col-lg-12 control-section\" style=\"height:100%; width:100%;\">\n<div style=\"position:relative; top:10px; left:10px;\">\n    <!-- Button to open the default Dialog -->\n    <button id=\"dialogBtn\" type=\"button\">Open</button>\n</div>\n<!-- Initialize default Dialog -->\n<div id=\"defaultDialog\">\n    <div id=\"tab_default\">\n    </div>\n\n</div>\n<div id=\"Grid\" style=\"display:none;\">\n</div>\n<div id=\"chartComponent\" style=\"display:none;\">\n    <div id=\"chart\" align=\"center\"></div>\n</div>\n<div id=\"scheduleComponent\" style=\"display:none;\">\n    <div id=\"Schedule\">\n    </div>\n</div>\n<div id=\"rteComponent\" style=\"display:none;\">\n    <div id=\"defaultRTE\">\n        <p>The rich text editor component is WYSIWYG (&quot;what you see is what you get&quot;) editor that provides the best\n            user experience to create and update the content.\n            Users can format their content using standard toolbar commands.</p>\n\n        <p><b>Key features:</b></p>\n\n        <ul>\n            <li>\n                <p>Provides &lt;IFRAME&gt; and &lt;DIV&gt; modes</p>\n            </li>\n            <li>\n                <p>Capable of handling markdown editing.</p>\n            </li>\n            <li>\n                <p>Contains a modular library to load the necessary functionality on demand.</p>\n            </li>\n            <li>\n                <p>Provides a fully customizable toolbar.</p>\n            </li>\n            <li>\n                <p>Provides HTML view to edit the source directly for developers.</p>\n            </li>\n        </ul>\n    </div>\n</div>\n<div id=\"formComponent\" style=\"display:none;\">\n    <div class=\"content-wrapper\" style=\"margin-bottom: 25px;\">\n        <div class=\"form-title\"><span>Add Customer Details</span></div>\n        <form id=\"formId\" class=\"form-horizontal\" novalidate>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input type=\"text\" id=\"user\" name=\"User\" required data-msg-containerid=\"userError\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"user\">User Name</label>\n                </div>\n                <div id=\"userError\"></div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input id=\"dob\" name=\"DOB\" required data-msg-containerid=\"dateError\">\n                    <span class=\"e-float-line\"></span>\n                </div>\n                <div id=\"dateError\"></div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <textarea rows=\"2\" id=\"Address\" name=\"Address\"></textarea>\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"address\">Address</label>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input type=\"text\" id=\"city\" name=\"City\" required data-msg-containerid=\"cityError\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"city\">City</label>\n                </div>\n                <div id=\"cityError\"></div>\n            </div>\n            <div class=\"form-group\">\n                <div class=\"e-float-input\">\n                    <input type=\"text\" id=\"state\" name=\"State\" required data-msg-containerid=\"stateError\">\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text\" for=\"state\">State</label>\n                </div>\n                <div id=\"stateError\"></div>\n            </div>\n            <div class=\"e-row\">\n                <div style=\"width: 320px;margin:0px auto;height: 100px;padding-top: 25px;\">\n                    <div style=\"display: inline-block;\">\n                        <button id=\"validateSubmit\" class=\"samplebtn e-control e-btn e-primary\" type=\"submit\" style=\"height:40px;width: 150px;\" data-ripple=\"true\">Add Customer</button>\n                    </div>\n                    <div style=\"float: right;\">\n                        <button id=\"resetbtn\" class=\"samplebtn e-control e-btn\" type=\"reset\" style=\"height:40px;width: 150px;\" data-ripple=\"true\">Clear</button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n</div>\n</div>\n</div>\n\n\n\n<style>\n#defaultDialog {\nleft:23%;\ntop:0%! important;\n}\n.dlgbtn {\n    margin-right: 10px;\n}\n#target {\n    height: 100%;\n    min-height: 500px;\n}\n@media screen and (min-width: 150px) and (max-width: 480px) {\n    .control-section {\n        margin-bottom: 30px;\n    }\n    .control-wrapper {\n        margin-bottom: 0px;\n    }\n}\n.e-btn-hide {\n    display: none;\n}\n\n.form-title {\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 16px;\n    font-weight: 500;\n    color: rgba(0, 0, 0, 0.70);\n}\n\n.e-error,\n.e-float-text {\n    font-weight: 500;\n}\n\n.e-custom-label {\n    font-size: 14px;\n    font-weight: 500;\n    margin-left: 20px;\n}\n\n#formId {\n    padding-top: 10px;\n    border: 1px solid #ccc;\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.36);\n    border-radius: 5px;\n    background: #f9f9f9;\n    height: 250px;\n    overflow-y: scroll;\n}\n\n.highcontrast form,\n.highcontrast .header {\n    color: #fff;\n    background: #000000;\n}\n\n.header {\n    color: rgba(0, 0, 0, 0.7);\n}\n\ntable,\ntd,\nth {\n    padding: 3px;\n}\n\n.form-horizontal .form-group {\n    margin-left: 20px;\n    margin-right: 20px;\n    margin-bottom: 5px;\n}\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Default Dialog sample\n */\n\n    var initRte = true;\n    var initchart = true;\n    var initschedule = true;\n    var dialogObj = new ej.popups.Dialog({\n        header: 'Syncfusion Components inside Dialog',\n        target: document.getElementById('target'),\n        animationSettings: { effect: 'None' },\n        showCloseIcon: true,\n        width: '700px',\n        buttons: [{\n          click: dlgButtonClick,\n          buttonModel: { content: 'OK', isPrimary: true }\n        },\n        {\n          click: dlgButtonClick,\n          buttonModel: { content: 'Cancel', cssClass: 'e-flat' }\n        }],\n        open: dialogOpen,\n        close: dialogClose\n      });\n      dialogObj.appendTo('#defaultDialog');\n      var tabObj = new ej.navigations.Tab({\n        items: [\n          {\n            header: { 'text': 'Grid' }, content: '#Grid'\n          },\n          {\n            header: { 'text': 'Scheduler' }, content: '#scheduleComponent'\n          },\n          {\n            header: { 'text': 'Chart' }, content: '#chartComponent'\n          },\n          {\n            header: { 'text': 'Rich Text Editor' }, content: '#rteComponent'\n          },\n          {\n            header: { 'text': 'Forms' }, content: '#formComponent'\n          }\n        ],\n        selected: selected\n      });\n      //Render initialized Tab component\n      tabObj.appendTo('#tab_default');\n      var gridData = new ej.data.DataManager(window.orderData).executeLocal(new ej.data.Query().take(15));\n      var grid = new ej.grids.Grid(\n        {\n          dataSource: gridData,\n          allowPaging: true,\n          columns: [\n            { field: 'OrderID', headerText: 'Order ID', width: 120, textAlign: 'Right' },\n            { field: 'CustomerName', headerText: 'Customer Name', width: 150 },\n            { field: 'OrderDate', headerText: 'Order Date', width: 130, format: 'yMd', textAlign: 'Right' },\n            { field: 'Freight', width: 120, format: 'C2', textAlign: 'Right' },\n            { field: 'ShippedDate', headerText: 'Shipped Date', width: 140, format: 'yMd', textAlign: 'Right' },\n            { field: 'ShipCountry', headerText: 'Ship Country', width: 150 }\n          ],\n          pageSettings: { pageSizes: true, pageSize: 5 }\n        });\n      grid.appendTo('#Grid');\n      var data = new ej.base.extend([], window.scheduleData, null, true);\n      var scheduleObj = new ej.schedule.Schedule({\n        height: '300px',\n        selectedDate: new Date(2019, 0, 10),\n        eventSettings: { dataSource: data },\n        dragStart: function (args) {\n          args.navigation.enable = true;\n        }\n      });\n      scheduleObj.appendTo('#Schedule');\n      var defaultRTE = new ej.richtexteditor.RichTextEditor({});\n      defaultRTE.appendTo('#defaultRTE');\n      // Button has been created to open the Dialog\n      var button = new ej.buttons.Button({});\n      button.appendTo('#dialogBtn');\n      var chart = new ej.charts.Chart({\n      \n        //Initializing Primary X Axis\n        primaryXAxis: {\n          valueType: 'DateTime',\n          labelFormat: 'y',\n          intervalType: 'Years',\n          edgeLabelPlacement: 'Shift',\n          majorGridLines: { width: 0 }\n        },\n      \n        //Initializing Primary Y Axis\n        primaryYAxis:\n        {\n          labelFormat: '{value}%',\n          rangePadding: 'None',\n          minimum: 0,\n          maximum: 100,\n          interval: 20,\n          lineStyle: { width: 0 },\n          majorTickLines: { width: 0 },\n          minorTickLines: { width: 0 }\n        },\n        chartArea: {\n          border: {\n            width: 0\n          }\n        },\n        //Initializing Chart Series\n        series: [\n          {\n            type: 'Line',\n            dataSource: [\n              { x: new Date(2005, 0, 1), y: 21 }, { x: new Date(2006, 0, 1), y: 24 },\n              { x: new Date(2007, 0, 1), y: 36 }, { x: new Date(2008, 0, 1), y: 38 },\n              { x: new Date(2009, 0, 1), y: 54 }, { x: new Date(2010, 0, 1), y: 57 },\n              { x: new Date(2011, 0, 1), y: 70 }\n            ],\n            xName: 'x', width: 2, marker: {\n              visible: true,\n              width: 10,\n              height: 10\n            },\n            yName: 'y', name: 'Germany',\n          },\n          {\n            type: 'Line',\n            dataSource: [\n              { x: new Date(2005, 0, 1), y: 28 }, { x: new Date(2006, 0, 1), y: 44 },\n              { x: new Date(2007, 0, 1), y: 48 }, { x: new Date(2008, 0, 1), y: 50 },\n              { x: new Date(2009, 0, 1), y: 66 }, { x: new Date(2010, 0, 1), y: 78 }, { x: new Date(2011, 0, 1), y: 84 }\n            ],\n            xName: 'x', width: 2, marker: {\n              visible: true,\n              width: 10,\n              height: 10\n            },\n            yName: 'y', name: 'England',\n          }\n        ],\n      \n        //Initializing Chart title\n        title: 'Inflation - Consumer Price',\n        //Initializing User Interaction Tooltip\n        tooltip: {\n          enable: true\n        },\n        height: \"300px\",\n        load: function (args) {\n            var lineTheme = location.hash.split('/')[1];\n            lineTheme = lineTheme ? lineTheme: 'Material';\n            args.chart.theme = (lineTheme.charAt(0).toUpperCase() + \n                lineTheme.slice(1)).replace(/-dark/i, 'Dark').replace(/contrast/i, 'Contrast');\n        }\n      });\n      chart.appendTo('#chart');\n      document.getElementById('dialogBtn').onclick = function () {\n        dialogObj.show();\n      };\n      \n      // Navigate to corresponding link\n      function dlgButtonClick() {\n        dialogObj.hide();\n      }\n      \n      // 'Open' Button will be shown, if Dialog is closed\n      function dialogClose() {\n        document.getElementById('dialogBtn').style.display = 'block';\n      }\n      \n      // 'Open' Button will be hidden, if Dialog is opened\n      function dialogOpen() {\n        document.getElementById('dialogBtn').style.display = 'none';\n      }\n      function selected(args) {\n        if (args.selectedIndex == 1 && initschedule) {\n          scheduleObj.refresh();\n          initschedule = false;\n        }\n        if (args.selectedIndex == 2 && initchart) {\n          chart.refresh();\n          initchart = false;\n        }\n        else if (args.selectedIndex == 3 && initRte) {\n          defaultRTE.refresh();\n          initRte = false;\n        }\n      }\n      // Initialize Submit button\n      var buttonFormValidate = new ej.buttons.Button({ isPrimary: true });\n      buttonFormValidate.appendTo('#validateSubmit');\n      // Initialize Reset button\n      var buttonReset = new ej.buttons.Button({});\n      buttonReset.appendTo('#resetbtn');\n      // Initialize Custom placement \n      var option = {\n        rules: {\n          // Initialize the CustomPlacement.\n          User: { required: true },\n          DOB: { date: [true, 'Enter valid format'] },\n          City: { required: true },\n          State: { required: true },\n        }\n      };\n      // Initialize Form validation\n      var formObj;\n      formObj = new ej.inputs.FormValidator('#formId', option);\n      var formId = document.getElementById('formId');\n      document.getElementById('formId').addEventListener(\"submit\", function (e) {\n        e.preventDefault();\n        if (formObj.validate()) {\n            alert('Customer details added!');\n            formObj.reset();\n        }\n    });\n      var datepickerObject = new ej.calendars.DatePicker({\n        placeholder: 'Date of Birth'\n      });\n      // render initialized datepicker\n      datepickerObject.appendTo('#dob');      \n    \n"}