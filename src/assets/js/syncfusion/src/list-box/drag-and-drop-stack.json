{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/list-box/drag-and-drop/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-12 control-section\">\n    <div id=\"drag-drop-wrapper\">\n        <div class=\"listbox-control\">\n            <h4>Group A</h4>\n            <input id=\"listbox1\">\n        </div>\n        <span class=\"e-swap-icon\"></span>\n        <div class=\"listbox-control\">\n            <h4>Group B</h4>\n            <input id=\"listbox2\">\n            <button id=\"savechange\" class=\"e-btn\">Update</button>\n        </div>\n    </div>\n</div>\n\n\n\n\n\n","index.js":"{{ripple}}/**\n * ListBox drag and drop sample.\n */\n\nvar dataA = new ej.data.DataManager({\n    json: window.dragAndDropA\n});\n\n\n\n    // Initialize ListBox component.\n    var listObj1= new ej.dropdowns.ListBox({ \n        // Set the scope of the ListBox.\n        scope: 'combined-list',\n\n        // Set the dragAndDropA data to the data source.\n        dataSource: dataA,\n\n        // Set allowDragAndDrop as `true`.\n        allowDragAndDrop: true,\n        \n        height: '330px',\n\n        drop: onDropGroupA,\n        // Map the appropriate columns to fields property.\n        fields: { text:'Region' }\n    });\n\n    listObj1.appendTo('#listbox1');\n\n    \n    var dataB = new ej.data.DataManager({\n        json: window.dragAndDropB\n    });\n\n    // Initialize ListBox component.\n    var listObj2= new ej.dropdowns.ListBox({ \n        // Set the scope of the ListBox.\n        scope: 'combined-list',\n\n        // Set the dragAndDropB data to the data source.\n        dataSource: dataB,\n\n        // Set allowDragAndDrop as `true`.\n        allowDragAndDrop: true,\n\n        height: '330px',\n\n        drop: onDropGroupB,\n\n        // Set field property with text as `Name`.\n        fields: { text:'Region' }\n    });\n \n    listObj2.appendTo('#listbox2');\n\n\n    var modifiedDataA = { addedRecords: [], deletedRecords: [], changedRecords: [] };\n    var modifiedDataB = { addedRecords: [], deletedRecords: [], changedRecords: [] };\n\n    document.getElementById('savechange').onclick = function() {\n        // Saving the manipulated records in to data manager.\n        dataA.saveChanges(modifiedDataA, listObj1.fields.text);\n        dataB.saveChanges(modifiedDataB, listObj2.fields.text);\n        modifiedDataA.addedRecords = []; modifiedDataB.addedRecords = [];\n    };\n\n    function onDropGroupA(args) {\n        args.items.forEach(function (item) {\n            if (!listObj1.getDataByValue(item[listObj1.fields.text])) {/*Preventing item manipulation while doing drag and drop within same list box.*/\n                modifiedDataB.addedRecords.push(item);\n                modifiedDataA.deletedRecords.push(item);\n            }\n        });\n    }\n\n    function onDropGroupB(args) {\n        args.items.forEach(function (item) {\n            if (!listObj2.getDataByValue(item[listObj2.fields.text])) {\n                modifiedDataA.addedRecords.push(item);\n                modifiedDataB.deletedRecords.push(item);\n            }\n        });\n    }\n"}