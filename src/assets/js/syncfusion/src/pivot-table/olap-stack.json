{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/pivot-table/olap/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\" id=\"pivot-table-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"PivotView\" style=\"width: 100%;height:100%;\">\n        </div>\n    </div>\n</div>\n\n\n\n\n<style>\n    @media only screen and (max-width: 400px) {\n        #pivot-table-section {\n            overflow: auto;\n        }\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Pivot Table olap default sample.\n */\n\n    ej.base.enableRipple(false);\nvar pivotObj = new ej.pivotview.PivotView({\n    dataSourceSettings: {     \n        catalog: 'Adventure Works DW 2008 SE',\n        cube: 'Adventure Works',\n        providerType: \"SSAS\",\n        url: 'https://bi.syncfusion.com/olap/msmdpump.dll',\n        localeIdentifier: 1033,\n        enableSorting: true,\n        rows: [\n            { name: '[Customer].[Customer Geography]', caption: 'Customer Geography' },\n        ],\n        columns: [\n            { name: '[Product].[Product Categories]', caption: 'Product Categories' },\n            { name: '[Measures]', caption: 'Measures' },\n        ],\n        values: [\n            { name: '[Measures].[Customer Count]', caption: 'Customer Count' },\n            { name: '[Measures].[Internet Sales Amount]', caption: 'Internet Sales Amount' }\n        ],\n        filters: [\n            { name: '[Date].[Fiscal]', caption: 'Date Fiscal' },\n        ],\n         filterSettings: [\n            { name: '[Date].[Fiscal]', items: ['[Date].[Fiscal].[Fiscal Quarter].&[2002]&[4]', '[Date].[Fiscal].[Fiscal Year].&[2005]'], \n            levelCount: 3 }\n        ]\n    },\n    allowExcelExport: true,\n    allowConditionalFormatting: true,\n    allowPdfExport: true,\n    showToolbar: true,\n    displayOption:{view:'Both'},\n    allowCalculatedField: true,\n    showGroupingBar: true,\n    showFieldList: true,\n    width: '100%',\n    toolbar: ['New', 'Save', 'SaveAs', 'Rename', 'Remove', 'Load',\n    'Grid', 'Chart','MDX', 'Export', 'SubTotal', 'GrandTotal', 'ConditionalFormatting', 'FieldList'],\n    height: 600,\n    gridSettings: {\n        columnWidth: 160\n    },\n    chartSettings: {\n        load: function(args) {\n          var selectedTheme = location.hash.split(\"/\")[1];\n          selectedTheme = selectedTheme ? selectedTheme : \"Material\";\n          args.chart.theme =\n            selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1);\n        }\n    },\n    loadReport: function (args) {\n        var reportsCollection = [];\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            reportsCollection = JSON.parse(localStorage.pivotviewReports);\n        }\n        reportsCollection.map(function (item) {\n            if (args.reportName === item.reportName) {\n                args.report = item.report;\n            }\n        });\n        if (args.report) {\n            pivotObj.dataSourceSettings = JSON.parse(args.report).dataSourceSettings;\n        }\n    },\n    newReport: function () {\n        pivotObj.setProperties({\n            dataSourceSettings: {\n                rows: [],\n                columns: [],\n                filters: [],\n                values: [],\n            }\n        }, false);\n    }, \n    removeReport: function (args) {\n        var reportsCollection = [];\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            reportsCollection = JSON.parse(localStorage.pivotviewReports);\n        }\n        for (var i = 0; i < reportsCollection.length; i++) {\n            if (reportsCollection[i].reportName === args.reportName) {\n                reportsCollection.splice(i, 1);\n            }\n        }\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            localStorage.pivotviewReports = JSON.stringify(reportsCollection);\n        }\n    },\n    fetchReport: function (args) {\n        var reportsCollection = [];\n        var reeportsList = [];\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            reportsCollection = JSON.parse(localStorage.pivotviewReports);\n        }\n        reportsCollection.map(function (item) {\n            reeportsList.push(item.reportName);\n        });\n        args.reportName = reeportsList;\n    },\n    renameReport: function (args) {\n        var reportsCollection = [];\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            reportsCollection = JSON.parse(localStorage.pivotviewReports);\n        }\n        reportsCollection.map(function (item) {\n            if (args.reportName === item.reportName) {\n                item.reportName = args.rename;\n            }\n        });\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            localStorage.pivotviewReports = JSON.stringify(reportsCollection);\n        }\n    },\n    toolbarRender: function (args) {\n        args.customToolbar.splice(6, 0, {\n            type: 'Separator' \n        });\n        args.customToolbar.splice(9, 0, {\n            type: 'Separator' \n        });\n    },\n    saveReport: function (args) {\n        var report = [];\n        var isSave = false;\n        if (localStorage.pivotviewReports && localStorage.pivotviewReports !== \"\") {\n            report = JSON.parse(localStorage.pivotviewReports);\n        }\n        if (args.report && args.reportName && args.reportName !== '') {\n            report.map(function (item) {\n                if (args.reportName === item.reportName) {\n                    item.report = args.report;\n                    isSave = true;\n                }\n            });\n            if (!isSave) {\n                report.push(args);\n            }\n            localStorage.pivotviewReports = JSON.stringify(report);\n        }\n    }\n});\npivotObj.appendTo('#PivotView');\n"}