{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/remote-data/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><style>\n    .waitingpopup {\n        position: absolute;\n        z-index: 100;\n        top: 0;\n        left: 0;\n        background-color: #fff;\n        border-radius: 50%;\n        box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n        width: 50px;\n        height: 50px;\n    }\n    \n    .image {\n        position: absolute;\n        background-repeat: no-repeat;\n        background-image: url('//ej2.syncfusion.com/javascript/demos/src/chart/images/Medium-36px-spin.gif');\n        background-position: center;\n        width: 50px;\n        height: 50px;\n        padding: 6px;\n    }\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n<div class=\"col-lg-12 control-section\">\n    <div id=\"remote-container\" align=\"center\">\n        <div id=\"waitingpopup\" class=\"waitingpopup\" style=\"display:none\">\n            <span id=\"gif\" class=\"image\"></span>\n        </div>\n    </div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}var dataManager = new ej.data.DataManager({\n    url: 'http://localhost:62728/api/Orders'\n});\nvar query = new ej.data.Query().take(5).where('Estimate', 'lessThan', 3, false);\nvar labelRender = function (args) {\n    if (args.axis.orientation === 'Horizontal') {\n        args.text = args.text.split(' ')[0];\n    }\n};\nvar loaded = 1;\nvar loadedChart = function (args) {\n    var div = document.getElementById('waitingpopup');\n    div.style.display = 'none';\n    if (loaded) {\n        args.chart.refresh();\n    }\n    loaded = 0;\n};\nvar fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n'#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nvar materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n    '#ea7a57', '#404041', '#00bdae'];\nvar bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n    '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nvar highcontrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n    '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\nvar pointRender = function (args) {\n    var dataTheme = location.hash.split('/')[1];\n    if (dataTheme && dataTheme.indexOf('fabric') > -1) {\n        args.fill = fabricColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'material') {\n        args.fill = materialColors[args.point.index % 10];\n    }\n    else if (dataTheme === 'highcontrast') {\n        args.fill = highcontrastColors[args.point.index % 10];\n    }\n    else {\n        args.fill = bootstrapColors[args.point.index % 10];\n    }\n};\n/**\n * Samples for remote data binding\n */\n\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            valueType: 'Category',\n            title: 'Assignee',\n            rangePadding: 'Additional',\n            majorGridLines: { width: 0 },\n        },\n        //Initializing Primary Y Axis\n        primaryYAxis: {\n            majorGridLines: { width: 0 },\n            majorTickLines: { width: 0 },\n            lineStyle: { width: 0 },\n            labelStyle: {\n                color: 'transparent'\n            }\n        },\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        //Initializing Chart Sample\n        series: [\n            {\n                type: 'Column',\n                dataSource: dataManager,\n                xName: 'CustomerID', yName: 'Freight', query: query,\n                name: 'Story Point',\n                animation: { enable: false },\n                marker: {\n                    dataLabel: {\n                        visible: true,\n                        position: 'Top',\n                        font: {\n                            fontWeight: '600',\n                            color: '#ffffff'\n                        }\n                    }\n                }\n            }\n        ],\n        pointRender: pointRender,\n        axisLabelRender: labelRender,\n        loaded: loadedChart,\n        width: ej.base.Browser.isDevice ? '100%' : '60%',\n\n        title: 'Sprint Task Analysis', legendSettings: { visible: false },\n        tooltip: {\n            enable: true\n        }\n    });\n    chart.appendTo('#remote-container');\n"}