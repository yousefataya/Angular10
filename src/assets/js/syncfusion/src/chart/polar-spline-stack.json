{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/polar-spline/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-lg-9 control-section\">\n        <div id=\"polar-spline-container\"></div>\n    </div>\n    <div class=\"col-lg-3 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 50%\">\n                    <div>Series Type:\n                    </div>\n                </td>\n                <td style=\"width: 50%;\">\n                    <div>\n                        <select id=\"seriestype\">\t\t\t\t \n                                    <option>Polar</option>\n                                    <option>Radar</option>\n                                </select>\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for Polar Series with DrawType Spline\n */\n\n    var cardData = [];\n    var biDirData = [];\n    var omniDirData = [];\n    var point1;\n    var point2;\n    for (var x = -180; x < 180; x++) {\n        point1 = { x: x, y: -12.6 * (1 - Math.cos(x * 3.14 / 180)) };\n        cardData.push(point1);\n        point2 = { x: x, y: -3 };\n        omniDirData.push(point2);\n    }\n    for (var x1 = -180; x1 < -90; x1++) {\n        point1 = { x: x1, y: -26 * (1 + Math.cos(x1 * 3.14 / 180)) };\n        biDirData.push(point1);\n    }\n    for (var x2 = -90; x2 < 90; x2++) {\n        point1 = { x: x2, y: -26 * (1 - Math.cos(x2 * 3.14 / 180)) };\n        biDirData.push(point1);\n    }\n    for (var x3 = 90; x3 < 180; x3++) {\n        point1 = { x: x3, y: -26 * (1 + Math.cos(x3 * 3.14 / 180)) };\n        biDirData.push(point1);\n    }\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: {\n            minimum: -180,\n            maximum: 180,\n            interval: 30,\n            labelFormat: '{value}Â°',\n            coefficient: ej.base.Browser.isDevice ? 80 : 100\n        },\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Polar', drawType: 'Spline', dataSource: cardData,\n                animation: { enable: true }, width: 2, isClosed: false,\n                xName: 'x', yName: 'y', name: 'Cardioid (unidirectional)', dashArray: '5 5 2'\n            },\n            {\n                type: 'Polar', drawType: 'Spline', dataSource: omniDirData,\n                animation: { enable: true }, dashArray: '2', width: 2,\n                xName: 'x', yName: 'y', name: 'Omnidirectional', isClosed: false\n            },\n            {\n                type: 'Polar', drawType: 'Spline', dataSource: biDirData,\n                animation: { enable: true }, width: 2, isClosed: false,\n                xName: 'x', yName: 'y', name: 'Bidirectional'\n            },\n        ],\n        //Initializing Chart Title\n        title: 'Microphone Types Polar Patterns',\n        //Initializing Tooltip\n        tooltip: {\n            enable: true\n        },\n\n    });\n    chart.appendTo('#polar-spline-container');\n    var polarType = new ej.dropdowns.DropDownList({\n        index: 0,\n        placeholder: 'Select Range Bar Color',\n        width: 120,\n        change: function () {\n            chart.series[0].type = polarType.value;\n            chart.series[1].type = polarType.value;\n            chart.series[2].type = polarType.value;\n            chart.series[0].animation.enable = true;\n            chart.series[1].animation.enable = true;\n            chart.series[2].animation.enable = true;\n            chart.refresh();\n        }\n    });\n    polarType.appendTo('#seriestype');\n"}