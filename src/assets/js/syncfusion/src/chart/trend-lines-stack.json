{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/trend-lines/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div>\n    <div class=\"col-lg-8 control-section\">\n        <div class=\"content-wrapper\">\n            <div id=\"container\"></div>\n        </div>\n    </div>\n    <div class=\"col-lg-4 property-section\">\n        <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n            <tbody><tr style=\"height: 50px\">\n                <td style=\"width: 50%\">\n                    <div>TrendLine Type:\n                    </div>\n                </td>\n                <td style=\"width: 50%;\">\n                    <div>\n                        <select id=\"trendLineType\">\n                            <option value=\"Linear\">Linear</option>\n                            <option value=\"Exponential\">Exponential</option>\n                            <option value=\"Power\">Power</option>\n                            <option value=\"Logarithmic\">Logarithmic</option>\n                            <option value=\"Polynomial\">Polynomial</option>\n                            <option value=\"MovingAverage\">Moving Average</option>\n                        </select>\n                    </div>\n                </td>\n            </tr>\n            <tr id style=\"height: 50px\">\n                <td style=\"width: 80%\">\n                    <div> Forward Forecast:</div>\n                </td>\n                <td style=\"width: 20%;\">\n                    <div style=\"margin-top: 0px;\">\n                        <input type=\"text\" id=\"forwardForecast\">\n                    </div>\n                </td>\n            </tr>\n            <tr id style=\"height: 50px\">\n                <td style=\"width: 80%\">\n                    <div>Backward Forecast:</div>\n                </td>\n                <td style=\"width: 20%;\">\n                    <div style=\"margin-top: 0px;\">\n                        <input type=\"text\" id=\"backwardForecast\">\n                    </div>\n                </td>\n            </tr>\n            <tr id style=\"height: 50px\">\n                <td style=\"width: 80%\">\n                    <div>Polynomial Order:</div>\n                </td>\n                <td style=\"width: 20%;\">\n                    <div style=\"margin-top: 0px;\">\n                        <input type=\"text\" id=\"polynomialOrder\">\n                    </div>\n                </td>\n            </tr>\n            <tr id style=\"height: 50px\">\n                <td style=\"width: 80%\">\n                    <div>Period:</div>\n                </td>\n                <td style=\"width: 20%;\">\n                    <div style=\"margin-top: 0px;\">\n                        <input type=\"text\" id=\"period\">\n                    </div>\n                </td>\n            </tr>\n        </tbody></table>\n    </div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n\n    #container_Series_0_TrendLine_0 {\n        stroke-dasharray: 10px 10px;\n        stroke-linejoin: round; stroke-linecap: round;\n        -webkit-animation: dash 1s linear infinite;\n        animation: dash 1s linear infinite;\n    }\n\n    @-webkit-keyframes dash {\n        100% {\n            stroke-dashoffset: -20px;\n        }\n    }\n\n    @keyframes dash {\n        100% {\n            stroke-dashoffset: -20px;\n        }\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Samples for trendlines\n */\n\n    var series1 = [];\n    var yValue = [7.66, 8.03, 8.41, 8.97, 8.77, 8.20, 8.16, 7.89, 8.68, 9.48, 10.11, 11.36, 12.34, 12.60, 12.95,\n        13.91, 16.21, 17.50, 22.72, 28.14, 31.26, 31.39, 32.43, 35.52, 36.36,\n        41.33, 43.12, 45.00, 47.23, 48.62, 46.60, 45.28, 44.01, 45.17, 41.20, 43.41, 48.32, 45.65, 46.61, 53.34, 58.53];\n    var point1;\n    var i;\n    var j = 0;\n    for (i = 1973; i <= 2013; i++) {\n        point1 = { x: i, y: yValue[j] };\n        series1.push(point1);\n        j++;\n    }\n    var powerData = [\n        { x: 1, y: 10 }, { x: 2, y: 50 }, { x: 3, y: 80 }, { x: 4, y: 110 },\n        { x: 5, y: 180 }, { x: 6, y: 220 }, { x: 7, y: 300 }, { x: 8, y: 370 }, { x: 9, y: 490 }, { x: 10, y: 500 }\n    ];\n    var chart = new ej.charts.Chart({\n        primaryXAxis: {\n            majorGridLines: { width: 0 },\n            edgeLabelPlacement: 'Shift'\n        },\n        primaryYAxis: {\n            title: 'Rupees against Dollars',\n            interval: 10, lineStyle: { width: 0 }, majorTickLines: { width: 0 }\n        },\n        series: [{\n            dataSource: series1, xName: 'x', yName: 'y',\n            name: 'Rupees', type: 'Spline',\n            marker: { visible: true },\n            trendlines: [{ type: 'Linear', width: 3, marker: { visible: false }, name: 'TrendLine' , fill: '#C64A75' }]\n        }],\n        tooltip: { enable: true },\n        title: 'Historical Indian Rupee Rate (INR/USD)',\n        chartArea: { border: { width: 0 } },\n        legendSettings: { visible: true },\n\n    });\n    chart.appendTo('#container');\n    var forward = new ej.inputs.NumericTextBox({\n        value: 0, min: 1, max: 20, width: 120, step: 1,\n        change: function () {\n            chart.series[0].animation.enable = false;\n            chart.series[0].trendlines[0].forwardForecast = forward.value;\n            chart.refresh();\n        }\n    });\n    forward.appendTo('#forwardForecast');\n    var backward = new ej.inputs.NumericTextBox({\n        value: 0, min: 1, max: 20, width: 120, step: 1, change: function () {\n            chart.series[0].animation.enable = false;\n            chart.series[0].trendlines[0].backwardForecast = backward.value;\n            chart.refresh();\n        }\n    });\n    backward.appendTo('#backwardForecast');\n    var polynomial = new ej.inputs.NumericTextBox({\n        value: 0, min: 1, max: 20, width: 120, step: 1, enabled: false,\n        change: function () {\n            chart.series[0].animation.enable = false;\n            chart.series[0].trendlines[0].polynomialOrder = polynomial.value;\n            chart.refresh();\n        }\n    });\n    polynomial.appendTo('#polynomialOrder');\n    var periodValue = new ej.inputs.NumericTextBox({\n        value: 0, min: 1, max: 20, width: 120, step: 1, enabled: false,\n        change: function () {\n            chart.series[0].animation.enable = false;\n            chart.series[0].trendlines[0].period = periodValue.value;\n            chart.refresh();\n        }\n    });\n    periodValue.appendTo('#period');\n    var trend = new ej.dropdowns.DropDownList({\n        index: 0, width: 120,\n        change: function () {\n            chart.series[0].animation.enable = false;\n            chart.series[0].dataSource = [];\n            chart.series[0].trendlines[0].type = trend.value;\n            chart.series[0].trendlines[0].name = trend.value;\n            var forwardForecast;\n            var backwardForecast;\n            var polynomialOrder;\n            var period;\n            if (trend.value !== 'Power') {\n                chart.series[0].dataSource = series1;\n                chart.series[0].name = 'Rupees';\n                chart.primaryXAxis.title = '';\n                chart.primaryYAxis.interval = 10;\n                chart.primaryYAxis.title = 'Rupees against Dollars';\n                chart.title = 'Historical Indian Rupee Rate (INR USD)';\n                if (trend.value === 'MovingAverage') {\n                    chart.series[0].trendlines[0].marker.visible = false;\n                }\n            }\n            else {\n                chart.series[0].dataSource = powerData;\n                chart.series[0].name = 'Meters';\n                chart.primaryXAxis.title = 'Seconds';\n                chart.primaryYAxis.title = 'Meters';\n                chart.primaryYAxis.interval = 100;\n                chart.title = 'Distance Measurement';\n            }\n            if (trend.value !== 'Polynomial' && trend.value !== 'MovingAverage') {\n                period = polynomialOrder = true;\n                forwardForecast = backwardForecast = false;\n            }\n            else if (trend.value === 'MovingAverage') {\n                period = false;\n                forwardForecast = backwardForecast = polynomialOrder = true;\n            }\n            else {\n                forwardForecast = backwardForecast = polynomialOrder = false;\n                period = true;\n            }\n            forward.enabled = !forwardForecast;\n            backward.enabled = !backwardForecast;\n            polynomial.enabled = !polynomialOrder;\n            periodValue.enabled = !period;\n            chart.refresh();\n        }\n    });\n    trend.appendTo('#trendLineType');\n"}