{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/pie-annotation/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for Annotation in chart\n */\nfunction getValue(series, pointIndex, y) {\n    var totalValue = 0;\n    for (var _i = 0, series_1 = series; _i < series_1.length; _i++) {\n        var ser = series_1[_i];\n        totalValue += ser.points[pointIndex].y;\n    }\n    return (Math.round((y / totalValue) * 100)) + '%';\n}\n\n    var pie;\n    var isRender = false;\n    var dataSource = [\n        { x: '2014', y0: 51, y1: 77, y2: 66, y3: 34 }, { x: '2015', y0: 67, y1: 49, y2: 19, y3: 38 },\n        { x: '2016', y0: 143, y1: 121, y2: 91, y3: 44 }, { x: '2017', y0: 19, y1: 28, y2: 65, y3: 51 },\n        { x: '2018', y0: 30, y1: 66, y2: 32, y3: 61 }, { x: '2019', y0: 189, y1: 128, y2: 122, y3: 76 },\n        { x: '2020', y0: 72, y1: 97, y2: 65, y3: 82 }\n    ];\n    var pieDataSource = [\n        { x: 'UK', y: 51, text: '22%' }, { x: 'Germany', y: 77, text: '34%' },\n        { x: 'France', y: 66, text: '29%' }, { x: 'Italy', y: 34, text: '15%' }\n    ];\n    var chart = new ej.charts.Chart({\n        primaryXAxis: {\n            title: 'Years', valueType: 'Category', majorGridLines: { width: 0 }, minorGridLines: { width: 1 },\n            minorTickLines: { width: 1 }, interval: 1, labelIntersectAction: 'Rotate45',\n        },\n        primaryYAxis: {\n            title: 'Sales', lineStyle: { width: 0 }, minimum: 0, maximum: 700, interval: 100,\n            majorGridLines: { width: 1 }, minorGridLines: { width: 1 },\n            minorTickLines: { width: 0 }, labelFormat: '{value}B', majorTickLines: { width: 0 }\n        },\n        series: [\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y0', name: 'UK', dataSource: dataSource },\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y1', name: 'Germany', dataSource: dataSource },\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y2', name: 'France', dataSource: dataSource },\n            { type: 'StackingColumn', xName: 'x', width: 2, yName: 'y3', name: 'Italy', dataSource: dataSource }\n        ],\n        chartArea: { border: { width: 0 } }, title: 'Mobile Game Market by Country',\n        selectionMode: 'Cluster', selectedDataIndexes: [{ series: 0, point: 0 }],\n        width: ej.base.Browser.isDevice ? '100%' : '80%',\n\n        legendSettings: { visible: true, toggleVisibility: false },\n        annotations: [{\n            content: '<div id=\"chart_annotation\" style=\"width: 200px; height: 200px\"></div>',\n            x: '20%', y: '25%', coordinateUnits: 'Pixel', region: 'Series'\n        }],\n        chartMouseUp: function (args) {\n            if (args.target.indexOf('Point') > -1 && args.target.indexOf('annotation') === -1) {\n                var pointIndex = parseInt(args.target[args.target.length - 1], 10);\n                pieDataSource = [];\n                for (var _i = 0, _a = chart.visibleSeries; _i < _a.length; _i++) {\n                    var series = _a[_i];\n                    var value = series.points[pointIndex].y;\n                    pieDataSource.push({\n                        'x': series.name, 'y': value, 'text': getValue(chart.visibleSeries, pointIndex, value)\n                    });\n                }\n                pie.series[0].dataSource = pieDataSource;\n                pie.series[0].xName = 'x';\n                pie.series[0].yName = 'y';\n                pie.refresh();\n            }\n        },\n        resized: function (args) {\n            location.reload();\n        },\n        loaded: function (args) {\n            if (isRender) {\n                pie.destroy();\n                pie = new ej.charts.AccumulationChart({\n                    background: 'transparent',\n                    series: [{\n                        radius: '65%', animation: { enable: false },\n                        dataSource: pieDataSource, border: { color: 'transparent'},\n                        xName: 'x', yName: 'y', dataLabel: { visible: true, position: 'Inside', font: { color: 'white' }, name: 'text' },\n                    }],\n                    load: function (args) {\n                        var selectedTheme = location.hash.split('/')[1];\n                        selectedTheme = selectedTheme ? selectedTheme : 'Material';\n                        args.accumulation.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\n                    },\n                    legendSettings: { visible: false },\n                });\n                pie.appendTo('#chart_annotation');\n            }\n        },\n        animationComplete: function (args) {\n            isRender = true;\n            var selectedTheme = location.hash.split('/')[1];\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\n            pie = new ej.charts.AccumulationChart({\n                background: 'transparent',\n                series: [{\n                    radius: '65%', animation: { enable: false },\n                    dataSource: pieDataSource, border: { color: 'transparent'},\n                    xName: 'x', yName: 'y', dataLabel: { visible: true, position: 'Inside', name: 'text' },\n                }],\n                theme: (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)),\n                legendSettings: { visible: false }\n            });\n            pie.appendTo('#chart_annotation');\n        }\n    });\n    chart.appendTo('#container');\n"}