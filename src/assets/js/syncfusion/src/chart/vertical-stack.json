{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/vertical/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\">\n<div class=\"control-section\">\n    <div id=\"vertical-container\" align=\"center\"></div>\n</div>\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style>\n</div></body></html>","index.js":"{{ripple}}/**\n * Sample for vertical chart\n */\n\n    var interval;\n    var chart = new ej.charts.Chart({\n        //Initializing Primary X Axis\n        primaryXAxis: { title: 'Time (s)', majorGridLines: { width: 0 } },\n        //Initializing Primary Y Axis\n        primaryYAxis: { title: 'Velocity (m/s)', majorGridLines: { width: 0 }, minimum: -15, maximum: 15, interval: 5 },\n        //Initializing Chart Series\n        series: [\n            {\n                type: 'Line', xName: 'x', yName: 'y', dataSource: [{ x: 0, y: 0 }],\n                animation: { enable: false }, width: 2\n            }\n        ],\n        chartArea: {\n            border: {\n                width: 0\n            }\n        },\n        isTransposed: true,\n        //Initializing Chart Title\n        title: 'Indonesia - Seismograph Analysis',\n        //Initializing Tooltip\n        tooltip: { enable: false },\n        width: ej.base.Browser.isDevice ? '100%' : '80%',\n\n        loaded: function (args) {\n            chart.loaded = null;\n            interval =\n                setInterval(function () {\n                    chart.series[0].dataSource = liveData(chart.series[0].dataSource, chart.series[0]);\n                    chart.refresh();\n                }, 10);\n        }\n    });\n    chart.appendTo('#vertical-container');\n    var count = 0;\n    function liveData(data, series) {\n        count = count + 1;\n        var newData = data;\n        if (count > 350 || document.getElementById('vertical-container') === null) {\n            clearInterval(interval);\n        }\n        else if (count > 300) {\n            newData.push({ x: getXValue(data), y: getRandomArbitrary(0, 0) });\n        }\n        else if (count > 250) {\n            newData.push({ x: getXValue(data), y: getRandomArbitrary(-2, 1) });\n        }\n        else if (count > 180) {\n            newData.push({ x: getXValue(data), y: getRandomArbitrary(-3, 2) });\n        }\n        else if (count > 100) {\n            newData.push({ x: getXValue(data), y: getRandomArbitrary(-7, 6) });\n        }\n        else if (count < 50) {\n            newData.push({ x: getXValue(data), y: getRandomArbitrary(-3, 3) });\n        }\n        else {\n            newData.push({ x: getXValue(data), y: getRandomArbitrary(-9, 9) });\n        }\n        return newData;\n    }\n    function getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n    function getXValue(data) {\n        return data.length;\n    }\n"}