{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/accumulation-distribution-indicator/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"adi-container\" align=\"center\"></div>\n</div>\n\n\n<style>\n    #control-container {\n        padding: 0px !important;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Sample for ADI Indicator\n */\n var _this = this;\n this.renderChart = function (chartData) {\n        var chart = new ej.charts.Chart({\n            primaryXAxis: {\n                valueType: 'DateTime',\n                majorGridLines: { width: 0 },\n                zoomFactor: 0.2, zoomPosition: 0.6,\n                crosshairTooltip: { enable: true }\n            },\n            primaryYAxis: {\n                title: 'Price',\n                labelFormat: '${value}',\n                minimum: 50, maximum: 170,\n                plotOffset: 25,\n                interval: 30, rowIndex: 1, opposedPosition: true, lineStyle: { width: 0 }\n            },\n            axes: [{\n                    name: 'secondary',\n                    opposedPosition: true, rowIndex: 0,\n                    majorGridLines: { width: 0 }, lineStyle: { width: 0 }, minimum: -7000000000, maximum: 5000000000,\n                    interval: 6000000000, majorTickLines: { width: 0 }, title: 'Accumulation Distribution',\n                    stripLines: [\n                        {\n                            start: -7000000000, end: 6000000000, text: '', color: '#6063ff', visible: true,\n                            opacity: 0.1, zIndex: 'Behind'\n                        }\n                    ]\n                }],\n            rows: [\n                {\n                    height: '40%'\n                }, {\n                    height: '60%'\n                }\n            ],\n            series: [{\n                    dataSource: chartData, width: 2,\n                    xName: 'x', yName: 'y', low: 'low', high: 'high', close: 'close', volume: 'volume', open: 'open',\n                    name: 'Apple Inc', bearFillColor: '#2ecd71', bullFillColor: '#e74c3d',\n                    type: 'Candle', animation: { enable: true }\n                }],\n            indicators: [{\n                    type: 'AccumulationDistribution', field: 'Close', seriesName: 'Apple Inc', yAxisName: 'secondary', fill: '#6063ff',\n                    period: 3, animation: { enable: true }\n                }],\n            zoomSettings: {\n                enableSelectionZooming: true,\n                enablePinchZooming: true,\n                mode: 'XY',\n                enablePan: true\n            },\n            tooltip: {\n                enable: true, shared: true\n            },\n            crosshair: { enable: true, lineType: 'Vertical' },\n            axisLabelRender: function (args) {\n                if (args.axis.name === 'secondary') {\n                    var value = Number(args.text) / 1000000000;\n                    args.text = String(value) + 'bn';\n                }\n            },\n            chartArea: { border: { width: 0 } },\n            title: 'AAPL 2012-2017',\n            width: ej.base.Browser.isDevice ? '100%' : '80%',\n\n            legendSettings: {\n                visible: false\n            }\n        });\n        chart.appendTo('#adi-container');\n    };\n    \n        var chartData;\n        var ajax = new ej.base.Ajax('//ej2.syncfusion.com/javascript/demos/src/chart/data-source/financial-data.json', 'GET', true);\n        ajax.send().then();\n        ajax.onSuccess = function (data) {\n            chartData = JSON.parse(data);\n            chartData.map(function (data) {\n                data.x = new Date(data.x);\n            });\n            _this.renderChart(chartData);\n        };\n        \n    "}