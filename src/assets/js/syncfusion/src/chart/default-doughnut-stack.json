{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/chart/default-doughnut/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"control-section\">\n    <div id=\"doughnut-container\"></div>\n</div>\n\n</div></body></html>","index.js":"{{ripple}}var centerTitle = document.createElement('div');\ncenterTitle.innerHTML = 'Expenses in Year';\ncenterTitle.style.position = 'absolute';\ncenterTitle.style.visibility = 'hidden';\n/**\n * Sample for Doughnut \n */\n\n    var count = 0;\n\tvar pieinterval;\n    var pie = new ej.charts.AccumulationChart({\n        enableSmartLabels: true,\n        //Initializing Selection Mode\n        selectionMode: 'Point',\n        //Initializing Series\n        series: [\n            {\n                dataSource: [\n                    { 'x': 'Net-tution and Fees', y: 21, text: '21%' },\n                    { 'x': 'Self-supporting Operations', y: 21, text: '21%' },\n                    { 'x': 'Private Gifts', y: 8, text: '8%' },\n                    { 'x': 'All Other', y: 8, text: '8%' },\n                    { 'x': 'Local Revenue', y: 4, text: '4%' },\n                    { 'x': 'State Revenue', y: 21, text: '21%' },\n                    { 'x': 'Federal Revenue', y: 16, text: '16%' }\n                ],\n                xName: 'x',\n                yName: 'y',\n                startAngle: 0,\n                endAngle: 360,\n                innerRadius: '40%',\n                dataLabel: {\n                    visible: true, position: 'Inside',\n                    font: {\n                        color: 'white',\n                        fontWeight: '600',\n                        size: '14px'\n                    },\n                },\n                name: 'Revenue'\n            }\n        ],\n        //Initializing Legend\n        legendSettings: {\n            visible: true, toggleVisibility: false,\n            position: 'Right',\n            height: '28%',\n            width: '44%'\n        },\n        animationComplete: function (args) {\n            centerTitle.style.fontSize = getFontSize(args.accumulation.initialClipRect.width);\n            var rect = centerTitle.getBoundingClientRect();\n            centerTitle.style.top = (args.accumulation.origin.y - rect.height / 2) + 'px';\n            centerTitle.style.left = (args.accumulation.origin.x - rect.width / 2) + 'px';\n            centerTitle.style.visibility = 'visible';\n            var points = args.accumulation.visibleSeries[0].points;\n            for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n                var point = points_1[_i];\n                if (point.labelPosition === 'Outside' && point.labelVisible) {\n                    var label = document.getElementById('doughnut-container_datalabel_Series_0_text_' + point.index);\n                    label.setAttribute('fill', 'black');\n                }\n            }\n        },\n        textRender: function (args) {\n            args.series.dataLabel.font.size = getFontSize(pie.initialClipRect.width);\n            args.text = args.text + '%';\n        },\n\n    });\n    pie.appendTo('#doughnut-container');\n    document.getElementById('doughnut-container').appendChild(centerTitle);\n    function getFontSize(width) {\n        if (width > 300) {\n            return '13px';\n        }\n        else if (width > 250) {\n            return '8px';\n        }\n        else {\n            return '6px';\n        }\n    }\n"}