{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/maps/dynamic-marker/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div id=\"container\"></div>\n    <div align=\"center\">\n            <p>\n                <i>\n                    </i></p><div align=\"center\"><i>\n                        <p id=\"content\" style=\"font-size: 16px;color:grey\">Click on the maps to add marker/navigation line</p>\n                    </i></div><i>\n                </i>\n            <p></p>\n        </div>\n</div>\n\n    \n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\" style=\"width: 100%\">\n        <tbody>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;display:inline-block\">Marker</div>\n                </td>\n                <td style=\"width: 50%;\">\n                    <div>\n                        <input type=\"checkbox\" id=\"marker\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;\">Line</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <div>\n                        <input type=\"checkbox\" name=\"high\" id=\"line\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px; \">Connecting line</div>\n                </td>\n                <td style=\"width: 50%\">\n                    <div>\n                        <input type=\"checkbox\" id=\"connect\">\n                    </div>\n                </td>\n            </tr>\n            <tr style=\"height: 10px\"></tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\" class=\"property-text\">\n                    Marker type\n                </td>\n                <td style=\"width: 10%; margin-left:20px\">\n                    <select id=\"type\" style=\"width: 50px; height: 20px\">\n                        <option value=\"Image\">Image</option>\n                        <option value=\"Circle\">Circle</option>\n                        <option value=\"Diamond\">Diamond</option>\n                        <option value=\"Star\">Star</option>\n                        <option value=\"Triangle\">Triangle</option>\n                    </select>\n                </td>\n            </tr>\n            <tr style=\"height: 10px\"></tr>\n            <tr style=\"height: 35px\">\n                <td style=\"width: 70%\">\n                    <div class=\"property-text\" style=\"padding: 0px;\">Width</div>\n                </td>\n                <td style=\"width: 10%\">\n                    <input type=\"text\" class=\"e-input\" value=\"1\" style=\"width:87px\" id=\"width\" disabled>\n                </td>\n            </tr>\n            <tr>\n                <td align=\"center\">\n                    <div style=\"margin-left: 60%;\">\n                        <button id=\"togglebtn\" style=\"text-transform:none !important;width: 80px;margin-left: -55%;margin-top: -2px\">Clear</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n<!-- custom code start-->\n<style>\n    .property-text {\n        font-family: \"Roboto\", \"Segoe UI\", \"GeezaPro\", \"DejaVu Serif\", \"sans-serif\";\n        font-size: 13px;\n        font-weight: 400;\n    }\n    #width.e-input[disabled] {\n        border-bottom-color: inherit;\n        background-image: none;\n    }\n</style></div></body></html>","index.js":"{{ripple}}/**\n * Dynamic marker\n */\n\nvar markerCheck = true;\nvar lineCheck;\nvar connectLineCheck;\nvar navigationLines = [];\nvar latitude = [];\nvar longitude = [];\n    var maps = new ej.maps.Maps({\n        zoomSettings: {\n            enable: true\n        },\n        layers: [\n            {\n                layerType: 'OSM'\n            },\n        ],\n\n        click: function (args) {\n            if (markerCheck) {\n                addMarker(args);\n            }\n            if (lineCheck && !connectLineCheck) {\n                addLine(args, widthCheck.value);\n            }\n            if (connectLineCheck) {\n                addLine(args, widthCheck.value, true);\n            }\n            if (markerCheck || lineCheck || connectLineCheck) {\n                maps.refresh();\n                if (togglebtn.disabled && (maps.layers[0].markerSettings.length ||\n                maps.layers[0].navigationLineSettings.length)) {\n                    togglebtn.disabled = false;\n                }\n            }\n        }\n    });\n    maps.appendTo('#container');\n    var markerCheckBox= new ej.buttons.CheckBox(\n        {\n            change: function(e) {\n                markerCheck = e.checked;\n                markerShape.enabled = e.checked;\n            }, checked: true\n        },\n        '#marker');\n\n    var lineCheckBox = new ej.buttons.CheckBox(\n        {\n            change: function (e) {\n                lineCheck = e.checked;\n                if (e.checked) {\n                    connectlineCheckBox.disabled = false;\n                    connectlineCheckBox.checked = false;\n                    widthCheck.disabled = false;\n                } else {\n                    connectLineCheck = e.checked;\n                    emptySavedLinePositions();\n                    connectlineCheckBox.disabled = true;\n                    connectlineCheckBox.checked = false;\n                    widthCheck.disabled = true;\n                }\n            }\n        },\n        '#line');\n\n\n    var connectlineCheckBox = new ej.buttons.CheckBox(\n        {\n            disabled: true,\n            change: function (e) {\n                connectLineCheck = e.checked;\n                if (!e.checked) {\n                    emptySavedLinePositions();\n                }\n            }\n        },\n        '#connect');\n\n    var markerShape = new ej.dropdowns.DropDownList({\n        index: 0,\n        placeholder: 'Select marker shape',\n        width: 87\n    });\n    markerShape.appendTo('#type');\n\n    var widthCheck= document.getElementById('width');\n\n    var togglebtn = new ej.buttons.Button({\n        cssClass: 'e-info',\n        isPrimary: true,\n        disabled: true\n    });\n    togglebtn.appendTo('#togglebtn');\n\n    document.getElementById('togglebtn').onclick = function () {\n        maps.layers[0].markerSettings = [];\n        maps.layers[0].navigationLineSettings = [];\n        navigationLines = [];\n        emptySavedLinePositions();\n        maps.refresh();\n        togglebtn.disabled = true;\n    };\n    var emptySavedLinePositions = function () {\n        latitude = [];\n        longitude = [];\n    };\n    var addMarker = function (args) {\n        if (args.latitude !== null && args.longitude !== null) {\n            var layerIndex = (args.target.indexOf('_LayerIndex_') !== -1) ?\n                parseFloat(args.target.split('_LayerIndex_')[1].split('_')[0]) : 0;\n            var marker;\n            var dynamicMarker = maps.layersCollection[layerIndex].markerSettings;\n            dynamicMarker.push(new ej.maps.MarkerSettings(maps, 'markerSettings', marker));\n            var markerIndex = dynamicMarker.length - 1;\n            dynamicMarker[markerIndex].visible = true;\n            dynamicMarker[markerIndex].dataSource = [\n                { latitude: args.latitude, longitude: args.longitude, name: 'dynamicmarker' }\n            ];\n            dynamicMarker[markerIndex].animationDuration = 0;\n            dynamicMarker[markerIndex].fill = '#DB4537';\n            dynamicMarker[markerIndex].shape = (markerShape.value !== 'Image') ? markerShape.value : 'Image';\n            dynamicMarker[markerIndex].height = (markerShape.value !== 'Image') ? 12 : 20;\n            dynamicMarker[markerIndex].width = (markerShape.value !== 'Image') ? 12 : 20;\n            dynamicMarker[markerIndex].imageUrl = (markerShape.value !== 'Image') ? '' : '//ej2.syncfusion.com/javascript/demos/src/maps/images/ballon.png';\n        }\n    };\n\n    var addLine = function (lineArgs, lineWidth, connectiveLine) {\n        if (lineArgs.latitude != null && lineArgs.longitude != null) {\n            latitude.push(lineArgs.latitude);\n            longitude.push(lineArgs.longitude);\n        }\n        if (latitude.length >= 2) {\n            navigationLines.push({\n                'visible': true,\n                'latitude': [latitude[(latitude.length - 2)], latitude[(latitude.length - 1)]],\n                'longitude': [longitude[(longitude.length - 2)], longitude[(longitude.length - 1)]],\n                'angle': 0,\n                'color': 'blue',\n                'width': (lineWidth > 5) ? 5 : (((5 >= lineWidth) && (lineWidth >= 1)) ? lineWidth : 1)\n            });\n            maps.layers[0].navigationLineSettings = navigationLines;\n            if (!connectiveLine) {\n                emptySavedLinePositions();\n            }\n        }\n    };\n"}