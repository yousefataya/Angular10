{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/gantt/events/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div class=\"content-wrapper\">\n        <div id=\"Events\">\n        </div>\n    </div>\n</div>\n\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Event Trace\">\n        <tbody><tr>\n            <td>\n                <div class=\"eventarea\" style=\"height: 346px;overflow: auto\">\n                    <span class=\"EventLog\" id=\"EventLog\" style=\"word-break: normal;\"></span>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"width: 50%;padding: 20px 10px 10px 80px;\">\n                <div>\n                    <button type=\"button\" id=\"clear\">Clear</button>\n                </div>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n\n\n\n</div></body></html>","index.js":"{{ripple}}\n    var ganttChart = new ej.gantt.Gantt({\n        dataSource: projectNewData,\n        height: '450px',\n        treeColumnIndex: 1,\n        highlightWeekends: true,\n        allowSelection: true,\n        allowReordering: true,\n        allowSorting: true,\n        allowResizing: true,\n        enableContextMenu: true,\n        showColumnMenu: true,\n        load: load,\n        created: created,\n        dataBound: dataBound,\n        toolbarClick: toolbarClick,\n        beforeTooltipRender: beforeTooltipRender,\n        actionBegin: actionBegin,\n        actionComplete: actionComplete,\n        cellEdit: cellEdit,\n        endEdit: endEdit,\n        taskbarEditing: taskbarEditing,\n        taskbarEdited: taskbarEdited,\n        rowSelecting: rowSelecting,\n        rowSelected: rowSelected,\n        rowDeselecting: rowDeselecting,\n        rowDeselected: rowDeselected,\n        columnDragStart: columnDragStart,\n        columnDrag: columnDrag,\n        columnDrop: columnDrop,\n        expanding: expanding,\n        expanded: expanded,\n        collapsing: collapsing,\n        collapsed: collapsed,\n        columnMenuClick: columnMenuClick,\n        columnMenuOpen: columnMenuOpen,\n        contextMenuClick: contextMenuClick,\n        contextMenuOpen: contextMenuOpen,\n        resizeStart: resizeStart,\n        resizing: resizing,\n        resizeStop: resizeStop,\n        splitterResizeStart: splitterResizeStart,\n        splitterResizing: splitterResizing,\n        splitterResized: splitterResized,\n        recordDoubleClick: recordDoubleClick,\n        onTaskbarClick: onTaskbarClick,\n        taskFields: {\n            id: 'TaskID',\n            name: 'TaskName',\n            startDate: 'StartDate',\n            endDate: 'EndDate',\n            duration: 'Duration',\n            progress: 'Progress',\n            dependency: 'Predecessor',\n            child: 'subtasks'\n        },\n        columns: [\n            { field: 'TaskID', width: 60 },\n            { field: 'TaskName', width: 250 },\n            { field: 'StartDate' },\n            { field: 'EndDate' },\n            { field: 'Duration' },\n            { field: 'Predecessor' },\n            { field: 'Progress' },\n        ],\n        toolbar: ['Add', 'Edit', 'Update', 'Delete', 'Cancel', 'ExpandAll', 'CollapseAll', 'Search'],\n        editSettings: {\n            allowEditing: true,\n            allowAdding: true,\n            allowDeleting: true,\n            allowTaskbarEditing: true,\n        },\n        labelSettings: {\n            leftLabel: 'TaskName'\n        },\n        splitterSettings: {\n            columnIndex: 2\n        },\n        projectStartDate: new Date('03/24/2019'),\n        projectEndDate: new Date('07/06/2019')\n    });\n    ganttChart.appendTo('#Events');\n\n    function load() {\n        appendElement('Gantt <b>load</b> event called<hr>');\n    }\n    function created() {\n        appendElement('Gantt <b>created</b> event called<hr>');\n    }\n    function dataBound() {\n        appendElement('Gantt <b>dataBound</b> event called<hr>');\n    }\n    function toolbarClick() {\n        appendElement('Gantt <b>toolbarClick</b> event called<hr>');\n    }\n    function beforeTooltipRender() {\n        appendElement('Gantt <b>beforeTooltipRender</b> event called<hr>');\n    }\n    function actionBegin() {\n        appendElement('Gantt <b>actionBegin</b> event called<hr>');\n    }\n    function actionComplete() {\n        appendElement('Gantt <b>actionComplete</b> event called<hr>');\n    }\n    function cellEdit() {\n        appendElement('Gantt <b>cellEdit</b> event called<hr>');\n    }\n    function endEdit() {\n        appendElement('Gantt <b>endEdit</b> event called<hr>');\n    }\n    function taskbarEditing() {\n        appendElement('Gantt <b>taskbarEditing</b> event called<hr>');\n    }\n    function taskbarEdited() {\n        appendElement('Gantt <b>taskbarEdited</b> event called<hr>');\n    }\n    function rowSelecting() {\n        appendElement('Gantt <b>rowSelecting</b> event called<hr>');\n    }\n    function rowSelected() {\n        appendElement('Gantt <b>rowSelected</b> event called<hr>');\n    }\n    function rowDeselecting() {\n        appendElement('Gantt <b>rowDeselecting</b> event called<hr>');\n    }\n    function rowDeselected() {\n        appendElement('Gantt <b>rowDeselected</b> event called<hr>');\n    }\n    function columnDragStart() {\n        appendElement('Gantt <b>columnDragStart</b> event called<hr>');\n    }\n    function columnDrag() {\n        appendElement('Gantt <b>columnDrag</b> event called<hr>');\n    }\n    function columnDrop() {\n        appendElement('Gantt <b>columnDrop</b> event called<hr>');\n    }\n    function expanding() {\n        appendElement('Gantt <b>expanding</b> event called<hr>');\n    }\n    function expanded() {\n        appendElement('Gantt <b>expanded</b> event called<hr>');\n    }\n    function collapsing() {\n        appendElement('Gantt <b>collapsing</b> event called<hr>');\n    }\n    function collapsed() {\n        appendElement('Gantt <b>collapsed</b> event called<hr>');\n    }\n    function columnMenuClick() {\n        appendElement('Gantt <b>columnMenuClick</b> event called<hr>');\n    }\n    function columnMenuOpen(args) {\n        if (args.parentItem != null) {\n            args.element.querySelectorAll('li')[ganttChart.treeColumnIndex].style.display = 'none';\n        }\n        appendElement('Gantt <b>columnMenuOpen</b> event called<hr>');\n    }\n    function contextMenuClick() {\n        appendElement('Gantt <b>contextMenuClick</b> event called<hr>');\n    }\n    function contextMenuOpen() {\n        appendElement('Gantt <b>contextMenuOpen</b> event called<hr>');\n    }\n    function resizeStart() {\n        appendElement('Gantt <b>resizeStart</b> event called<hr>');\n    }\n    function resizing() {\n        appendElement('Gantt <b>resizing</b> event called<hr>');\n    }\n    function resizeStop() {\n        appendElement('Gantt <b>resizeStop</b> event called<hr>');\n    }\n    function splitterResizeStart() {\n        appendElement('Gantt <b>splitterResizeStart</b> event called<hr>');\n    }\n    function splitterResizing() {\n        appendElement('Gantt <b>splitterResizing</b> event called<hr>');\n    }\n    function splitterResized() {\n        appendElement('Gantt <b>splitterResized</b> event called<hr>');\n    }\n    function recordDoubleClick() {\n        appendElement('Gantt <b>recordDoubleClick</b> event called<hr>');\n    }\n    function onTaskbarClick() {\n        appendElement('Gantt <b>onTaskbarClick</b> event called<hr>');\n    }\n    function appendElement(html) {\n        var span = document.createElement('span');\n        span.innerHTML = html;\n        var log = document.getElementById('EventLog');\n        log.insertBefore(span, log.firstChild);\n    }\n\n    var Clear = new ej.buttons.Button();\n    Clear.appendTo('#clear');\n    document.getElementById('clear').onclick = function () {\n        document.getElementById('EventLog').innerHTML = '';\n    };\n"}