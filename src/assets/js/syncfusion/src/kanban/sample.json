{
    "name": "Kanban",
    "directory": "kanban",
    "category": "Data Visualization",
    "dataSourcePath": "src/kanban/datasource.js",
    "ftName" :"kanban",
    "type": "preview",
    "samples": [
        {
            "url": "overview",
            "name": "Overview",
            "category": "Kanban",
            "description":"The example is designed to enable most essential features such as templating, swimlane, toggling columns, tooltip, and more in JS Kanban board.",
            "api": { "Kanban": ["dataSource", "keyField", "columns", "fields"] }
        },
        {
            "url": "default",
            "name": "Default Functionalities",
            "category": "Kanban",
            "description": "The example demonstrates the default functionalities of JS Kanban with very minimal essential settings such as data source, columns, and card details.",
            "api": { "Kanban": ["dataSource", "keyField", "columns", "fields"] }
        },
        {
            "url": "swimlane",
            "name": "Swimlane",
            "category": "Kanban",
            "description": "The example explains how to configure swimlane and its related settings (sorting order, drag-and-drop, and more) in JavaScript Kanban board.",
            "api": { "Kanban": ["dataSource", "keyField", "columns", "fields", "swimlaneSettings"] }
        },
        {
            "url": "stacked-header",
            "name": "Stacked Header",
            "category": "Kanban",
            "description": "The example explains how to add a stacked header to group logically related columns above a column header in JS Kanban.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields", "stackedHeader"] }
        },
        {
            "url": "dialog-editing",
            "name": "Dialog Editing",
            "category": "Kanban",
            "description": "The example explains how to handle the CRUD (Create, Read, Update, and Delete) actions on the JS Kanban cards from the application end.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "local-data",
            "name": "Local Data",
            "category": "Data Binding",
            "description": "The example demonstrates how to bind data to the JavaScript Kanban board from the array of JavaScript objects (JSON) or instances of Data Manager.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "remote-data",
            "name": "Remote Data",
            "category": "Data Binding",
            "description": "The example demonstrates how to load data source from remote seervice to the JavaScript Kanban board using data manager.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "header-template",
            "name": "Header Template",
            "category": "Templates",
            "description": "The example demonstrates how to customize the column headers of the JS Kanban board with text, images, badges, and count using HTML templates.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "swimlane-template",
            "name": "Swimlane Template",
            "category": "Templates",
            "description": "The example demonstrates how to customize the swimlane headers of the JS Kanban board using HTML templates, which is applicable to all swimlane headers.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        }, 
        {
            "url": "card-template",
            "name": "Card Template",
            "category": "Templates",
            "description": "The example demonstrates how to customize the JavaScript Kanban cards using templates, which is used to design beautiful cards with text, images, and more.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "tooltip-template",
            "name": "Tooltip Template",
            "category": "Templates",
            "description": "The example demonstrates how to enable and disable the tooltip messages on JavaScript Kanban cards, and customize using templates.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields", "enableTooltip" ] }
        },
        {
            "url": "toggle-columns",
            "name": "Toggle Columns",
            "category": "Miscellaneous",
            "description": "This sample demonstrates the toggle column of JS Kanban, which is helpful to expand and collapse the columns and can be collapsed on page load also.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "show-hide",
            "name": "Show/Hide Columns",
            "category": "Miscellaneous",
            "description": "The example demonstrates how to show or hide the columns of JavaScript Kanban board dynamically, which is achieved from code using the public methods.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "api",
            "name": "API",
            "category": "Miscellaneous",
            "description": "The example showcases the important APIs of JavaScript Kanban in the property panel, which are used to manipulate the Kanban board dynamically.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        },
        {
            "url": "events",
            "name": "Events",
            "category": "Miscellaneous",
            "description": "The sample showcases the client-side events of JavaScript Kanban with event tracer, which is helpful to customize the Kanban board from application end.",
            "api": { "Kanban": [ "dataSource", "keyField", "columns", "fields" ] }
        }
    ]
}