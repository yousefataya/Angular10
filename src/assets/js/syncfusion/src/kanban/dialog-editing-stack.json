{"index.html":"<html><head><script src=\"//ej2.syncfusion.com/javascript/demos/kanban/dialog-editing/datasource.js\" type=\"text/javascript\"></script>\n<script src=\"https://cdn.syncfusion.com/ej2/dist/ej2.min.js\" type=\"text/javascript\"></script>\n    <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\">\n\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\">\n\n    <style>\n            body{\n                touch-action:none;\n            }\n        </style></head><body><div class=\"stackblitz-container {{theme}}\"><div class=\"col-lg-9 control-section\">\n    <div class=\"control_wrapper\">\n        <div id=\"container\">\n            <div id=\"Kanban\"></div>\n            <div id=\"Dialog\"></div>\n        </div>\n    </div>\n</div>\n<div class=\"col-lg-3 property-section\">\n    <table id=\"property\" title=\"Properties\">\n        <tbody><tr>\n            <td>\n                <div><button class=\"e-btn e-dialog-add\" id=\"addNew\">Add New Card</button></div>\n            </td>\n        </tr>\n    </tbody></table>\n</div>\n\n</div>\n<script id=\"dialogTemplate\" type=\"text/x-template\">\n     <form id='formId' novalidate=\"\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <div class=\"e-float-input e-control-wrapper\">\n                    <input id=\"Id\" name=\"Id\" type=\"text\" class=\"e-field\" value=\"${Id}\" disabled required/>\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text e-label-top\" for=\"Id\">Id</label>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <input type=\"text\" name=\"Status\" id=\"Status\" class=\"e-field\" value=${Status} required />\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <input name=\"Estimate\" id=\"Estimate\" class=\"e-field\" value=\"${Estimate}\" />\n            </div>\n            <div class=\"form-group col-md-6\">\n                <input type=\"text\" name=\"Assignee\" id=\"Assignee\" class=\"e-field\" value=${Assignee} /> \n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <div class=\"e-float-input e-control-wrapper\">\n                    <input id=\"Tags\" name=\"Tags\" type=\"text\" class=\"e-field\" value=\"${Tags}\" required/>\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text e-label-top\" for=\"Tags\">Tags</label>\n                </div>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <input type=\"text\" name=\"Priority\" id=\"Priority\" class=\"e-field\" value=${Priority} /> \n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-12\">\n                <div class=\"e-float-input e-control-wrapper\">\n                    <textarea type=\"text\" name=\"Summary\" id=\"Summary\" class=\"e-field\" value=${Summary}>${Summary}</textarea>\n                    <span class=\"e-float-line\"></span>\n                    <label class=\"e-float-text e-label-top\" for=\"Summary\">Summary</label>\n                </div>\n            </div>\n        </div>\n    </form>\n</script>\n<style>\n    #Dialog .e-dialog-delete {\n        float: left;\n    }\n\n    .e-dialog .e-dlg-header, .form-group {\n        padding-left: 6px;\n    }\n\n    .form-group {\n        padding-right: 6px;\n    }\n</style>\n\n</body></html>","index.js":"{{ripple}}\n    var data = ej.base.extend([], window.kanbanData, null, true); // To maintain the property changes, extend the object.\n    var kanbanObj = new ej.kanban.Kanban({\n        dataSource: data,\n        keyField: 'Status',\n        cardSettings: {\n            contentField: 'Summary',\n            headerField: 'Id',\n        },\n        columns: [\n            { headerText: 'To Do', keyField: 'Open' },\n            { headerText: 'In Progress', keyField: 'InProgress' },\n            { headerText: 'Testing', keyField: 'Testing' },\n            { headerText: 'Done', keyField: 'Close' }\n        ],\n        cardDoubleClick: onCardDoubleClick,\n    });\n    kanbanObj.appendTo('#Kanban');\n    var dialogObj;\n    var cardObj = {};\n    var curData;\n    var count = 31;\n    var statusData = ['Open', 'InProgress', 'Testing', 'Close'];\n    var assigneeData = ['Nancy Davloio', 'Andrew Fuller', 'Janet Leverling',\n        'Steven walker', 'Robert King', 'Margaret hamilt', 'Michael Suyama'];\n    var priorityData = ['Low', 'Normal', 'Critical', 'Release Breaker', 'High'];\n    function onCardDoubleClick(args) {\n        curData = args.data;\n        renderDialog(curData, 'Edit');\n    }\n    function renderDialog(args, action) {\n        dialogObj = new ej.popups.Dialog({\n            buttons: getDialogButtons(action),\n            content: getDialogContent(args, action),\n            header: ((action === 'Add') ? 'Add' : action === 'Edit' ? 'Edit' : 'Delete') + ' Card Details',\n            isModal: true,\n            target: document.body,\n            showCloseIcon: true,\n            beforeOpen: action === 'Delete' ? null : onBeforeDialogOpen.bind(this),\n            beforeClose: onBeforeDialogClose.bind(this),\n            width: (action === 'Delete') ? 400 : 600\n        });\n        dialogObj.appendTo('#Dialog');\n        if (action === 'Add') {\n            dialogObj.element.querySelector('#Id').removeAttribute('disabled');\n        }\n    }\n    function onBeforeDialogClose() {\n        cardObj = {};\n        var formInputs = getFormElements();\n        for (var i = 0; i < formInputs.length; i++) {\n            var input = formInputs[i];\n            var columnName = input.name || getColumnName(input);\n            if (!ej.base.isNullOrUndefined(columnName) && columnName !== '') {\n                var value = getValueFromElement(input);\n                cardObj[columnName] = value;\n            }\n        }\n        dialogObj.destroy();\n    }\n    function onBeforeDialogOpen(args) {\n        var numericObj = new ej.inputs.NumericTextBox({\n            value: curData.Estimate, placeholder: 'Estimate', floatLabelType: 'Always'\n        });\n        numericObj.appendTo(args.container.querySelector('#Estimate'));\n        var statusDropObj = new ej.dropdowns.DropDownList({\n            value: curData.Status, popupHeight: '300px', floatLabelType: 'Always',\n            dataSource: statusData, fields: { text: 'Status', value: 'Status' }, placeholder: 'Status'\n        });\n        statusDropObj.appendTo(args.container.querySelector('#Status'));\n        var assigneeDropObj = new ej.dropdowns.DropDownList({\n            value: curData.Assignee, popupHeight: '300px', floatLabelType: 'Always',\n            dataSource: assigneeData, fields: { text: 'Assignee', value: 'Assignee' }, placeholder: 'Assignee'\n        });\n        assigneeDropObj.appendTo(args.container.querySelector('#Assignee'));\n        var priorityObj = new ej.dropdowns.DropDownList({\n            value: curData.Priority, popupHeight: '300px', floatLabelType: 'Always',\n            dataSource: priorityData, fields: { text: 'Priority', value: 'Priority' }, placeholder: 'Priority'\n        });\n        priorityObj.appendTo(args.container.querySelector('#Priority'));\n    }\n    function getDialogButtons(action) {\n        var primaryButtonClass = action === 'Delete' ? 'e-dialog-yes' : action === 'Add' ? 'e-dialog-add' : 'e-dialog-edit';\n        var flatButtonClass = action === 'Delete' ? 'e-dialog-no' : 'e-dialog-cancel';\n        var dialogButtons = [\n            {\n                buttonModel: {\n                    cssClass: 'e-flat ' + primaryButtonClass, isPrimary: true,\n                    content: action === 'Add' || action === 'Edit' ? 'Save' : 'Yes'\n                },\n                type: action === 'Add' || action === 'Edit' ? 'submit' : 'button',\n                click: dialogButtonClick.bind(this)\n            }, {\n                buttonModel: {\n                    cssClass: 'e-flat ' + flatButtonClass, isPrimary: false,\n                    content: action === 'Add' || action === 'Edit' ? 'Cancel' : 'No'\n                },\n                click: dialogButtonClick.bind(this)\n            }\n        ];\n        if (action === 'Edit') {\n            var deleteButton = {\n                buttonModel: { cssClass: 'e-flat e-dialog-delete', isPrimary: false, content: 'Delete' },\n                click: dialogButtonClick.bind(this)\n            };\n            dialogButtons.splice(0, 0, deleteButton);\n        }\n        return dialogButtons;\n    }\n    function getDialogContent(args, action) {\n        if (action === 'Delete') {\n            return 'Are you sure you want to delete this card ?';\n        }\n        else {\n            var ele = ej.base.createElement('div', { id: 'dialogContent' });\n            document.querySelector('#container').appendChild(ele);\n            ej.base.append(kanbanObj.templateParser('#dialogTemplate')(args), ele);\n            return ele;\n        }\n    }\n    function getFormElements() {\n        var elements = [].slice.call(document.querySelectorAll('.e-field'));\n        var validElements = [];\n        for (var i = 0; i < elements.length; i++) {\n            var element = elements[i];\n            if (element.classList.contains('e-control')) {\n                validElements.push(element);\n            }\n            else if (element.querySelector('.e-control')) {\n                validElements.push(element.querySelector('.e-control'));\n            }\n            else {\n                validElements.push(element);\n            }\n        }\n        return validElements;\n    }\n    function getColumnName(element) {\n        var attrName = element.getAttribute('data-name') || '';\n        if (attrName === '') {\n            var isDropDowns = false;\n            var fieldSelector = '';\n            if (element.classList.contains('e-dropdownlist')) {\n                fieldSelector = 'e-ddl';\n                isDropDowns = true;\n            }\n            else if (element.classList.contains('e-numerictextbox')) {\n                fieldSelector = 'e-numeric';\n            }\n            var classSelector = isDropDowns ? \".\" + fieldSelector + \":not(.e-control)\" : \".\" + fieldSelector;\n            var control = ej.base.closest(element, classSelector) || element.querySelector(\".\" + fieldSelector);\n            if (control) {\n                var attrEle = control.querySelector('[name]');\n                if (attrEle) {\n                    attrName = attrEle.name;\n                }\n            }\n        }\n        return attrName;\n    }\n    function getValueFromElement(element) {\n        var value;\n        var instance = element.ej_instances;\n        if (instance && instance.length > 0) {\n            value = instance[0].value ||\n                instance[0].checked;\n        }\n        else {\n            value = element.value;\n        }\n        return value;\n    }\n    function dialogButtonClick(event) {\n        var target = event.target.cloneNode(true);\n        dialogObj.hide();\n        var cardData = ej.base.extend({}, cardObj, null, true);\n        if (target.classList.contains('e-dialog-add') || target.classList.contains('e-dialog-edit')) {\n            if (target.classList.contains('e-dialog-add')) {\n                kanbanObj.addCard(cardData);\n                count++;\n            }\n            else {\n                kanbanObj.updateCard(cardData);\n            }\n        }\n        else if (target.classList.contains('e-dialog-yes')) {\n            kanbanObj.deleteCard(curData.Id);\n        }\n        else if (target.classList.contains('e-dialog-no')) {\n            renderDialog(curData, 'Edit');\n        }\n        else if (target.classList.contains('e-dialog-delete')) {\n            renderDialog(null, 'Delete');\n        }\n    }\n    document.getElementById('addNew').onclick = function (e) {\n        curData = {\n            Id: 'Task ' + count, Status: 'Open', Priority: '', Assignee: 'Andrew Fuller', Estimate: 0, Tags: '', Summary: ''\n        };\n        renderDialog(curData, 'Add');\n    };\n"}